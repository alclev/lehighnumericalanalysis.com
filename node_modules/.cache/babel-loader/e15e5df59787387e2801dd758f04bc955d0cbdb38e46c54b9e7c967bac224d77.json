{"ast":null,"code":"var _jsxFileName = \"/Users/alexclevenger/lehighnumericalanalysis.com/src/demo.js\";\nimport './demo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Demo() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matrix-format-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Your Matrix File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"In order for the program to read the file, it must be formatted in the following way:\", /*#__PURE__*/_jsxDEV(\"ol\", {\n          style: {\n            textAlign: \"left\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Number of matrices\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Dimensions separated by commas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Elements separated by commas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"left\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 18\n          }, this), \"The following is the proper format for a file containing a single 2 x 2 matrix with 1 and 2 in the first row and 3 and 4 in the second row:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 18\n          }, this), \"1\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), \"2,2\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), \"1,2,3,4\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"file-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-cloud-upload-alt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), \" Choose File\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"file-input\",\n      type: \"file\",\n      name: \"file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Demo;\nexport default Demo;\nvar _c;\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Demo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","htmlFor","id","type","name","_c","$RefreshReg$"],"sources":["/Users/alexclevenger/lehighnumericalanalysis.com/src/demo.js"],"sourcesContent":["import './demo.css'\n\nfunction Demo() {\n  return (\n    <div className=\"file-upload\">\n      <div className=\"matrix-format-box\">\n        <h2>Upload Your Matrix File</h2>\n        <p>In order for the program to read the file, it must be formatted in the following way:\n        <ol style={{textAlign: \"left\"}}>\n            <li>Number of matrices</li>\n            <li>Dimensions separated by commas</li>\n            <li>Elements separated by commas</li>\n          </ol>\n          <h3>Example</h3>\n          <div style={{textAlign: \"left\"}}>\n            \n            <br/><br/>The following is the proper format for a file containing a single 2 x 2 matrix with 1 and 2 in the first row and 3 and 4 in the second row:\n            <br/><br/>1\n            <br/>2,2\n            <br/>1,2,3,4\n          </div> \n        </p>\n      </div>\n      <label htmlFor=\"file-input\">\n        <i className=\"fas fa-cloud-upload-alt\"></i> Choose File\n      </label>\n      <input id=\"file-input\" type=\"file\" name=\"file\"/>\n      <button type=\"submit\">Upload</button>\n    </div>\n  );\n}\n\n\nexport default Demo;\n"],"mappings":";AAAA,OAAO,YAAY;AAAA,SAAAA,MAAA,IAAAC,OAAA;AAEnB,SAASC,IAAIA,CAAA,EAAG;EACd,oBACED,OAAA;IAAKE,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BH,OAAA;MAAKE,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCH,OAAA;QAAAG,QAAA,EAAI;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAChCP,OAAA;QAAAG,QAAA,GAAG,uFACH,eAAAH,OAAA;UAAIQ,KAAK,EAAE;YAACC,SAAS,EAAE;UAAM,CAAE;UAAAN,QAAA,gBAC3BH,OAAA;YAAAG,QAAA,EAAI;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eAC3BP,OAAA;YAAAG,QAAA,EAAI;UAA8B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eACvCP,OAAA;YAAAG,QAAA,EAAI;UAA4B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAClC,eACLP,OAAA;UAAAG,QAAA,EAAI;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAChBP,OAAA;UAAKQ,KAAK,EAAE;YAACC,SAAS,EAAE;UAAM,CAAE;UAAAN,QAAA,gBAE9BH,OAAA;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eAAAP,OAAA;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,+IACV,eAAAP,OAAA;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eAAAP,OAAA;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,KACV,eAAAP,OAAA;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,OACL,eAAAP,OAAA;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,WACP;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA,eACNP,OAAA;MAAOU,OAAO,EAAC,YAAY;MAAAP,QAAA,gBACzBH,OAAA;QAAGE,SAAS,EAAC;MAAyB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,gBAC7C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACRP,OAAA;MAAOW,EAAE,EAAC,YAAY;MAACC,IAAI,EAAC,MAAM;MAACC,IAAI,EAAC;IAAM;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAChDP,OAAA;MAAQY,IAAI,EAAC,QAAQ;MAAAT,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACjC;AAEV;AAACO,EAAA,GA5BQb,IAAI;AA+Bb,eAAeA,IAAI;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}