{"ast":null,"code":"var _jsxFileName = \"/Users/alexclevenger/lehighnumericalanalysis.com/src/demo.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { parseMatrix, drawMatrix } from './dataPackaging';\nimport './demo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Demo() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [filename, setFilename] = useState(null);\n  const [buttonColor, setButtonColor] = useState(\"#CCCCCC\");\n  const [isValidMatrix, setIsValidMatrix] = useState(true); // assuming it is initially valid\n  const [canvasRef, setCanvasRef] = useState(null);\n  const handleFileInputChange = event => {\n    setSelectedFile(event.target.files[0]);\n    setFilename(event.target.files[0].name);\n    setButtonColor(\"#4CAF50\");\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const reader = new FileReader();\n    reader.readAsText(selectedFile);\n    reader.onload = event => {\n      const matrixData = event.target.result;\n      const isValid = parseMatrix(matrixData);\n      setButtonColor(isValid ? \"#4CAF50\" : \"#CCCCCC\");\n      setIsValidMatrix(isValid);\n      if (isValid) {\n        const canvas = document.getElementById('matrix-canvas');\n        const ctx = canvas.getContext('2d');\n        drawMatrix(matrixData, canvas, ctx);\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matrix-format-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Your Matrix File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"In order for the program to read the file, it must be formatted in the following way for ONE matrix:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          style: {\n            textAlign: \"left\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Dimensions separated by commas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Elements separated by commas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"left\"\n          },\n          children: [\"The following is the proper format for a file containing a single 2 x 2 matrix with 1 and 2 in the first row and 3 and 4 in the second row:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: [\"2,2\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), \"1,2,3,4\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-input\",\n        className: isValidMatrix ? \"file-input\" : \"file-input file-invalid\",\n        style: {\n          backgroundColor: buttonColor\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-cloud-upload-alt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), \" \", filename || \"Choose File\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file-input\",\n        type: \"file\",\n        name: \"file\",\n        onChange: handleFileInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"file-input\",\n        style: {\n          backgroundColor: buttonColor\n        },\n        disabled: !selectedFile,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), !isValidMatrix && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        marginTop: \"10px\"\n      },\n      children: \"The uploaded file does not contain a valid matrix. Please ensure that it is formatted correctly and is less than or equal to 25x25.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), isValidMatrix && /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvas => setCanvasRef(canvas),\n      style: {\n        maxWidth: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Demo, \"X+KYrN/OEFsjuo9X/hVsNcCmNOA=\");\n_c = Demo;\nexport default Demo;\nvar _c;\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"names":["useState","parseMatrix","drawMatrix","jsxDEV","_jsxDEV","Demo","_s","selectedFile","setSelectedFile","filename","setFilename","buttonColor","setButtonColor","isValidMatrix","setIsValidMatrix","canvasRef","setCanvasRef","handleFileInputChange","event","target","files","name","handleSubmit","preventDefault","reader","FileReader","readAsText","onload","matrixData","result","isValid","canvas","document","getElementById","ctx","getContext","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","onSubmit","htmlFor","backgroundColor","id","type","onChange","disabled","color","marginTop","ref","maxWidth","_c","$RefreshReg$"],"sources":["/Users/alexclevenger/lehighnumericalanalysis.com/src/demo.js"],"sourcesContent":["import { useState } from 'react';\nimport { parseMatrix, drawMatrix } from './dataPackaging';\nimport './demo.css';\n\nfunction Demo() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [filename, setFilename] = useState(null);\n  const [buttonColor, setButtonColor] = useState(\"#CCCCCC\");\n  const [isValidMatrix, setIsValidMatrix] = useState(true); // assuming it is initially valid\n  const [canvasRef, setCanvasRef] = useState(null);\n\n  const handleFileInputChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n    setFilename(event.target.files[0].name);\n    setButtonColor(\"#4CAF50\");\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const reader = new FileReader();\n    reader.readAsText(selectedFile);\n    reader.onload = (event) => {\n      const matrixData = event.target.result;\n      const isValid = parseMatrix(matrixData);\n      setButtonColor(isValid ? \"#4CAF50\" : \"#CCCCCC\");\n      setIsValidMatrix(isValid);\n      if (isValid) {\n        const canvas = document.getElementById('matrix-canvas');\n        const ctx = canvas.getContext('2d');\n        drawMatrix(matrixData, canvas, ctx);\n      }\n    };\n  };\n  \n\n  return (\n    <div className=\"file-upload\">\n      <div className=\"matrix-format-box\">\n        <h2>Upload Your Matrix File</h2>\n        <div>\n          <p>In order for the program to read the file, it must be formatted in the following way for ONE matrix:</p>\n          <ol style={{ textAlign: \"left\" }}>\n            <li>Dimensions separated by commas</li>\n            <li>Elements separated by commas</li>\n          </ol>\n          <h3>Example</h3>\n          <div style={{ textAlign: \"left\" }}>\n            The following is the proper format for a file containing a single 2 x 2 matrix with 1 and 2 in the first row and 3 and 4 in the second row:\n            <br />\n            <pre>\n              2,2\n              <br />\n              1,2,3,4\n            </pre>\n          </div>\n        </div>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"file-input\" className={isValidMatrix ? \"file-input\" : \"file-input file-invalid\"} style={{ backgroundColor: buttonColor }}>\n          <i className=\"fas fa-cloud-upload-alt\"></i> {filename || \"Choose File\"}\n        </label>\n        <input id=\"file-input\" type=\"file\" name=\"file\" onChange={handleFileInputChange} />\n        <button type=\"submit\" className=\"file-input\" style={{ backgroundColor: buttonColor }} disabled={!selectedFile}>Upload</button>\n      </form>\n      {!isValidMatrix && (\n        <p style={{ color: \"red\", marginTop: \"10px\" }}>\n          The uploaded file does not contain a valid matrix. Please ensure that it is formatted correctly and is less than or equal to 25x25.\n        </p>\n      )}\n      {isValidMatrix && (\n        <canvas ref={canvas => setCanvasRef(canvas)} style={{ maxWidth: \"100%\" }}></canvas>\n\n      )}\n    </div>\n  );\n}\n\nexport default Demo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}