{"ast":null,"code":"export var dim_LIMIT = 25;\nexport function drawMatrix(matrix_data) {\n  // Get the elme\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n\n  // Set the size of the canvas to fit the matrix\n  canvas.width = num_cols * 50;\n  canvas.height = num_rows * 50;\n\n  // Iterate through the rows and columns of the matrix\n  for (let i = 0; i < num_rows; i++) {\n    for (let j = 0; j < num_cols; j++) {\n      // Draw a cell with a border\n      ctx.beginPath();\n      ctx.rect(j * 50, i * 50, 50, 50);\n      ctx.stroke();\n\n      // Display the element of the matrix in the cell\n      ctx.font = '24px Arial';\n      ctx.fillStyle = 'grey';\n      ctx.textAlign = 'center';\n      ctx.fillText(matrix_data[i * num_cols + j], j * 50 + 25, i * 50 + 35);\n    }\n  }\n  return canvas;\n}\n\n// Returns true or false depending on whether matrix is correct format\nexport function parseMatrix(matrix) {\n  // Check dimensions\n  const dimensions = matrix.split('\\n')[0];\n  const num_rows = parseInt(dimensions.split(',')[0]);\n  const num_cols = parseInt(dimensions.split(',')[1]);\n  if (isNaN(num_rows) || isNaN(num_cols)) {\n    return false;\n  }\n  if (num_rows > dim_LIMIT || num_cols > dim_LIMIT) {\n    return false;\n  }\n  // Check elements\n  const elements = matrix.split('\\n')[1];\n  const elements_array = elements.split(',');\n  if (elements_array.length !== num_rows * num_cols) {\n    return false;\n  }\n  for (let i = 0; i < elements_array.length; i++) {\n    if (isNaN(parseInt(elements_array[i]))) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Define an array of button data, where each item contains a button label and a function ID\nconst buttonData = [\n// Basic opertions (0x10 - 0x1F)\n{\n  label: 'Add',\n  func_id: 0x10\n}, {\n  label: 'Multiply',\n  func_id: 0x11\n}, {\n  label: 'Transpose',\n  func_id: 0x12\n}, {\n  label: 'Inverse',\n  func_id: 0x13\n},\n// Direct methods for solving (0x20 - 0x2F)\n{\n  label: 'Gauss Elimination',\n  func_id: 0x20\n}, {\n  label: 'Blank',\n  func_id: 0x21\n}, {\n  label: 'Blank',\n  func_id: 0x22\n}, {\n  label: 'Blank',\n  func_id: 0x23\n},\n// Indirect methods for solving (0x30 - 0x3F)\n{\n  label: 'Jacobi Method',\n  func_id: 0x30\n}, {\n  label: 'Blank',\n  func_id: 0x31\n}, {\n  label: 'Blank',\n  func_id: 0x32\n}, {\n  label: 'Blank',\n  func_id: 0x33\n},\n// Preconditioner (0x40 - 0x4F)\n{\n  label: 'Blank',\n  func_id: 0x40\n}, {\n  label: 'Blank',\n  func_id: 0x41\n}, {\n  label: 'Blank',\n  func_id: 0x42\n}, {\n  label: 'Blank',\n  func_id: 0x43\n}, {\n  label: 'Gauss Elimination',\n  func_id: 3\n}];\nexport default buttonData;","map":{"version":3,"names":["dim_LIMIT","drawMatrix","matrix_data","canvas","document","createElement","ctx","getContext","width","num_cols","height","num_rows","i","j","beginPath","rect","stroke","font","fillStyle","textAlign","fillText","parseMatrix","matrix","dimensions","split","parseInt","isNaN","elements","elements_array","length","buttonData","label","func_id"],"sources":["/Users/alexclevenger/lehighnumericalanalysis.com/src/dataPackaging.js"],"sourcesContent":["export var dim_LIMIT = 25;\n\nexport function drawMatrix(matrix_data) {\n  // Get the elme\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n  \n    // Set the size of the canvas to fit the matrix\n    canvas.width = num_cols * 50;\n    canvas.height = num_rows * 50;\n  \n    // Iterate through the rows and columns of the matrix\n    for (let i = 0; i < num_rows; i++) {\n      for (let j = 0; j < num_cols; j++) {\n        // Draw a cell with a border\n        ctx.beginPath();\n        ctx.rect(j * 50, i * 50, 50, 50);\n        ctx.stroke();\n  \n        // Display the element of the matrix in the cell\n        ctx.font = '24px Arial';\n        ctx.fillStyle = 'grey';\n        ctx.textAlign = 'center';\n        ctx.fillText(matrix_data[i * num_cols + j], j * 50 + 25, i * 50 + 35);\n      }\n    }\n    return canvas;\n  }\n\n  // Returns true or false depending on whether matrix is correct format\nexport function parseMatrix(matrix) {\n    // Check dimensions\n    const dimensions = matrix.split('\\n')[0];\n    const num_rows = parseInt(dimensions.split(',')[0]);\n    const num_cols = parseInt(dimensions.split(',')[1]);\n    if (isNaN(num_rows) || isNaN(num_cols)) {\n      return false;\n    }\n    if (num_rows > dim_LIMIT || num_cols > dim_LIMIT) {\n      return false;\n    }\n    // Check elements\n    const elements = matrix.split('\\n')[1];\n    const elements_array = elements.split(',');\n    if (elements_array.length !== num_rows * num_cols) {\n      return false;\n    }\n    for (let i = 0; i < elements_array.length; i++) {\n      if (isNaN(parseInt(elements_array[i]))) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n// Define an array of button data, where each item contains a button label and a function ID\nconst buttonData = [\n// Basic opertions (0x10 - 0x1F)\n  { label: 'Add', func_id: 0x10 },\n  { label: 'Multiply', func_id: 0x11 },\n  { label: 'Transpose', func_id: 0x12 },\n  { label: 'Inverse', func_id: 0x13 },\n// Direct methods for solving (0x20 - 0x2F)\n  { label: 'Gauss Elimination', func_id: 0x20 },\n  { label: 'Blank', func_id: 0x21 },\n  { label: 'Blank', func_id: 0x22 },\n  { label: 'Blank', func_id: 0x23 },\n// Indirect methods for solving (0x30 - 0x3F)\n  { label: 'Jacobi Method', func_id: 0x30 },\n  { label: 'Blank', func_id: 0x31 },\n  { label: 'Blank', func_id: 0x32 },\n  { label: 'Blank', func_id: 0x33 },\n// Preconditioner (0x40 - 0x4F)\n  { label: 'Blank', func_id: 0x40 },\n  { label: 'Blank', func_id: 0x41 },\n  { label: 'Blank', func_id: 0x42 },\n  { label: 'Blank', func_id: 0x43 },\n  \n\n  { label: 'Gauss Elimination', func_id: 3 },\n];\nexport default buttonData;\n\n\n\n\n"],"mappings":"AAAA,OAAO,IAAIA,SAAS,GAAG,EAAE;AAEzB,OAAO,SAASC,UAAUA,CAACC,WAAW,EAAE;EACtC;EACE,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAC/C,MAAMC,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;;EAEnC;EACAJ,MAAM,CAACK,KAAK,GAAGC,QAAQ,GAAG,EAAE;EAC5BN,MAAM,CAACO,MAAM,GAAGC,QAAQ,GAAG,EAAE;;EAE7B;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;IACjC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,QAAQ,EAAEI,CAAC,EAAE,EAAE;MACjC;MACAP,GAAG,CAACQ,SAAS,EAAE;MACfR,GAAG,CAACS,IAAI,CAACF,CAAC,GAAG,EAAE,EAAED,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAChCN,GAAG,CAACU,MAAM,EAAE;;MAEZ;MACAV,GAAG,CAACW,IAAI,GAAG,YAAY;MACvBX,GAAG,CAACY,SAAS,GAAG,MAAM;MACtBZ,GAAG,CAACa,SAAS,GAAG,QAAQ;MACxBb,GAAG,CAACc,QAAQ,CAAClB,WAAW,CAACU,CAAC,GAAGH,QAAQ,GAAGI,CAAC,CAAC,EAAEA,CAAC,GAAG,EAAE,GAAG,EAAE,EAAED,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;IACvE;EACF;EACA,OAAOT,MAAM;AACf;;AAEA;AACF,OAAO,SAASkB,WAAWA,CAACC,MAAM,EAAE;EAChC;EACA,MAAMC,UAAU,GAAGD,MAAM,CAACE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACxC,MAAMb,QAAQ,GAAGc,QAAQ,CAACF,UAAU,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACnD,MAAMf,QAAQ,GAAGgB,QAAQ,CAACF,UAAU,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACnD,IAAIE,KAAK,CAACf,QAAQ,CAAC,IAAIe,KAAK,CAACjB,QAAQ,CAAC,EAAE;IACtC,OAAO,KAAK;EACd;EACA,IAAIE,QAAQ,GAAGX,SAAS,IAAIS,QAAQ,GAAGT,SAAS,EAAE;IAChD,OAAO,KAAK;EACd;EACA;EACA,MAAM2B,QAAQ,GAAGL,MAAM,CAACE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACtC,MAAMI,cAAc,GAAGD,QAAQ,CAACH,KAAK,CAAC,GAAG,CAAC;EAC1C,IAAII,cAAc,CAACC,MAAM,KAAKlB,QAAQ,GAAGF,QAAQ,EAAE;IACjD,OAAO,KAAK;EACd;EACA,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgB,cAAc,CAACC,MAAM,EAAEjB,CAAC,EAAE,EAAE;IAC9C,IAAIc,KAAK,CAACD,QAAQ,CAACG,cAAc,CAAChB,CAAC,CAAC,CAAC,CAAC,EAAE;MACtC,OAAO,KAAK;IACd;EACF;EACA,OAAO,IAAI;AACb;;AAEF;AACA,MAAMkB,UAAU,GAAG;AACnB;AACE;EAAEC,KAAK,EAAE,KAAK;EAAEC,OAAO,EAAE;AAAK,CAAC,EAC/B;EAAED,KAAK,EAAE,UAAU;EAAEC,OAAO,EAAE;AAAK,CAAC,EACpC;EAAED,KAAK,EAAE,WAAW;EAAEC,OAAO,EAAE;AAAK,CAAC,EACrC;EAAED,KAAK,EAAE,SAAS;EAAEC,OAAO,EAAE;AAAK,CAAC;AACrC;AACE;EAAED,KAAK,EAAE,mBAAmB;EAAEC,OAAO,EAAE;AAAK,CAAC,EAC7C;EAAED,KAAK,EAAE,OAAO;EAAEC,OAAO,EAAE;AAAK,CAAC,EACjC;EAAED,KAAK,EAAE,OAAO;EAAEC,OAAO,EAAE;AAAK,CAAC,EACjC;EAAED,KAAK,EAAE,OAAO;EAAEC,OAAO,EAAE;AAAK,CAAC;AACnC;AACE;EAAED,KAAK,EAAE,eAAe;EAAEC,OAAO,EAAE;AAAK,CAAC,EACzC;EAAED,KAAK,EAAE,OAAO;EAAEC,OAAO,EAAE;AAAK,CAAC,EACjC;EAAED,KAAK,EAAE,OAAO;EAAEC,OAAO,EAAE;AAAK,CAAC,EACjC;EAAED,KAAK,EAAE,OAAO;EAAEC,OAAO,EAAE;AAAK,CAAC;AACnC;AACE;EAAED,KAAK,EAAE,OAAO;EAAEC,OAAO,EAAE;AAAK,CAAC,EACjC;EAAED,KAAK,EAAE,OAAO;EAAEC,OAAO,EAAE;AAAK,CAAC,EACjC;EAAED,KAAK,EAAE,OAAO;EAAEC,OAAO,EAAE;AAAK,CAAC,EACjC;EAAED,KAAK,EAAE,OAAO;EAAEC,OAAO,EAAE;AAAK,CAAC,EAGjC;EAAED,KAAK,EAAE,mBAAmB;EAAEC,OAAO,EAAE;AAAE,CAAC,CAC3C;AACD,eAAeF,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}