{"ast":null,"code":"var _jsxFileName = \"/Users/alexclevenger/lehighnumericalanalysis.com/src/demo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Demo() {\n  _s();\n  const [wasmModule, setWasmModule] = useState(null);\n  useEffect(() => {\n    const loadWasm = async () => {\n      const response = await fetch('add.wasm');\n      const wasmBinary = await response.arrayBuffer();\n      const wasmModule = await WebAssembly.instantiate(wasmBinary, {});\n      setWasmModule(wasmModule);\n    };\n    loadWasm();\n  }, []);\n  const add = (a, b) => {\n    if (!wasmModule) {\n      return 'Loading...';\n    }\n    return wasmModule.instance.exports.add(a, b);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WebAssembly Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"2 + 3 = \", add(2, 3)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Demo, \"RM2QgIXX97g2sneFELw5KH0j6fs=\");\n_c = Demo;\nexport default Demo;\nvar _c;\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Demo","_s","wasmModule","setWasmModule","loadWasm","response","fetch","wasmBinary","arrayBuffer","WebAssembly","instantiate","add","a","b","instance","exports","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alexclevenger/lehighnumericalanalysis.com/src/demo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Demo() {\n  const [wasmModule, setWasmModule] = useState(null);\n\n  useEffect(() => {\n    const loadWasm = async () => {\n      const response = await fetch('add.wasm');\n      const wasmBinary = await response.arrayBuffer();\n      const wasmModule = await WebAssembly.instantiate(wasmBinary, {});\n      setWasmModule(wasmModule);\n    };\n\n    loadWasm();\n  }, []);\n\n  const add = (a, b) => {\n    if (!wasmModule) {\n      return 'Loading...';\n    }\n\n    return wasmModule.instance.exports.add(a, b);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>WebAssembly Example</h1>\n      <p>2 + 3 = {add(2, 3)}</p>\n    </div>\n  );\n}\nexport default Demo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMO,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAU,CAAC;MACxC,MAAMC,UAAU,GAAG,MAAMF,QAAQ,CAACG,WAAW,EAAE;MAC/C,MAAMN,UAAU,GAAG,MAAMO,WAAW,CAACC,WAAW,CAACH,UAAU,EAAE,CAAC,CAAC,CAAC;MAChEJ,aAAa,CAACD,UAAU,CAAC;IAC3B,CAAC;IAEDE,QAAQ,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,GAAG,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;IACpB,IAAI,CAACX,UAAU,EAAE;MACf,OAAO,YAAY;IACrB;IAEA,OAAOA,UAAU,CAACY,QAAQ,CAACC,OAAO,CAACJ,GAAG,CAACC,CAAC,EAAEC,CAAC,CAAC;EAC9C,CAAC;EAED,oBACEd,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlB,OAAA;MAAAkB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC5BtB,OAAA;MAAAkB,QAAA,GAAG,UAAQ,EAACN,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACtB;AAEV;AAACpB,EAAA,CA5BQD,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AA6Bb,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}