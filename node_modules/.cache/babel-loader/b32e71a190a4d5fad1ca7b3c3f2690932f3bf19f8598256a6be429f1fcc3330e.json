{"ast":null,"code":"// include: shell.js\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = typeof Module != 'undefined' ? Module : {};\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = Object.assign({}, Module);\nvar arguments_ = [];\nvar thisProgram = './this.program';\nvar quit_ = (status, toThrow) => {\n  throw toThrow;\n};\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n\nvar ENVIRONMENT_IS_WEB = true;\nvar ENVIRONMENT_IS_WORKER = false;\nvar ENVIRONMENT_IS_NODE = false;\nvar ENVIRONMENT_IS_SHELL = false;\nif (Module['ENVIRONMENT']) {\n  throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)');\n}\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = '';\nfunction locateFile(path) {\n  if (Module['locateFile']) {\n    return Module['locateFile'](path, scriptDirectory);\n  }\n  return scriptDirectory + path;\n}\n\n// Hooks that are implemented differently in different runtime environments.\nvar read_, readAsync, readBinary, setWindowTitle;\nif (ENVIRONMENT_IS_SHELL) {\n  if (typeof process == 'object' && typeof require === 'function' || typeof window == 'object' || typeof importScripts == 'function') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n  if (typeof read != 'undefined') {\n    read_ = function shell_read(f) {\n      return read(f);\n    };\n  }\n  readBinary = function readBinary(f) {\n    let data;\n    if (typeof readbuffer == 'function') {\n      return new Uint8Array(readbuffer(f));\n    }\n    data = read(f, 'binary');\n    assert(typeof data == 'object');\n    return data;\n  };\n  readAsync = function readAsync(f, onload, onerror) {\n    setTimeout(() => onload(readBinary(f)), 0);\n  };\n  if (typeof clearTimeout == 'undefined') {\n    globalThis.clearTimeout = id => {};\n  }\n  if (typeof scriptArgs != 'undefined') {\n    arguments_ = scriptArgs;\n  } else if (typeof arguments != 'undefined') {\n    arguments_ = arguments;\n  }\n  if (typeof quit == 'function') {\n    quit_ = (status, toThrow) => {\n      // Unlike node which has process.exitCode, d8 has no such mechanism. So we\n      // have no way to set the exit code and then let the program exit with\n      // that code when it naturally stops running (say, when all setTimeouts\n      // have completed). For that reason, we must call `quit` - the only way to\n      // set the exit code - but quit also halts immediately.  To increase\n      // consistency with node (and the web) we schedule the actual quit call\n      // using a setTimeout to give the current stack and any exception handlers\n      // a chance to run.  This enables features such as addOnPostRun (which\n      // expected to be able to run code after main returns).\n      setTimeout(() => {\n        if (!(toThrow instanceof ExitStatus)) {\n          let toLog = toThrow;\n          if (toThrow && typeof toThrow == 'object' && toThrow.stack) {\n            toLog = [toThrow, toThrow.stack];\n          }\n          err('exiting due to exception: ' + toLog);\n        }\n        quit(status);\n      });\n      throw toThrow;\n    };\n  }\n  if (typeof print != 'undefined') {\n    // Prefer to use print/printErr where they exist, as they usually work better.\n    if (typeof console == 'undefined') console = /** @type{!Console} */{};\n    console.log = /** @type{!function(this:Console, ...*): undefined} */print;\n    console.warn = console.error = /** @type{!function(this:Console, ...*): undefined} */typeof printErr != 'undefined' ? printErr : print;\n  }\n} else\n  // Note that this includes Node.js workers when relevant (pthreads is enabled).\n  // Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\n  // ENVIRONMENT_IS_NODE.\n  if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n    if (ENVIRONMENT_IS_WORKER) {\n      // Check worker, not web, since window could be polyfilled\n      scriptDirectory = self.location.href;\n    } else if (typeof document != 'undefined' && document.currentScript) {\n      // web\n      scriptDirectory = document.currentScript.src;\n    }\n    // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n    // otherwise, slice off the final part of the url to find the script directory.\n    // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n    // and scriptDirectory will correctly be replaced with an empty string.\n    // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\n    // they are removed because they could contain a slash.\n    if (scriptDirectory.indexOf('blob:') !== 0) {\n      scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf('/') + 1);\n    } else {\n      scriptDirectory = '';\n    }\n    if (!(typeof window == 'object' || typeof importScripts == 'function')) throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n    // Differentiate the Web Worker from the Node Worker case, as reading must\n    // be done differently.\n    {\n      // include: web_or_worker_shell_read.js\n      read_ = url => {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, false);\n        xhr.send(null);\n        return xhr.responseText;\n      };\n      if (ENVIRONMENT_IS_WORKER) {\n        readBinary = url => {\n          var xhr = new XMLHttpRequest();\n          xhr.open('GET', url, false);\n          xhr.responseType = 'arraybuffer';\n          xhr.send(null);\n          return new Uint8Array( /** @type{!ArrayBuffer} */xhr.response);\n        };\n      }\n      readAsync = (url, onload, onerror) => {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, true);\n        xhr.responseType = 'arraybuffer';\n        xhr.onload = () => {\n          if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n            // file URLs can return 0\n            onload(xhr.response);\n            return;\n          }\n          onerror();\n        };\n        xhr.onerror = onerror;\n        xhr.send(null);\n      };\n\n      // end include: web_or_worker_shell_read.js\n    }\n\n    setWindowTitle = title => document.title = title;\n  } else {\n    throw new Error('environment detection error');\n  }\nvar out = Module['print'] || console.log.bind(console);\nvar err = Module['printErr'] || console.warn.bind(console);\n\n// Merge back in the overrides\nObject.assign(Module, moduleOverrides);\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\nmoduleOverrides = null;\ncheckIncomingModuleAPI();\n\n// Emit code to handle expected values on the Module object. This applies Module.x\n// to the proper local x. This has two benefits: first, we only emit it if it is\n// expected to arrive, and second, by using a local everywhere else that can be\n// minified.\n\nif (Module['arguments']) arguments_ = Module['arguments'];\nlegacyModuleProp('arguments', 'arguments_');\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];\nlegacyModuleProp('thisProgram', 'thisProgram');\nif (Module['quit']) quit_ = Module['quit'];\nlegacyModuleProp('quit', 'quit_');\n\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\n// Assertions on removed incoming Module JS APIs.\nassert(typeof Module['memoryInitializerPrefixURL'] == 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['pthreadMainPrefixURL'] == 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['cdInitializerPrefixURL'] == 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['filePackagePrefixURL'] == 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['read'] == 'undefined', 'Module.read option was removed (modify read_ in JS)');\nassert(typeof Module['readAsync'] == 'undefined', 'Module.readAsync option was removed (modify readAsync in JS)');\nassert(typeof Module['readBinary'] == 'undefined', 'Module.readBinary option was removed (modify readBinary in JS)');\nassert(typeof Module['setWindowTitle'] == 'undefined', 'Module.setWindowTitle option was removed (modify setWindowTitle in JS)');\nassert(typeof Module['TOTAL_MEMORY'] == 'undefined', 'Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY');\nlegacyModuleProp('read', 'read_');\nlegacyModuleProp('readAsync', 'readAsync');\nlegacyModuleProp('readBinary', 'readBinary');\nlegacyModuleProp('setWindowTitle', 'setWindowTitle');\nvar IDBFS = 'IDBFS is no longer included by default; build with -lidbfs.js';\nvar PROXYFS = 'PROXYFS is no longer included by default; build with -lproxyfs.js';\nvar WORKERFS = 'WORKERFS is no longer included by default; build with -lworkerfs.js';\nvar NODEFS = 'NODEFS is no longer included by default; build with -lnodefs.js';\nassert(!ENVIRONMENT_IS_WORKER, \"worker environment detected but not enabled at build time.  Add 'worker' to `-sENVIRONMENT` to enable.\");\nassert(!ENVIRONMENT_IS_NODE, \"node environment detected but not enabled at build time.  Add 'node' to `-sENVIRONMENT` to enable.\");\nassert(!ENVIRONMENT_IS_SHELL, \"shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable.\");\n\n// end include: shell.js\n// include: preamble.js\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\nvar wasmBinary;\nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\nlegacyModuleProp('wasmBinary', 'wasmBinary');\nvar noExitRuntime = Module['noExitRuntime'] || true;\nlegacyModuleProp('noExitRuntime', 'noExitRuntime');\nif (typeof WebAssembly != 'object') {\n  abort('no native wasm support detected');\n}\n\n// Wasm globals\n\nvar wasmMemory;\n\n//========================================\n// Runtime essentials\n//========================================\n\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS;\n\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    abort('Assertion failed' + (text ? ': ' + text : ''));\n  }\n}\n\n// We used to include malloc/free by default in the past. Show a helpful error in\n// builds with assertions.\n\n// Memory management\n\nvar HEAP, /** @type {!Int8Array} */\n  HEAP8, /** @type {!Uint8Array} */\n  HEAPU8, /** @type {!Int16Array} */\n  HEAP16, /** @type {!Uint16Array} */\n  HEAPU16, /** @type {!Int32Array} */\n  HEAP32, /** @type {!Uint32Array} */\n  HEAPU32, /** @type {!Float32Array} */\n  HEAPF32, /** @type {!Float64Array} */\n  HEAPF64;\nfunction updateMemoryViews() {\n  var b = wasmMemory.buffer;\n  Module['HEAP8'] = HEAP8 = new Int8Array(b);\n  Module['HEAP16'] = HEAP16 = new Int16Array(b);\n  Module['HEAP32'] = HEAP32 = new Int32Array(b);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n}\nassert(!Module['STACK_SIZE'], 'STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time');\nassert(typeof Int32Array != 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined, 'JS engine does not provide full typed array support');\n\n// If memory is defined in wasm, the user can't provide it, or set INITIAL_MEMORY\nassert(!Module['wasmMemory'], 'Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally');\nassert(!Module['INITIAL_MEMORY'], 'Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically');\n\n// include: runtime_init_table.js\n// In regular non-RELOCATABLE mode the table is exported\n// from the wasm module and this will be assigned once\n// the exports are available.\nvar wasmTable;\n\n// end include: runtime_init_table.js\n// include: runtime_stack_check.js\n// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\nfunction writeStackCookie() {\n  var max = _emscripten_stack_get_end();\n  assert((max & 3) == 0);\n  // If the stack ends at address zero we write our cookies 4 bytes into the\n  // stack.  This prevents interference with the (separate) address-zero check\n  // below.\n  if (max == 0) {\n    max += 4;\n  }\n  // The stack grow downwards towards _emscripten_stack_get_end.\n  // We write cookies to the final two words in the stack and detect if they are\n  // ever overwritten.\n  HEAPU32[max >> 2] = 0x02135467;\n  HEAPU32[max + 4 >> 2] = 0x89BACDFE;\n  // Also test the global address 0 for integrity.\n  HEAPU32[0] = 0x63736d65; /* 'emsc' */\n}\n\nfunction checkStackCookie() {\n  if (ABORT) return;\n  var max = _emscripten_stack_get_end();\n  // See writeStackCookie().\n  if (max == 0) {\n    max += 4;\n  }\n  var cookie1 = HEAPU32[max >> 2];\n  var cookie2 = HEAPU32[max + 4 >> 2];\n  if (cookie1 != 0x02135467 || cookie2 != 0x89BACDFE) {\n    abort('Stack overflow! Stack cookie has been overwritten at ' + ptrToString(max) + ', expected hex dwords 0x89BACDFE and 0x2135467, but received ' + ptrToString(cookie2) + ' ' + ptrToString(cookie1));\n  }\n  // Also test the global address 0 for integrity.\n  if (HEAPU32[0] !== 0x63736d65 /* 'emsc' */) {\n    abort('Runtime error: The application has corrupted its heap memory area (address zero)!');\n  }\n}\n\n// end include: runtime_stack_check.js\n// include: runtime_assertions.js\n// Endianness check\n(function () {\n  var h16 = new Int16Array(1);\n  var h8 = new Int8Array(h16.buffer);\n  h16[0] = 0x6373;\n  if (h8[0] !== 0x73 || h8[1] !== 0x63) throw 'Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)';\n})();\n\n// end include: runtime_assertions.js\nvar __ATPRERUN__ = []; // functions called before the runtime is initialized\nvar __ATINIT__ = []; // functions called during startup\nvar __ATEXIT__ = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\n\nvar runtimeInitialized = false;\nvar runtimeKeepaliveCounter = 0;\nfunction keepRuntimeAlive() {\n  return noExitRuntime || runtimeKeepaliveCounter > 0;\n}\nfunction preRun() {\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPRERUN__);\n}\nfunction initRuntime() {\n  assert(!runtimeInitialized);\n  runtimeInitialized = true;\n  checkStackCookie();\n  callRuntimeCallbacks(__ATINIT__);\n}\nfunction postRun() {\n  checkStackCookie();\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\nfunction addOnExit(cb) {}\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\n\n// include: runtime_math.js\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\n\nassert(Math.imul, 'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.fround, 'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.clz32, 'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.trunc, 'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\n\n// end include: runtime_math.js\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\nvar runDependencyTracking = {};\nfunction getUniqueRunDependency(id) {\n  var orig = id;\n  while (1) {\n    if (!runDependencyTracking[id]) return id;\n    id = orig + Math.random();\n  }\n}\nfunction addRunDependency(id) {\n  runDependencies++;\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n  if (id) {\n    assert(!runDependencyTracking[id]);\n    runDependencyTracking[id] = 1;\n    if (runDependencyWatcher === null && typeof setInterval != 'undefined') {\n      // Check for missing dependencies every few seconds\n      runDependencyWatcher = setInterval(function () {\n        if (ABORT) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n          return;\n        }\n        var shown = false;\n        for (var dep in runDependencyTracking) {\n          if (!shown) {\n            shown = true;\n            err('still waiting on run dependencies:');\n          }\n          err('dependency: ' + dep);\n        }\n        if (shown) {\n          err('(end of list)');\n        }\n      }, 10000);\n    }\n  } else {\n    err('warning: run dependency added without ID');\n  }\n}\nfunction removeRunDependency(id) {\n  runDependencies--;\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n  if (id) {\n    assert(runDependencyTracking[id]);\n    delete runDependencyTracking[id];\n  } else {\n    err('warning: run dependency removed without ID');\n  }\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\n\n/** @param {string|number=} what */\nfunction abort(what) {\n  if (Module['onAbort']) {\n    Module['onAbort'](what);\n  }\n  what = 'Aborted(' + what + ')';\n  // TODO(sbc): Should we remove printing and leave it up to whoever\n  // catches the exception?\n  err(what);\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\n  // exception, which means we'd run destructors on it. We need the error to\n  // simply make the program stop.\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\n  // a trap or not based on a hidden field within the object. So at the moment\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\n  // allows this in the wasm spec.\n\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\n  // defintion for WebAssembly.RuntimeError claims it takes no arguments even\n  // though it can.\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\n  /** @suppress {checkTypes} */\n  var e = new WebAssembly.RuntimeError(what);\n\n  // Throw the error whether or not MODULARIZE is set because abort is used\n  // in code paths apart from instantiation where an exception is expected\n  // to be thrown when abort is called.\n  throw e;\n}\n\n// include: memoryprofiler.js\n// end include: memoryprofiler.js\n// show errors on likely calls to FS when it was not included\nvar FS = {\n  error: function () {\n    abort('Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with -sFORCE_FILESYSTEM');\n  },\n  init: function () {\n    FS.error();\n  },\n  createDataFile: function () {\n    FS.error();\n  },\n  createPreloadedFile: function () {\n    FS.error();\n  },\n  createLazyFile: function () {\n    FS.error();\n  },\n  open: function () {\n    FS.error();\n  },\n  mkdev: function () {\n    FS.error();\n  },\n  registerDevice: function () {\n    FS.error();\n  },\n  analyzePath: function () {\n    FS.error();\n  },\n  ErrnoError: function ErrnoError() {\n    FS.error();\n  }\n};\nModule['FS_createDataFile'] = FS.createDataFile;\nModule['FS_createPreloadedFile'] = FS.createPreloadedFile;\n\n// include: URIUtils.js\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\n\n// Indicates whether filename is a base64 data URI.\nfunction isDataURI(filename) {\n  // Prefix of data URIs emitted by SINGLE_FILE and related options.\n  return filename.startsWith(dataURIPrefix);\n}\n\n// Indicates whether filename is delivered via file protocol (as opposed to http/https)\nfunction isFileURI(filename) {\n  return filename.startsWith('file://');\n}\n\n// end include: URIUtils.js\n/** @param {boolean=} fixedasm */\nfunction createExportWrapper(name, fixedasm) {\n  return function () {\n    var displayName = name;\n    var asm = fixedasm;\n    if (!fixedasm) {\n      asm = Module['asm'];\n    }\n    assert(runtimeInitialized, 'native function `' + displayName + '` called before runtime initialization');\n    if (!asm[name]) {\n      assert(asm[name], 'exported native function `' + displayName + '` not found');\n    }\n    return asm[name].apply(null, arguments);\n  };\n}\n\n// include: runtime_exceptions.js\n// Base Emscripten EH error class\nclass EmscriptenEH extends Error {}\nclass EmscriptenSjLj extends EmscriptenEH {}\nclass CppException extends EmscriptenEH {\n  constructor(excPtr) {\n    super(excPtr);\n    this.excPtr = excPtr;\n    const excInfo = getExceptionMessage(excPtr);\n    this.name = excInfo[0];\n    this.message = excInfo[1];\n  }\n}\n\n// end include: runtime_exceptions.js\nvar wasmBinaryFile;\nwasmBinaryFile = 'add.wasm';\nif (!isDataURI(wasmBinaryFile)) {\n  wasmBinaryFile = locateFile(wasmBinaryFile);\n}\nfunction getBinary(file) {\n  try {\n    if (file == wasmBinaryFile && wasmBinary) {\n      return new Uint8Array(wasmBinary);\n    }\n    if (readBinary) {\n      return readBinary(file);\n    }\n    throw \"both async and sync fetching of the wasm failed\";\n  } catch (err) {\n    abort(err);\n  }\n}\nfunction getBinaryPromise(binaryFile) {\n  // If we don't have the binary yet, try to load it asynchronously.\n  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\n  // See https://github.com/github/fetch/pull/92#issuecomment-140665932\n  // Cordova or Electron apps are typically loaded from a file:// url.\n  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\n  if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n    if (typeof fetch == 'function') {\n      return fetch(binaryFile, {\n        credentials: 'same-origin'\n      }).then(function (response) {\n        if (!response['ok']) {\n          throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\n        }\n        return response['arrayBuffer']();\n      }).catch(function () {\n        return getBinary(binaryFile);\n      });\n    }\n  }\n\n  // Otherwise, getBinary should be able to get it synchronously\n  return Promise.resolve().then(function () {\n    return getBinary(binaryFile);\n  });\n}\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\n  return getBinaryPromise(binaryFile).then(function (binary) {\n    return WebAssembly.instantiate(binary, imports);\n  }).then(function (instance) {\n    return instance;\n  }).then(receiver, function (reason) {\n    err('failed to asynchronously prepare wasm: ' + reason);\n\n    // Warn on some common problems.\n    if (isFileURI(wasmBinaryFile)) {\n      err('warning: Loading from a file URI (' + wasmBinaryFile + ') is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing');\n    }\n    abort(reason);\n  });\n}\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\n  if (!binary && typeof WebAssembly.instantiateStreaming == 'function' && !isDataURI(binaryFile) && typeof fetch == 'function') {\n    return fetch(binaryFile, {\n      credentials: 'same-origin'\n    }).then(function (response) {\n      // Suppress closure warning here since the upstream definition for\n      // instantiateStreaming only allows Promise<Repsponse> rather than\n      // an actual Response.\n      // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\n      /** @suppress {checkTypes} */\n      var result = WebAssembly.instantiateStreaming(response, imports);\n      return result.then(callback, function (reason) {\n        // We expect the most common failure cause to be a bad MIME type for the binary,\n        // in which case falling back to ArrayBuffer instantiation should work.\n        err('wasm streaming compile failed: ' + reason);\n        err('falling back to ArrayBuffer instantiation');\n        return instantiateArrayBuffer(binaryFile, imports, callback);\n      });\n    });\n  } else {\n    return instantiateArrayBuffer(binaryFile, imports, callback);\n  }\n}\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nfunction createWasm() {\n  // prepare imports\n  var info = {\n    'env': wasmImports,\n    'wasi_snapshot_preview1': wasmImports\n  };\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  /** @param {WebAssembly.Module=} module*/\n  function receiveInstance(instance, module) {\n    var exports = instance.exports;\n    Module['asm'] = exports;\n    wasmMemory = Module['asm']['memory'];\n    assert(wasmMemory, \"memory not found in wasm exports\");\n    // This assertion doesn't hold when emscripten is run in --post-link\n    // mode.\n    // TODO(sbc): Read INITIAL_MEMORY out of the wasm file in post-link mode.\n    //assert(wasmMemory.buffer.byteLength === 16777216);\n    updateMemoryViews();\n    wasmTable = Module['asm']['__indirect_function_table'];\n    assert(wasmTable, \"table not found in wasm exports\");\n    addOnInit(Module['asm']['__wasm_call_ctors']);\n    removeRunDependency('wasm-instantiate');\n    return exports;\n  }\n  // wait for the pthread pool (if any)\n  addRunDependency('wasm-instantiate');\n\n  // Prefer streaming instantiation if available.\n  // Async compilation can be confusing when an error on the page overwrites Module\n  // (for example, if the order of elements is wrong, and the one defining Module is\n  // later), so we save Module and check it later.\n  var trueModule = Module;\n  function receiveInstantiationResult(result) {\n    // 'result' is a ResultObject object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n    assert(Module === trueModule, 'the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?');\n    trueModule = null;\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n    // When the regression is fixed, can restore the above PTHREADS-enabled path.\n    receiveInstance(result['instance']);\n  }\n\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n  // to manually instantiate the Wasm module themselves. This allows pages to\n  // run the instantiation parallel to any other async startup actions they are\n  // performing.\n  // Also pthreads and wasm workers initialize the wasm instance through this\n  // path.\n  if (Module['instantiateWasm']) {\n    try {\n      return Module['instantiateWasm'](info, receiveInstance);\n    } catch (e) {\n      err('Module.instantiateWasm callback failed with error: ' + e);\n      return false;\n    }\n  }\n  instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult);\n  return {}; // no exports yet; we'll fill them in later\n}\n\n// Globals used by JS i64 conversions (see makeSetValue)\nvar tempDouble;\nvar tempI64;\n\n// include: runtime_debug.js\nfunction legacyModuleProp(prop, newName) {\n  if (!Object.getOwnPropertyDescriptor(Module, prop)) {\n    Object.defineProperty(Module, prop, {\n      configurable: true,\n      get: function () {\n        abort('Module.' + prop + ' has been replaced with plain ' + newName + ' (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)');\n      }\n    });\n  }\n}\nfunction ignoredModuleProp(prop) {\n  if (Object.getOwnPropertyDescriptor(Module, prop)) {\n    abort('`Module.' + prop + '` was supplied but `' + prop + '` not included in INCOMING_MODULE_JS_API');\n  }\n}\n\n// forcing the filesystem exports a few things by default\nfunction isExportedByForceFilesystem(name) {\n  return name === 'FS_createPath' || name === 'FS_createDataFile' || name === 'FS_createPreloadedFile' || name === 'FS_unlink' || name === 'addRunDependency' ||\n  // The old FS has some functionality that WasmFS lacks.\n  name === 'FS_createLazyFile' || name === 'FS_createDevice' || name === 'removeRunDependency';\n}\nfunction missingGlobal(sym, msg) {\n  if (typeof globalThis !== 'undefined') {\n    Object.defineProperty(globalThis, sym, {\n      configurable: true,\n      get: function () {\n        warnOnce('`' + sym + '` is not longer defined by emscripten. ' + msg);\n        return undefined;\n      }\n    });\n  }\n}\nmissingGlobal('buffer', 'Please use HEAP8.buffer or wasmMemory.buffer');\nfunction missingLibrarySymbol(sym) {\n  if (typeof globalThis !== 'undefined' && !Object.getOwnPropertyDescriptor(globalThis, sym)) {\n    Object.defineProperty(globalThis, sym, {\n      configurable: true,\n      get: function () {\n        // Can't `abort()` here because it would break code that does runtime\n        // checks.  e.g. `if (typeof SDL === 'undefined')`.\n        var msg = '`' + sym + '` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line';\n        // DEFAULT_LIBRARY_FUNCS_TO_INCLUDE requires the name as it appears in\n        // library.js, which means $name for a JS name with no prefix, or name\n        // for a JS name like _name.\n        var librarySymbol = sym;\n        if (!librarySymbol.startsWith('_')) {\n          librarySymbol = '$' + sym;\n        }\n        msg += \" (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE=\" + librarySymbol + \")\";\n        if (isExportedByForceFilesystem(sym)) {\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n        }\n        warnOnce(msg);\n        return undefined;\n      }\n    });\n  }\n  // Any symbol that is not included from the JS libary is also (by definition)\n  // not exported on the Module object.\n  unexportedRuntimeSymbol(sym);\n}\nfunction unexportedRuntimeSymbol(sym) {\n  if (!Object.getOwnPropertyDescriptor(Module, sym)) {\n    Object.defineProperty(Module, sym, {\n      configurable: true,\n      get: function () {\n        var msg = \"'\" + sym + \"' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\";\n        if (isExportedByForceFilesystem(sym)) {\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n        }\n        abort(msg);\n      }\n    });\n  }\n}\n\n// Used by XXXXX_DEBUG settings to output debug messages.\nfunction dbg(text) {\n  // TODO(sbc): Make this configurable somehow.  Its not always convenient for\n  // logging to show up as errors.\n  console.error(text);\n}\n\n// end include: runtime_debug.js\n// === Body ===\n\n// end include: preamble.js\n\n/** @constructor */\nfunction ExitStatus(status) {\n  this.name = 'ExitStatus';\n  this.message = 'Program terminated with exit(' + status + ')';\n  this.status = status;\n}\n_c = ExitStatus;\nfunction callRuntimeCallbacks(callbacks) {\n  while (callbacks.length > 0) {\n    // Pass the module as the first argument.\n    callbacks.shift()(Module);\n  }\n}\nvar wasmTableMirror = [];\nfunction getWasmTableEntry(funcPtr) {\n  var func = wasmTableMirror[funcPtr];\n  if (!func) {\n    if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n    wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n  }\n  assert(wasmTable.get(funcPtr) == func, \"JavaScript-side Wasm function table mirror is out of date!\");\n  return func;\n}\nfunction exception_decRef(info) {\n  // A rethrown exception can reach refcount 0; it must not be discarded\n  // Its next handler will clear the rethrown flag and addRef it, prior to\n  // final decRef and destruction here\n  if (info.release_ref() && !info.get_rethrown()) {\n    var destructor = info.get_destructor();\n    if (destructor) {\n      // In Wasm, destructors return 'this' as in ARM\n      getWasmTableEntry(destructor)(info.excPtr);\n    }\n    ___cxa_free_exception(info.excPtr);\n  }\n}\n\n/** @constructor */\nfunction ExceptionInfo(excPtr) {\n  this.excPtr = excPtr;\n  this.ptr = excPtr - 24;\n  this.set_type = function (type) {\n    HEAPU32[this.ptr + 4 >> 2] = type;\n  };\n  this.get_type = function () {\n    return HEAPU32[this.ptr + 4 >> 2];\n  };\n  this.set_destructor = function (destructor) {\n    HEAPU32[this.ptr + 8 >> 2] = destructor;\n  };\n  this.get_destructor = function () {\n    return HEAPU32[this.ptr + 8 >> 2];\n  };\n  this.set_refcount = function (refcount) {\n    HEAP32[this.ptr >> 2] = refcount;\n  };\n  this.set_caught = function (caught) {\n    caught = caught ? 1 : 0;\n    HEAP8[this.ptr + 12 >> 0] = caught;\n  };\n  this.get_caught = function () {\n    return HEAP8[this.ptr + 12 >> 0] != 0;\n  };\n  this.set_rethrown = function (rethrown) {\n    rethrown = rethrown ? 1 : 0;\n    HEAP8[this.ptr + 13 >> 0] = rethrown;\n  };\n  this.get_rethrown = function () {\n    return HEAP8[this.ptr + 13 >> 0] != 0;\n  };\n\n  // Initialize native structure fields. Should be called once after allocated.\n  this.init = function (type, destructor) {\n    this.set_adjusted_ptr(0);\n    this.set_type(type);\n    this.set_destructor(destructor);\n    this.set_refcount(0);\n    this.set_caught(false);\n    this.set_rethrown(false);\n  };\n  this.add_ref = function () {\n    var value = HEAP32[this.ptr >> 2];\n    HEAP32[this.ptr >> 2] = value + 1;\n  };\n\n  // Returns true if last reference released.\n  this.release_ref = function () {\n    var prev = HEAP32[this.ptr >> 2];\n    HEAP32[this.ptr >> 2] = prev - 1;\n    assert(prev > 0);\n    return prev === 1;\n  };\n  this.set_adjusted_ptr = function (adjustedPtr) {\n    HEAPU32[this.ptr + 16 >> 2] = adjustedPtr;\n  };\n  this.get_adjusted_ptr = function () {\n    return HEAPU32[this.ptr + 16 >> 2];\n  };\n\n  // Get pointer which is expected to be received by catch clause in C++ code. It may be adjusted\n  // when the pointer is casted to some of the exception object base classes (e.g. when virtual\n  // inheritance is used). When a pointer is thrown this method should return the thrown pointer\n  // itself.\n  this.get_exception_ptr = function () {\n    // Work around a fastcomp bug, this code is still included for some reason in a build without\n    // exceptions support.\n    var isPointer = ___cxa_is_pointer_type(this.get_type());\n    if (isPointer) {\n      return HEAPU32[this.excPtr >> 2];\n    }\n    var adjusted = this.get_adjusted_ptr();\n    if (adjusted !== 0) return adjusted;\n    return this.excPtr;\n  };\n}\n_c2 = ExceptionInfo;\nfunction ___cxa_decrement_exception_refcount(ptr) {\n  if (!ptr) return;\n  exception_decRef(new ExceptionInfo(ptr));\n}\nfunction decrementExceptionRefcount(ptr) {\n  ___cxa_decrement_exception_refcount(ptr);\n}\nfunction withStackSave(f) {\n  var stack = stackSave();\n  var ret = f();\n  stackRestore(stack);\n  return ret;\n}\nvar UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n\n/**\n * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\n * array that contains uint8 values, returns a copy of that string as a\n * Javascript String object.\n * heapOrArray is either a regular array, or a JavaScript typed array view.\n * @param {number} idx\n * @param {number=} maxBytesToRead\n * @return {string}\n */\nfunction UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n  var endIdx = idx + maxBytesToRead;\n  var endPtr = idx;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on\n  // null terminator by itself.  Also, use the length info to avoid running tiny\n  // strings through TextDecoder, since .subarray() allocates garbage.\n  // (As a tiny code save trick, compare endPtr against endIdx using a negation,\n  // so that undefined means Infinity)\n  while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n  if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n    return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n  }\n  var str = '';\n  // If building with TextDecoder, we have already computed the string length\n  // above, so test loop end condition against that\n  while (idx < endPtr) {\n    // For UTF8 byte structure, see:\n    // http://en.wikipedia.org/wiki/UTF-8#Description\n    // https://www.ietf.org/rfc/rfc2279.txt\n    // https://tools.ietf.org/html/rfc3629\n    var u0 = heapOrArray[idx++];\n    if (!(u0 & 0x80)) {\n      str += String.fromCharCode(u0);\n      continue;\n    }\n    var u1 = heapOrArray[idx++] & 63;\n    if ((u0 & 0xE0) == 0xC0) {\n      str += String.fromCharCode((u0 & 31) << 6 | u1);\n      continue;\n    }\n    var u2 = heapOrArray[idx++] & 63;\n    if ((u0 & 0xF0) == 0xE0) {\n      u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n    } else {\n      if ((u0 & 0xF8) != 0xF0) warnOnce('Invalid UTF-8 leading byte ' + ptrToString(u0) + ' encountered when deserializing a UTF-8 string in wasm memory to a JS string!');\n      u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;\n    }\n    if (u0 < 0x10000) {\n      str += String.fromCharCode(u0);\n    } else {\n      var ch = u0 - 0x10000;\n      str += String.fromCharCode(0xD800 | ch >> 10, 0xDC00 | ch & 0x3FF);\n    }\n  }\n  return str;\n}\n\n/**\n * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\n * emscripten HEAP, returns a copy of that string as a Javascript String object.\n *\n * @param {number} ptr\n * @param {number=} maxBytesToRead - An optional length that specifies the\n *   maximum number of bytes to read. You can omit this parameter to scan the\n *   string until the first \u0000 byte. If maxBytesToRead is passed, and the string\n *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\n *   string will cut short at that byte index (i.e. maxBytesToRead will not\n *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\n *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\n *   JS JIT optimizations off, so it is worth to consider consistently using one\n * @return {string}\n */\n_c3 = UTF8ArrayToString;\nfunction UTF8ToString(ptr, maxBytesToRead) {\n  assert(typeof ptr == 'number');\n  return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n}\n_c4 = UTF8ToString;\nfunction getExceptionMessageCommon(ptr) {\n  return withStackSave(function () {\n    var type_addr_addr = stackAlloc(4);\n    var message_addr_addr = stackAlloc(4);\n    ___get_exception_message(ptr, type_addr_addr, message_addr_addr);\n    var type_addr = HEAPU32[type_addr_addr >> 2];\n    var message_addr = HEAPU32[message_addr_addr >> 2];\n    var type = UTF8ToString(type_addr);\n    _free(type_addr);\n    var message;\n    if (message_addr) {\n      message = UTF8ToString(message_addr);\n      _free(message_addr);\n    }\n    return [type, message];\n  });\n}\nfunction getExceptionMessage(ptr) {\n  return getExceptionMessageCommon(ptr);\n}\nModule[\"getExceptionMessage\"] = getExceptionMessage;\n\n/**\n * @param {number} ptr\n * @param {string} type\n */\nfunction getValue(ptr) {\n  let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'i8';\n  if (type.endsWith('*')) type = '*';\n  switch (type) {\n    case 'i1':\n      return HEAP8[ptr >> 0];\n    case 'i8':\n      return HEAP8[ptr >> 0];\n    case 'i16':\n      return HEAP16[ptr >> 1];\n    case 'i32':\n      return HEAP32[ptr >> 2];\n    case 'i64':\n      return HEAP32[ptr >> 2];\n    case 'float':\n      return HEAPF32[ptr >> 2];\n    case 'double':\n      return HEAPF64[ptr >> 3];\n    case '*':\n      return HEAPU32[ptr >> 2];\n    default:\n      abort('invalid type for getValue: ' + type);\n  }\n}\nfunction exception_addRef(info) {\n  info.add_ref();\n}\nfunction ___cxa_increment_exception_refcount(ptr) {\n  if (!ptr) return;\n  exception_addRef(new ExceptionInfo(ptr));\n}\nfunction incrementExceptionRefcount(ptr) {\n  ___cxa_increment_exception_refcount(ptr);\n}\nfunction ptrToString(ptr) {\n  assert(typeof ptr === 'number');\n  return '0x' + ptr.toString(16).padStart(8, '0');\n}\n\n/**\n * @param {number} ptr\n * @param {number} value\n * @param {string} type\n */\nfunction setValue(ptr, value) {\n  let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'i8';\n  if (type.endsWith('*')) type = '*';\n  switch (type) {\n    case 'i1':\n      HEAP8[ptr >> 0] = value;\n      break;\n    case 'i8':\n      HEAP8[ptr >> 0] = value;\n      break;\n    case 'i16':\n      HEAP16[ptr >> 1] = value;\n      break;\n    case 'i32':\n      HEAP32[ptr >> 2] = value;\n      break;\n    case 'i64':\n      tempI64 = [value >>> 0, (tempDouble = value, +Math.abs(tempDouble) >= 1.0 ? tempDouble > 0.0 ? (Math.min(+Math.floor(tempDouble / 4294967296.0), 4294967295.0) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0) >>> 0 : 0)], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];\n      break;\n    case 'float':\n      HEAPF32[ptr >> 2] = value;\n      break;\n    case 'double':\n      HEAPF64[ptr >> 3] = value;\n      break;\n    case '*':\n      HEAPU32[ptr >> 2] = value;\n      break;\n    default:\n      abort('invalid type for setValue: ' + type);\n  }\n}\nfunction warnOnce(text) {\n  if (!warnOnce.shown) warnOnce.shown = {};\n  if (!warnOnce.shown[text]) {\n    warnOnce.shown[text] = 1;\n    err(text);\n  }\n}\nfunction ___assert_fail(condition, filename, line, func) {\n  abort('Assertion failed: ' + UTF8ToString(condition) + ', at: ' + [filename ? UTF8ToString(filename) : 'unknown filename', line, func ? UTF8ToString(func) : 'unknown function']);\n}\nvar exceptionCaught = [];\nvar uncaughtExceptionCount = 0;\nfunction ___cxa_begin_catch(ptr) {\n  var info = new ExceptionInfo(ptr);\n  if (!info.get_caught()) {\n    info.set_caught(true);\n    uncaughtExceptionCount--;\n  }\n  info.set_rethrown(false);\n  exceptionCaught.push(info);\n  exception_addRef(info);\n  return info.get_exception_ptr();\n}\nvar exceptionLast = 0;\nfunction ___resumeException(ptr) {\n  if (!exceptionLast) {\n    exceptionLast = new CppException(ptr);\n  }\n  throw exceptionLast;\n}\n\n/** @suppress {duplicate } */\nfunction ___cxa_find_matching_catch() {\n  var thrown = exceptionLast && exceptionLast.excPtr;\n  if (!thrown) {\n    // just pass through the null ptr\n    setTempRet0(0);\n    return 0;\n  }\n  var info = new ExceptionInfo(thrown);\n  info.set_adjusted_ptr(thrown);\n  var thrownType = info.get_type();\n  if (!thrownType) {\n    // just pass through the thrown ptr\n    setTempRet0(0);\n    return thrown;\n  }\n\n  // can_catch receives a **, add indirection\n  // The different catch blocks are denoted by different types.\n  // Due to inheritance, those types may not precisely match the\n  // type of the thrown object. Find one which matches, and\n  // return the type of the catch block which should be called.\n  for (var i = 0; i < arguments.length; i++) {\n    var caughtType = arguments[i];\n    if (caughtType === 0 || caughtType === thrownType) {\n      // Catch all clause matched or exactly the same type is caught\n      break;\n    }\n    var adjusted_ptr_addr = info.ptr + 16;\n    if (___cxa_can_catch(caughtType, thrownType, adjusted_ptr_addr)) {\n      setTempRet0(caughtType);\n      return thrown;\n    }\n  }\n  setTempRet0(thrownType);\n  return thrown;\n}\nvar ___cxa_find_matching_catch_2 = ___cxa_find_matching_catch;\nvar ___cxa_find_matching_catch_3 = ___cxa_find_matching_catch;\nfunction __embind_register_bigint(primitiveType, name, size, minRange, maxRange) {}\nfunction getShiftFromSize(size) {\n  switch (size) {\n    case 1:\n      return 0;\n    case 2:\n      return 1;\n    case 4:\n      return 2;\n    case 8:\n      return 3;\n    default:\n      throw new TypeError('Unknown type size: ' + size);\n  }\n}\nfunction embind_init_charCodes() {\n  var codes = new Array(256);\n  for (var i = 0; i < 256; ++i) {\n    codes[i] = String.fromCharCode(i);\n  }\n  embind_charCodes = codes;\n}\nvar embind_charCodes = undefined;\nfunction readLatin1String(ptr) {\n  var ret = \"\";\n  var c = ptr;\n  while (HEAPU8[c]) {\n    ret += embind_charCodes[HEAPU8[c++]];\n  }\n  return ret;\n}\nvar awaitingDependencies = {};\nvar registeredTypes = {};\nvar typeDependencies = {};\nvar char_0 = 48;\nvar char_9 = 57;\nfunction makeLegalFunctionName(name) {\n  if (undefined === name) {\n    return '_unknown';\n  }\n  name = name.replace(/[^a-zA-Z0-9_]/g, '$');\n  var f = name.charCodeAt(0);\n  if (f >= char_0 && f <= char_9) {\n    return '_' + name;\n  }\n  return name;\n}\nfunction createNamedFunction(name, body) {\n  name = makeLegalFunctionName(name);\n  // Use an abject with a computed property name to create a new function with\n  // a name specified at runtime, but without using `new Function` or `eval`.\n  return {\n    [name]: function () {\n      return body.apply(this, arguments);\n    }\n  }[name];\n}\nfunction extendError(baseErrorType, errorName) {\n  var errorClass = createNamedFunction(errorName, function (message) {\n    this.name = errorName;\n    this.message = message;\n    var stack = new Error(message).stack;\n    if (stack !== undefined) {\n      this.stack = this.toString() + '\\n' + stack.replace(/^Error(:[^\\n]*)?\\n/, '');\n    }\n  });\n  errorClass.prototype = Object.create(baseErrorType.prototype);\n  errorClass.prototype.constructor = errorClass;\n  errorClass.prototype.toString = function () {\n    if (this.message === undefined) {\n      return this.name;\n    } else {\n      return this.name + ': ' + this.message;\n    }\n  };\n  return errorClass;\n}\nvar BindingError = undefined;\nfunction throwBindingError(message) {\n  throw new BindingError(message);\n}\nvar InternalError = undefined;\nfunction throwInternalError(message) {\n  throw new InternalError(message);\n}\nfunction whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n  myTypes.forEach(function (type) {\n    typeDependencies[type] = dependentTypes;\n  });\n  function onComplete(typeConverters) {\n    var myTypeConverters = getTypeConverters(typeConverters);\n    if (myTypeConverters.length !== myTypes.length) {\n      throwInternalError('Mismatched type converter count');\n    }\n    for (var i = 0; i < myTypes.length; ++i) {\n      registerType(myTypes[i], myTypeConverters[i]);\n    }\n  }\n  var typeConverters = new Array(dependentTypes.length);\n  var unregisteredTypes = [];\n  var registered = 0;\n  dependentTypes.forEach((dt, i) => {\n    if (registeredTypes.hasOwnProperty(dt)) {\n      typeConverters[i] = registeredTypes[dt];\n    } else {\n      unregisteredTypes.push(dt);\n      if (!awaitingDependencies.hasOwnProperty(dt)) {\n        awaitingDependencies[dt] = [];\n      }\n      awaitingDependencies[dt].push(() => {\n        typeConverters[i] = registeredTypes[dt];\n        ++registered;\n        if (registered === unregisteredTypes.length) {\n          onComplete(typeConverters);\n        }\n      });\n    }\n  });\n  if (0 === unregisteredTypes.length) {\n    onComplete(typeConverters);\n  }\n}\n/** @param {Object=} options */\nfunction registerType(rawType, registeredInstance) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (!('argPackAdvance' in registeredInstance)) {\n    throw new TypeError('registerType registeredInstance requires argPackAdvance');\n  }\n  var name = registeredInstance.name;\n  if (!rawType) {\n    throwBindingError('type \"' + name + '\" must have a positive integer typeid pointer');\n  }\n  if (registeredTypes.hasOwnProperty(rawType)) {\n    if (options.ignoreDuplicateRegistrations) {\n      return;\n    } else {\n      throwBindingError(\"Cannot register type '\" + name + \"' twice\");\n    }\n  }\n  registeredTypes[rawType] = registeredInstance;\n  delete typeDependencies[rawType];\n  if (awaitingDependencies.hasOwnProperty(rawType)) {\n    var callbacks = awaitingDependencies[rawType];\n    delete awaitingDependencies[rawType];\n    callbacks.forEach(cb => cb());\n  }\n}\nfunction __embind_register_bool(rawType, name, size, trueValue, falseValue) {\n  var shift = getShiftFromSize(size);\n  name = readLatin1String(name);\n  registerType(rawType, {\n    name: name,\n    'fromWireType': function (wt) {\n      // ambiguous emscripten ABI: sometimes return values are\n      // true or false, and sometimes integers (0 or 1)\n      return !!wt;\n    },\n    'toWireType': function (destructors, o) {\n      return o ? trueValue : falseValue;\n    },\n    'argPackAdvance': 8,\n    'readValueFromPointer': function (pointer) {\n      // TODO: if heap is fixed (like in asm.js) this could be executed outside\n      var heap;\n      if (size === 1) {\n        heap = HEAP8;\n      } else if (size === 2) {\n        heap = HEAP16;\n      } else if (size === 4) {\n        heap = HEAP32;\n      } else {\n        throw new TypeError(\"Unknown boolean type size: \" + name);\n      }\n      return this['fromWireType'](heap[pointer >> shift]);\n    },\n    destructorFunction: null // This type does not need a destructor\n  });\n}\n\n/** @constructor */\nfunction HandleAllocator() {\n  // Reserve slot 0 so that 0 is always an invalid handle\n  this.allocated = [undefined];\n  this.freelist = [];\n  this.get = function (id) {\n    assert(this.allocated[id] !== undefined, 'invalid handle: ' + id);\n    return this.allocated[id];\n  };\n  this.allocate = function (handle) {\n    let id = this.freelist.pop() || this.allocated.length;\n    this.allocated[id] = handle;\n    return id;\n  };\n  this.free = function (id) {\n    assert(this.allocated[id] !== undefined);\n    // Set the slot to `undefined` rather than using `delete` here since\n    // apparently arrays with holes in them can be less efficient.\n    this.allocated[id] = undefined;\n    this.freelist.push(id);\n  };\n}\n_c5 = HandleAllocator;\nvar emval_handles = new HandleAllocator();\n;\nfunction __emval_decref(handle) {\n  if (handle >= emval_handles.reserved && 0 === --emval_handles.get(handle).refcount) {\n    emval_handles.free(handle);\n  }\n}\nfunction count_emval_handles() {\n  var count = 0;\n  for (var i = emval_handles.reserved; i < emval_handles.allocated.length; ++i) {\n    if (emval_handles.allocated[i] !== undefined) {\n      ++count;\n    }\n  }\n  return count;\n}\nfunction init_emval() {\n  // reserve some special values. These never get de-allocated.\n  // The HandleAllocator takes care of reserving zero.\n  emval_handles.allocated.push({\n    value: undefined\n  }, {\n    value: null\n  }, {\n    value: true\n  }, {\n    value: false\n  });\n  emval_handles.reserved = emval_handles.allocated.length;\n  Module['count_emval_handles'] = count_emval_handles;\n}\nvar Emval = {\n  toValue: handle => {\n    if (!handle) {\n      throwBindingError('Cannot use deleted val. handle = ' + handle);\n    }\n    return emval_handles.get(handle).value;\n  },\n  toHandle: value => {\n    switch (value) {\n      case undefined:\n        return 1;\n      case null:\n        return 2;\n      case true:\n        return 3;\n      case false:\n        return 4;\n      default:\n        {\n          return emval_handles.allocate({\n            refcount: 1,\n            value: value\n          });\n        }\n    }\n  }\n};\nfunction simpleReadValueFromPointer(pointer) {\n  return this['fromWireType'](HEAP32[pointer >> 2]);\n}\nfunction __embind_register_emval(rawType, name) {\n  name = readLatin1String(name);\n  registerType(rawType, {\n    name: name,\n    'fromWireType': function (handle) {\n      var rv = Emval.toValue(handle);\n      __emval_decref(handle);\n      return rv;\n    },\n    'toWireType': function (destructors, value) {\n      return Emval.toHandle(value);\n    },\n    'argPackAdvance': 8,\n    'readValueFromPointer': simpleReadValueFromPointer,\n    destructorFunction: null // This type does not need a destructor\n\n    // TODO: do we need a deleteObject here?  write a test where\n    // emval is passed into JS via an interface\n  });\n}\n\nfunction embindRepr(v) {\n  if (v === null) {\n    return 'null';\n  }\n  var t = typeof v;\n  if (t === 'object' || t === 'array' || t === 'function') {\n    return v.toString();\n  } else {\n    return '' + v;\n  }\n}\nfunction floatReadValueFromPointer(name, shift) {\n  switch (shift) {\n    case 2:\n      return function (pointer) {\n        return this['fromWireType'](HEAPF32[pointer >> 2]);\n      };\n    case 3:\n      return function (pointer) {\n        return this['fromWireType'](HEAPF64[pointer >> 3]);\n      };\n    default:\n      throw new TypeError(\"Unknown float type: \" + name);\n  }\n}\nfunction __embind_register_float(rawType, name, size) {\n  var shift = getShiftFromSize(size);\n  name = readLatin1String(name);\n  registerType(rawType, {\n    name: name,\n    'fromWireType': function (value) {\n      return value;\n    },\n    'toWireType': function (destructors, value) {\n      if (typeof value != \"number\" && typeof value != \"boolean\") {\n        throw new TypeError('Cannot convert \"' + embindRepr(value) + '\" to ' + this.name);\n      }\n      // The VM will perform JS to Wasm value conversion, according to the spec:\n      // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\n      return value;\n    },\n    'argPackAdvance': 8,\n    'readValueFromPointer': floatReadValueFromPointer(name, shift),\n    destructorFunction: null // This type does not need a destructor\n  });\n}\n\nfunction runDestructors(destructors) {\n  while (destructors.length) {\n    var ptr = destructors.pop();\n    var del = destructors.pop();\n    del(ptr);\n  }\n}\nfunction newFunc(constructor, argumentList) {\n  if (!(constructor instanceof Function)) {\n    throw new TypeError('new_ called with constructor type ' + typeof constructor + \" which is not a function\");\n  }\n  /*\n   * Previously, the following line was just:\n   *   function dummy() {};\n   * Unfortunately, Chrome was preserving 'dummy' as the object's name, even\n   * though at creation, the 'dummy' has the correct constructor name.  Thus,\n   * objects created with IMVU.new would show up in the debugger as 'dummy',\n   * which isn't very helpful.  Using IMVU.createNamedFunction addresses the\n   * issue.  Doublely-unfortunately, there's no way to write a test for this\n   * behavior.  -NRD 2013.02.22\n   */\n  var dummy = createNamedFunction(constructor.name || 'unknownFunctionName', function () {});\n  dummy.prototype = constructor.prototype;\n  var obj = new dummy();\n  var r = constructor.apply(obj, argumentList);\n  return r instanceof Object ? r : obj;\n}\nfunction craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc, isAsync) {\n  // humanName: a human-readable string name for the function to be generated.\n  // argTypes: An array that contains the embind type objects for all types in the function signature.\n  //    argTypes[0] is the type object for the function return value.\n  //    argTypes[1] is the type object for function this object/class type, or null if not crafting an invoker for a class method.\n  //    argTypes[2...] are the actual function parameters.\n  // classType: The embind type object for the class to be bound, or null if this is not a method of a class.\n  // cppInvokerFunc: JS Function object to the C++-side function that interops into C++ code.\n  // cppTargetFunc: Function pointer (an integer to FUNCTION_TABLE) to the target C++ function the cppInvokerFunc will end up calling.\n  var argCount = argTypes.length;\n  if (argCount < 2) {\n    throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n  }\n  assert(!isAsync, 'Async bindings are only supported with JSPI.');\n  var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n\n  // Free functions with signature \"void function()\" do not need an invoker that marshalls between wire types.\n  // TODO: This omits argument count check - enable only at -O3 or similar.\n  //    if (ENABLE_UNSAFE_OPTS && argCount == 2 && argTypes[0].name == \"void\" && !isClassMethodFunc) {\n  //       return FUNCTION_TABLE[fn];\n  //    }\n\n  // Determine if we need to use a dynamic stack to store the destructors for the function parameters.\n  // TODO: Remove this completely once all function invokers are being dynamically generated.\n  var needsDestructorStack = false;\n  for (var i = 1; i < argTypes.length; ++i) {\n    // Skip return value at index 0 - it's not deleted here.\n    if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\n      // The type does not define a destructor function - must use dynamic stack\n      needsDestructorStack = true;\n      break;\n    }\n  }\n  var returns = argTypes[0].name !== \"void\";\n  var argsList = \"\";\n  var argsListWired = \"\";\n  for (var i = 0; i < argCount - 2; ++i) {\n    argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n    argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n  }\n  var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\n\" + \"if (arguments.length !== \" + (argCount - 2) + \") {\\n\" + \"throwBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n\" + \"}\\n\";\n  if (needsDestructorStack) {\n    invokerFnBody += \"var destructors = [];\\n\";\n  }\n  var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n  var args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n  var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n  if (isClassMethodFunc) {\n    invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n  }\n  for (var i = 0; i < argCount - 2; ++i) {\n    invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n    args1.push(\"argType\" + i);\n    args2.push(argTypes[i + 2]);\n  }\n  if (isClassMethodFunc) {\n    argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n  }\n  invokerFnBody += (returns || isAsync ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n  if (needsDestructorStack) {\n    invokerFnBody += \"runDestructors(destructors);\\n\";\n  } else {\n    for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n      // Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.\n      var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n      if (argTypes[i].destructorFunction !== null) {\n        invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n        args1.push(paramName + \"_dtor\");\n        args2.push(argTypes[i].destructorFunction);\n      }\n    }\n  }\n  if (returns) {\n    invokerFnBody += \"var ret = retType.fromWireType(rv);\\n\" + \"return ret;\\n\";\n  } else {}\n  invokerFnBody += \"}\\n\";\n  args1.push(invokerFnBody);\n  return newFunc(Function, args1).apply(null, args2);\n}\nfunction ensureOverloadTable(proto, methodName, humanName) {\n  if (undefined === proto[methodName].overloadTable) {\n    var prevFunc = proto[methodName];\n    // Inject an overload resolver function that routes to the appropriate overload based on the number of arguments.\n    proto[methodName] = function () {\n      // TODO This check can be removed in -O3 level \"unsafe\" optimizations.\n      if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n        throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n      }\n      return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n    };\n    // Move the previous function into the overload table.\n    proto[methodName].overloadTable = [];\n    proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n  }\n}\n\n/** @param {number=} numArguments */\nfunction exposePublicSymbol(name, value, numArguments) {\n  if (Module.hasOwnProperty(name)) {\n    if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) {\n      throwBindingError(\"Cannot register public name '\" + name + \"' twice\");\n    }\n\n    // We are exposing a function with the same name as an existing function. Create an overload table and a function selector\n    // that routes between the two.\n    ensureOverloadTable(Module, name, name);\n    if (Module.hasOwnProperty(numArguments)) {\n      throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n    }\n    // Add the new function into the overload table.\n    Module[name].overloadTable[numArguments] = value;\n  } else {\n    Module[name] = value;\n    if (undefined !== numArguments) {\n      Module[name].numArguments = numArguments;\n    }\n  }\n}\nfunction heap32VectorToArray(count, firstElement) {\n  var array = [];\n  for (var i = 0; i < count; i++) {\n    // TODO(https://github.com/emscripten-core/emscripten/issues/17310):\n    // Find a way to hoist the `>> 2` or `>> 3` out of this loop.\n    array.push(HEAPU32[firstElement + i * 4 >> 2]);\n  }\n  return array;\n}\n\n/** @param {number=} numArguments */\nfunction replacePublicSymbol(name, value, numArguments) {\n  if (!Module.hasOwnProperty(name)) {\n    throwInternalError('Replacing nonexistant public symbol');\n  }\n  // If there's an overload table for this symbol, replace the symbol in the overload table instead.\n  if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n    Module[name].overloadTable[numArguments] = value;\n  } else {\n    Module[name] = value;\n    Module[name].argCount = numArguments;\n  }\n}\nfunction dynCallLegacy(sig, ptr, args) {\n  assert('dynCall_' + sig in Module, 'bad function pointer type - dynCall function not found for sig \\'' + sig + '\\'');\n  if (args && args.length) {\n    // j (64-bit integer) must be passed in as two numbers [low 32, high 32].\n    assert(args.length === sig.substring(1).replace(/j/g, '--').length);\n  } else {\n    assert(sig.length == 1);\n  }\n  var f = Module['dynCall_' + sig];\n  return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\n}\n\n/** @param {Object=} args */\nfunction dynCall(sig, ptr, args) {\n  // Without WASM_BIGINT support we cannot directly call function with i64 as\n  // part of thier signature, so we rely the dynCall functions generated by\n  // wasm-emscripten-finalize\n  if (sig.includes('j')) {\n    return dynCallLegacy(sig, ptr, args);\n  }\n  assert(getWasmTableEntry(ptr), 'missing table entry in dynCall: ' + ptr);\n  var rtn = getWasmTableEntry(ptr).apply(null, args);\n  return rtn;\n}\nfunction getDynCaller(sig, ptr) {\n  assert(sig.includes('j') || sig.includes('p'), 'getDynCaller should only be called with i64 sigs');\n  var argCache = [];\n  return function () {\n    argCache.length = 0;\n    Object.assign(argCache, arguments);\n    return dynCall(sig, ptr, argCache);\n  };\n}\nfunction embind__requireFunction(signature, rawFunction) {\n  signature = readLatin1String(signature);\n  function makeDynCaller() {\n    if (signature.includes('j')) {\n      return getDynCaller(signature, rawFunction);\n    }\n    return getWasmTableEntry(rawFunction);\n  }\n  var fp = makeDynCaller();\n  if (typeof fp != \"function\") {\n    throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n  }\n  return fp;\n}\nvar UnboundTypeError = undefined;\nfunction getTypeName(type) {\n  var ptr = ___getTypeName(type);\n  var rv = readLatin1String(ptr);\n  _free(ptr);\n  return rv;\n}\nfunction throwUnboundTypeError(message, types) {\n  var unboundTypes = [];\n  var seen = {};\n  function visit(type) {\n    if (seen[type]) {\n      return;\n    }\n    if (registeredTypes[type]) {\n      return;\n    }\n    if (typeDependencies[type]) {\n      typeDependencies[type].forEach(visit);\n      return;\n    }\n    unboundTypes.push(type);\n    seen[type] = true;\n  }\n  types.forEach(visit);\n  throw new UnboundTypeError(message + ': ' + unboundTypes.map(getTypeName).join([', ']));\n}\nfunction __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn, isAsync) {\n  var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n  name = readLatin1String(name);\n  rawInvoker = embind__requireFunction(signature, rawInvoker);\n  exposePublicSymbol(name, function () {\n    throwUnboundTypeError('Cannot call ' + name + ' due to unbound types', argTypes);\n  }, argCount - 1);\n  whenDependentTypesAreResolved([], argTypes, function (argTypes) {\n    var invokerArgsArray = [argTypes[0] /* return value */, null /* no class 'this'*/].concat(argTypes.slice(1) /* actual params */);\n    replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null /* no class 'this'*/, rawInvoker, fn, isAsync), argCount - 1);\n    return [];\n  });\n}\nfunction integerReadValueFromPointer(name, shift, signed) {\n  // integers are quite common, so generate very specialized functions\n  switch (shift) {\n    case 0:\n      return signed ? function readS8FromPointer(pointer) {\n        return HEAP8[pointer];\n      } : function readU8FromPointer(pointer) {\n        return HEAPU8[pointer];\n      };\n    case 1:\n      return signed ? function readS16FromPointer(pointer) {\n        return HEAP16[pointer >> 1];\n      } : function readU16FromPointer(pointer) {\n        return HEAPU16[pointer >> 1];\n      };\n    case 2:\n      return signed ? function readS32FromPointer(pointer) {\n        return HEAP32[pointer >> 2];\n      } : function readU32FromPointer(pointer) {\n        return HEAPU32[pointer >> 2];\n      };\n    default:\n      throw new TypeError(\"Unknown integer type: \" + name);\n  }\n}\nfunction __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\n  name = readLatin1String(name);\n  // LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come\n  // out as 'i32 -1'. Always treat those as max u32.\n  if (maxRange === -1) {\n    maxRange = 4294967295;\n  }\n  var shift = getShiftFromSize(size);\n  var fromWireType = value => value;\n  if (minRange === 0) {\n    var bitshift = 32 - 8 * size;\n    fromWireType = value => value << bitshift >>> bitshift;\n  }\n  var isUnsignedType = name.includes('unsigned');\n  var checkAssertions = (value, toTypeName) => {\n    if (typeof value != \"number\" && typeof value != \"boolean\") {\n      throw new TypeError('Cannot convert \"' + embindRepr(value) + '\" to ' + toTypeName);\n    }\n    if (value < minRange || value > maxRange) {\n      throw new TypeError('Passing a number \"' + embindRepr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name + '\", which is outside the valid range [' + minRange + ', ' + maxRange + ']!');\n    }\n  };\n  var toWireType;\n  if (isUnsignedType) {\n    toWireType = function (destructors, value) {\n      checkAssertions(value, this.name);\n      return value >>> 0;\n    };\n  } else {\n    toWireType = function (destructors, value) {\n      checkAssertions(value, this.name);\n      // The VM will perform JS to Wasm value conversion, according to the spec:\n      // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\n      return value;\n    };\n  }\n  registerType(primitiveType, {\n    name: name,\n    'fromWireType': fromWireType,\n    'toWireType': toWireType,\n    'argPackAdvance': 8,\n    'readValueFromPointer': integerReadValueFromPointer(name, shift, minRange !== 0),\n    destructorFunction: null // This type does not need a destructor\n  });\n}\n\nfunction __embind_register_memory_view(rawType, dataTypeIndex, name) {\n  var typeMapping = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];\n  var TA = typeMapping[dataTypeIndex];\n  function decodeMemoryView(handle) {\n    handle = handle >> 2;\n    var heap = HEAPU32;\n    var size = heap[handle]; // in elements\n    var data = heap[handle + 1]; // byte offset into emscripten heap\n    return new TA(heap.buffer, data, size);\n  }\n  name = readLatin1String(name);\n  registerType(rawType, {\n    name: name,\n    'fromWireType': decodeMemoryView,\n    'argPackAdvance': 8,\n    'readValueFromPointer': decodeMemoryView\n  }, {\n    ignoreDuplicateRegistrations: true\n  });\n}\nfunction stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n  // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\n  // undefined and false each don't write out any bytes.\n  if (!(maxBytesToWrite > 0)) return 0;\n  var startIdx = outIdx;\n  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n    // unit, not a Unicode code point of the character! So decode\n    // UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\n    // and https://www.ietf.org/rfc/rfc2279.txt\n    // and https://tools.ietf.org/html/rfc3629\n    var u = str.charCodeAt(i); // possibly a lead surrogate\n    if (u >= 0xD800 && u <= 0xDFFF) {\n      var u1 = str.charCodeAt(++i);\n      u = 0x10000 + ((u & 0x3FF) << 10) | u1 & 0x3FF;\n    }\n    if (u <= 0x7F) {\n      if (outIdx >= endIdx) break;\n      heap[outIdx++] = u;\n    } else if (u <= 0x7FF) {\n      if (outIdx + 1 >= endIdx) break;\n      heap[outIdx++] = 0xC0 | u >> 6;\n      heap[outIdx++] = 0x80 | u & 63;\n    } else if (u <= 0xFFFF) {\n      if (outIdx + 2 >= endIdx) break;\n      heap[outIdx++] = 0xE0 | u >> 12;\n      heap[outIdx++] = 0x80 | u >> 6 & 63;\n      heap[outIdx++] = 0x80 | u & 63;\n    } else {\n      if (outIdx + 3 >= endIdx) break;\n      if (u > 0x10FFFF) warnOnce('Invalid Unicode code point ' + ptrToString(u) + ' encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).');\n      heap[outIdx++] = 0xF0 | u >> 18;\n      heap[outIdx++] = 0x80 | u >> 12 & 63;\n      heap[outIdx++] = 0x80 | u >> 6 & 63;\n      heap[outIdx++] = 0x80 | u & 63;\n    }\n  }\n  // Null-terminate the pointer to the buffer.\n  heap[outIdx] = 0;\n  return outIdx - startIdx;\n}\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n}\nfunction lengthBytesUTF8(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n    // unit, not a Unicode code point of the character! So decode\n    // UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var c = str.charCodeAt(i); // possibly a lead surrogate\n    if (c <= 0x7F) {\n      len++;\n    } else if (c <= 0x7FF) {\n      len += 2;\n    } else if (c >= 0xD800 && c <= 0xDFFF) {\n      len += 4;\n      ++i;\n    } else {\n      len += 3;\n    }\n  }\n  return len;\n}\nfunction __embind_register_std_string(rawType, name) {\n  name = readLatin1String(name);\n  var stdStringIsUTF8\n  //process only std::string bindings with UTF8 support, in contrast to e.g. std::basic_string<unsigned char>\n  = name === \"std::string\";\n  registerType(rawType, {\n    name: name,\n    'fromWireType': function (value) {\n      var length = HEAPU32[value >> 2];\n      var payload = value + 4;\n      var str;\n      if (stdStringIsUTF8) {\n        var decodeStartPtr = payload;\n        // Looping here to support possible embedded '0' bytes\n        for (var i = 0; i <= length; ++i) {\n          var currentBytePtr = payload + i;\n          if (i == length || HEAPU8[currentBytePtr] == 0) {\n            var maxRead = currentBytePtr - decodeStartPtr;\n            var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n            if (str === undefined) {\n              str = stringSegment;\n            } else {\n              str += String.fromCharCode(0);\n              str += stringSegment;\n            }\n            decodeStartPtr = currentBytePtr + 1;\n          }\n        }\n      } else {\n        var a = new Array(length);\n        for (var i = 0; i < length; ++i) {\n          a[i] = String.fromCharCode(HEAPU8[payload + i]);\n        }\n        str = a.join('');\n      }\n      _free(value);\n      return str;\n    },\n    'toWireType': function (destructors, value) {\n      if (value instanceof ArrayBuffer) {\n        value = new Uint8Array(value);\n      }\n      var length;\n      var valueIsOfTypeString = typeof value == 'string';\n      if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n        throwBindingError('Cannot pass non-string to std::string');\n      }\n      if (stdStringIsUTF8 && valueIsOfTypeString) {\n        length = lengthBytesUTF8(value);\n      } else {\n        length = value.length;\n      }\n\n      // assumes 4-byte alignment\n      var base = _malloc(4 + length + 1);\n      var ptr = base + 4;\n      HEAPU32[base >> 2] = length;\n      if (stdStringIsUTF8 && valueIsOfTypeString) {\n        stringToUTF8(value, ptr, length + 1);\n      } else {\n        if (valueIsOfTypeString) {\n          for (var i = 0; i < length; ++i) {\n            var charCode = value.charCodeAt(i);\n            if (charCode > 255) {\n              _free(ptr);\n              throwBindingError('String has UTF-16 code units that do not fit in 8 bits');\n            }\n            HEAPU8[ptr + i] = charCode;\n          }\n        } else {\n          for (var i = 0; i < length; ++i) {\n            HEAPU8[ptr + i] = value[i];\n          }\n        }\n      }\n      if (destructors !== null) {\n        destructors.push(_free, base);\n      }\n      return base;\n    },\n    'argPackAdvance': 8,\n    'readValueFromPointer': simpleReadValueFromPointer,\n    destructorFunction: function (ptr) {\n      _free(ptr);\n    }\n  });\n}\nvar UTF16Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf-16le') : undefined;\n;\nfunction UTF16ToString(ptr, maxBytesToRead) {\n  assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');\n  var endPtr = ptr;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on\n  // null terminator by itself.\n  // Also, use the length info to avoid running tiny strings through\n  // TextDecoder, since .subarray() allocates garbage.\n  var idx = endPtr >> 1;\n  var maxIdx = idx + maxBytesToRead / 2;\n  // If maxBytesToRead is not passed explicitly, it will be undefined, and this\n  // will always evaluate to true. This saves on code size.\n  while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;\n  endPtr = idx << 1;\n  if (endPtr - ptr > 32 && UTF16Decoder) return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n\n  // Fallback: decode without UTF16Decoder\n  var str = '';\n\n  // If maxBytesToRead is not passed explicitly, it will be undefined, and the\n  // for-loop's condition will always evaluate to true. The loop is then\n  // terminated on the first null char.\n  for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n    var codeUnit = HEAP16[ptr + i * 2 >> 1];\n    if (codeUnit == 0) break;\n    // fromCharCode constructs a character from a UTF-16 code unit, so we can\n    // pass the UTF16 string right through.\n    str += String.fromCharCode(codeUnit);\n  }\n  return str;\n}\n_c6 = UTF16ToString;\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\n  assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n  if (maxBytesToWrite === undefined) {\n    maxBytesToWrite = 0x7FFFFFFF;\n  }\n  if (maxBytesToWrite < 2) return 0;\n  maxBytesToWrite -= 2; // Null terminator.\n  var startPtr = outPtr;\n  var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n  for (var i = 0; i < numCharsToWrite; ++i) {\n    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n    HEAP16[outPtr >> 1] = codeUnit;\n    outPtr += 2;\n  }\n  // Null-terminate the pointer to the HEAP.\n  HEAP16[outPtr >> 1] = 0;\n  return outPtr - startPtr;\n}\nfunction lengthBytesUTF16(str) {\n  return str.length * 2;\n}\nfunction UTF32ToString(ptr, maxBytesToRead) {\n  assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');\n  var i = 0;\n  var str = '';\n  // If maxBytesToRead is not passed explicitly, it will be undefined, and this\n  // will always evaluate to true. This saves on code size.\n  while (!(i >= maxBytesToRead / 4)) {\n    var utf32 = HEAP32[ptr + i * 4 >> 2];\n    if (utf32 == 0) break;\n    ++i;\n    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    if (utf32 >= 0x10000) {\n      var ch = utf32 - 0x10000;\n      str += String.fromCharCode(0xD800 | ch >> 10, 0xDC00 | ch & 0x3FF);\n    } else {\n      str += String.fromCharCode(utf32);\n    }\n  }\n  return str;\n}\n_c7 = UTF32ToString;\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\n  assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n  if (maxBytesToWrite === undefined) {\n    maxBytesToWrite = 0x7FFFFFFF;\n  }\n  if (maxBytesToWrite < 4) return 0;\n  var startPtr = outPtr;\n  var endPtr = startPtr + maxBytesToWrite - 4;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {\n      var trailSurrogate = str.charCodeAt(++i);\n      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | trailSurrogate & 0x3FF;\n    }\n    HEAP32[outPtr >> 2] = codeUnit;\n    outPtr += 4;\n    if (outPtr + 4 > endPtr) break;\n  }\n  // Null-terminate the pointer to the HEAP.\n  HEAP32[outPtr >> 2] = 0;\n  return outPtr - startPtr;\n}\nfunction lengthBytesUTF32(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var codeUnit = str.charCodeAt(i);\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.\n    len += 4;\n  }\n  return len;\n}\nfunction __embind_register_std_wstring(rawType, charSize, name) {\n  name = readLatin1String(name);\n  var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n  if (charSize === 2) {\n    decodeString = UTF16ToString;\n    encodeString = stringToUTF16;\n    lengthBytesUTF = lengthBytesUTF16;\n    getHeap = () => HEAPU16;\n    shift = 1;\n  } else if (charSize === 4) {\n    decodeString = UTF32ToString;\n    encodeString = stringToUTF32;\n    lengthBytesUTF = lengthBytesUTF32;\n    getHeap = () => HEAPU32;\n    shift = 2;\n  }\n  registerType(rawType, {\n    name: name,\n    'fromWireType': function (value) {\n      // Code mostly taken from _embind_register_std_string fromWireType\n      var length = HEAPU32[value >> 2];\n      var HEAP = getHeap();\n      var str;\n      var decodeStartPtr = value + 4;\n      // Looping here to support possible embedded '0' bytes\n      for (var i = 0; i <= length; ++i) {\n        var currentBytePtr = value + 4 + i * charSize;\n        if (i == length || HEAP[currentBytePtr >> shift] == 0) {\n          var maxReadBytes = currentBytePtr - decodeStartPtr;\n          var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n          if (str === undefined) {\n            str = stringSegment;\n          } else {\n            str += String.fromCharCode(0);\n            str += stringSegment;\n          }\n          decodeStartPtr = currentBytePtr + charSize;\n        }\n      }\n      _free(value);\n      return str;\n    },\n    'toWireType': function (destructors, value) {\n      if (!(typeof value == 'string')) {\n        throwBindingError('Cannot pass non-string to C++ string type ' + name);\n      }\n\n      // assumes 4-byte alignment\n      var length = lengthBytesUTF(value);\n      var ptr = _malloc(4 + length + charSize);\n      HEAPU32[ptr >> 2] = length >> shift;\n      encodeString(value, ptr + 4, length + charSize);\n      if (destructors !== null) {\n        destructors.push(_free, ptr);\n      }\n      return ptr;\n    },\n    'argPackAdvance': 8,\n    'readValueFromPointer': simpleReadValueFromPointer,\n    destructorFunction: function (ptr) {\n      _free(ptr);\n    }\n  });\n}\nfunction __embind_register_void(rawType, name) {\n  name = readLatin1String(name);\n  registerType(rawType, {\n    isVoid: true,\n    // void return values can be optimized out sometimes\n    name: name,\n    'argPackAdvance': 0,\n    'fromWireType': function () {\n      return undefined;\n    },\n    'toWireType': function (destructors, o) {\n      // TODO: assert if anything else is given?\n      return undefined;\n    }\n  });\n}\nfunction _abort() {\n  abort('native code called abort()');\n}\nfunction _emscripten_memcpy_big(dest, src, num) {\n  HEAPU8.copyWithin(dest, src, src + num);\n}\nfunction getHeapMax() {\n  return HEAPU8.length;\n}\nfunction abortOnCannotGrowMemory(requestedSize) {\n  abort('Cannot enlarge memory arrays to size ' + requestedSize + ' bytes (OOM). Either (1) compile with -sINITIAL_MEMORY=X with X higher than the current value ' + HEAP8.length + ', (2) compile with -sALLOW_MEMORY_GROWTH which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with -sABORTING_MALLOC=0');\n}\nfunction _emscripten_resize_heap(requestedSize) {\n  var oldSize = HEAPU8.length;\n  requestedSize = requestedSize >>> 0;\n  abortOnCannotGrowMemory(requestedSize);\n}\nvar SYSCALLS = {\n  varargs: undefined,\n  get: function () {\n    assert(SYSCALLS.varargs != undefined);\n    SYSCALLS.varargs += 4;\n    var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];\n    return ret;\n  },\n  getStr: function (ptr) {\n    var ret = UTF8ToString(ptr);\n    return ret;\n  }\n};\nfunction _fd_close(fd) {\n  abort('fd_close called without SYSCALLS_REQUIRE_FILESYSTEM');\n}\nfunction convertI32PairToI53Checked(lo, hi) {\n  assert(lo == lo >>> 0 || lo == (lo | 0)); // lo should either be a i32 or a u32\n  assert(hi === (hi | 0)); // hi should be a i32\n  return hi + 0x200000 >>> 0 < 0x400001 - !!lo ? (lo >>> 0) + hi * 4294967296 : NaN;\n}\nfunction _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n  return 70;\n}\nvar printCharBuffers = [null, [], []];\nfunction printChar(stream, curr) {\n  var buffer = printCharBuffers[stream];\n  assert(buffer);\n  if (curr === 0 || curr === 10) {\n    (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n    buffer.length = 0;\n  } else {\n    buffer.push(curr);\n  }\n}\nfunction flush_NO_FILESYSTEM() {\n  // flush anything remaining in the buffers during shutdown\n  _fflush(0);\n  if (printCharBuffers[1].length) printChar(1, 10);\n  if (printCharBuffers[2].length) printChar(2, 10);\n}\nfunction _fd_write(fd, iov, iovcnt, pnum) {\n  // hack to support printf in SYSCALLS_REQUIRE_FILESYSTEM=0\n  var num = 0;\n  for (var i = 0; i < iovcnt; i++) {\n    var ptr = HEAPU32[iov >> 2];\n    var len = HEAPU32[iov + 4 >> 2];\n    iov += 8;\n    for (var j = 0; j < len; j++) {\n      printChar(fd, HEAPU8[ptr + j]);\n    }\n    num += len;\n  }\n  HEAPU32[pnum >> 2] = num;\n  return 0;\n}\nfunction getCFunc(ident) {\n  var func = Module['_' + ident]; // closure exported function\n  assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');\n  return func;\n}\nfunction writeArrayToMemory(array, buffer) {\n  assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)');\n  HEAP8.set(array, buffer);\n}\nfunction stringToUTF8OnStack(str) {\n  var size = lengthBytesUTF8(str) + 1;\n  var ret = stackAlloc(size);\n  stringToUTF8(str, ret, size);\n  return ret;\n}\n\n/**\n * @param {string|null=} returnType\n * @param {Array=} argTypes\n * @param {Arguments|Array=} args\n * @param {Object=} opts\n */\nfunction ccall(ident, returnType, argTypes, args, opts) {\n  // For fast lookup of conversion functions\n  var toC = {\n    'string': str => {\n      var ret = 0;\n      if (str !== null && str !== undefined && str !== 0) {\n        // null string\n        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\\0'\n        ret = stringToUTF8OnStack(str);\n      }\n      return ret;\n    },\n    'array': arr => {\n      var ret = stackAlloc(arr.length);\n      writeArrayToMemory(arr, ret);\n      return ret;\n    }\n  };\n  function convertReturnValue(ret) {\n    if (returnType === 'string') {\n      return UTF8ToString(ret);\n    }\n    if (returnType === 'boolean') return Boolean(ret);\n    return ret;\n  }\n  var func = getCFunc(ident);\n  var cArgs = [];\n  var stack = 0;\n  assert(returnType !== 'array', 'Return type should not be \"array\".');\n  if (args) {\n    for (var i = 0; i < args.length; i++) {\n      var converter = toC[argTypes[i]];\n      if (converter) {\n        if (stack === 0) stack = stackSave();\n        cArgs[i] = converter(args[i]);\n      } else {\n        cArgs[i] = args[i];\n      }\n    }\n  }\n  var ret = func.apply(null, cArgs);\n  function onDone(ret) {\n    if (stack !== 0) stackRestore(stack);\n    return convertReturnValue(ret);\n  }\n  ret = onDone(ret);\n  return ret;\n}\n\n/**\n * @param {string=} returnType\n * @param {Array=} argTypes\n * @param {Object=} opts\n */\nfunction cwrap(ident, returnType, argTypes, opts) {\n  return function () {\n    return ccall(ident, returnType, argTypes, arguments, opts);\n  };\n}\nembind_init_charCodes();\nBindingError = Module['BindingError'] = extendError(Error, 'BindingError');\n;\nInternalError = Module['InternalError'] = extendError(Error, 'InternalError');\n;\ninit_emval();\n;\nUnboundTypeError = Module['UnboundTypeError'] = extendError(Error, 'UnboundTypeError');\n;\nfunction checkIncomingModuleAPI() {\n  ignoredModuleProp('fetchSettings');\n}\nvar wasmImports = {\n  \"__assert_fail\": ___assert_fail,\n  \"__cxa_begin_catch\": ___cxa_begin_catch,\n  \"__cxa_find_matching_catch_2\": ___cxa_find_matching_catch_2,\n  \"__cxa_find_matching_catch_3\": ___cxa_find_matching_catch_3,\n  \"__resumeException\": ___resumeException,\n  \"_embind_register_bigint\": __embind_register_bigint,\n  \"_embind_register_bool\": __embind_register_bool,\n  \"_embind_register_emval\": __embind_register_emval,\n  \"_embind_register_float\": __embind_register_float,\n  \"_embind_register_function\": __embind_register_function,\n  \"_embind_register_integer\": __embind_register_integer,\n  \"_embind_register_memory_view\": __embind_register_memory_view,\n  \"_embind_register_std_string\": __embind_register_std_string,\n  \"_embind_register_std_wstring\": __embind_register_std_wstring,\n  \"_embind_register_void\": __embind_register_void,\n  \"abort\": _abort,\n  \"emscripten_memcpy_big\": _emscripten_memcpy_big,\n  \"emscripten_resize_heap\": _emscripten_resize_heap,\n  \"fd_close\": _fd_close,\n  \"fd_seek\": _fd_seek,\n  \"fd_write\": _fd_write,\n  \"invoke_ii\": invoke_ii,\n  \"invoke_iii\": invoke_iii,\n  \"invoke_v\": invoke_v,\n  \"invoke_vi\": invoke_vi,\n  \"invoke_vii\": invoke_vii,\n  \"invoke_viii\": invoke_viii,\n  \"invoke_viiii\": invoke_viiii\n};\nvar asm = createWasm();\n/** @type {function(...*):?} */\nvar ___wasm_call_ctors = createExportWrapper(\"__wasm_call_ctors\");\n/** @type {function(...*):?} */\nvar ___getTypeName = Module[\"___getTypeName\"] = createExportWrapper(\"__getTypeName\");\n/** @type {function(...*):?} */\nvar __embind_initialize_bindings = Module[\"__embind_initialize_bindings\"] = createExportWrapper(\"_embind_initialize_bindings\");\n/** @type {function(...*):?} */\nvar ___errno_location = createExportWrapper(\"__errno_location\");\n/** @type {function(...*):?} */\nvar _fflush = Module[\"_fflush\"] = createExportWrapper(\"fflush\");\n/** @type {function(...*):?} */\nvar _malloc = createExportWrapper(\"malloc\");\n/** @type {function(...*):?} */\nvar _free = Module[\"_free\"] = createExportWrapper(\"free\");\n/** @type {function(...*):?} */\nvar _setThrew = createExportWrapper(\"setThrew\");\n/** @type {function(...*):?} */\nvar setTempRet0 = createExportWrapper(\"setTempRet0\");\n/** @type {function(...*):?} */\nvar getTempRet0 = createExportWrapper(\"getTempRet0\");\n/** @type {function(...*):?} */\nvar _emscripten_stack_init = function () {\n  return (_emscripten_stack_init = Module[\"asm\"][\"emscripten_stack_init\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_free = function () {\n  return (_emscripten_stack_get_free = Module[\"asm\"][\"emscripten_stack_get_free\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_base = function () {\n  return (_emscripten_stack_get_base = Module[\"asm\"][\"emscripten_stack_get_base\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_end = function () {\n  return (_emscripten_stack_get_end = Module[\"asm\"][\"emscripten_stack_get_end\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar stackSave = createExportWrapper(\"stackSave\");\n/** @type {function(...*):?} */\nvar stackRestore = createExportWrapper(\"stackRestore\");\n/** @type {function(...*):?} */\nvar stackAlloc = createExportWrapper(\"stackAlloc\");\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_current = function () {\n  return (_emscripten_stack_get_current = Module[\"asm\"][\"emscripten_stack_get_current\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar ___get_exception_message = Module[\"___get_exception_message\"] = createExportWrapper(\"__get_exception_message\");\n/** @type {function(...*):?} */\nvar ___cxa_free_exception = createExportWrapper(\"__cxa_free_exception\");\n/** @type {function(...*):?} */\nvar ___cxa_can_catch = createExportWrapper(\"__cxa_can_catch\");\n/** @type {function(...*):?} */\nvar ___cxa_is_pointer_type = createExportWrapper(\"__cxa_is_pointer_type\");\n/** @type {function(...*):?} */\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = createExportWrapper(\"dynCall_jiji\");\nfunction invoke_ii(index, a1) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1);\n  } catch (e) {\n    stackRestore(sp);\n    if (!(e instanceof EmscriptenEH)) throw e;\n    _setThrew(1, 0);\n  }\n}\nfunction invoke_viiii(index, a1, a2, a3, a4) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1, a2, a3, a4);\n  } catch (e) {\n    stackRestore(sp);\n    if (!(e instanceof EmscriptenEH)) throw e;\n    _setThrew(1, 0);\n  }\n}\nfunction invoke_vii(index, a1, a2) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1, a2);\n  } catch (e) {\n    stackRestore(sp);\n    if (!(e instanceof EmscriptenEH)) throw e;\n    _setThrew(1, 0);\n  }\n}\nfunction invoke_v(index) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)();\n  } catch (e) {\n    stackRestore(sp);\n    if (!(e instanceof EmscriptenEH)) throw e;\n    _setThrew(1, 0);\n  }\n}\nfunction invoke_iii(index, a1, a2) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1, a2);\n  } catch (e) {\n    stackRestore(sp);\n    if (!(e instanceof EmscriptenEH)) throw e;\n    _setThrew(1, 0);\n  }\n}\nfunction invoke_viii(index, a1, a2, a3) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1, a2, a3);\n  } catch (e) {\n    stackRestore(sp);\n    if (!(e instanceof EmscriptenEH)) throw e;\n    _setThrew(1, 0);\n  }\n}\nfunction invoke_vi(index, a1) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1);\n  } catch (e) {\n    stackRestore(sp);\n    if (!(e instanceof EmscriptenEH)) throw e;\n    _setThrew(1, 0);\n  }\n}\n\n// include: postamble.js\n// === Auto-generated postamble setup entry stuff ===\n\nModule[\"ccall\"] = ccall;\nModule[\"cwrap\"] = cwrap;\nvar missingLibrarySymbols = ['zeroMemory', 'exitJS', 'emscripten_realloc_buffer', 'isLeapYear', 'ydayFromDate', 'arraySum', 'addDays', 'setErrNo', 'inetPton4', 'inetNtop4', 'inetPton6', 'inetNtop6', 'readSockaddr', 'writeSockaddr', 'getHostByName', 'initRandomFill', 'randomFill', 'traverseStack', 'getCallstack', 'emscriptenLog', 'convertPCtoSourceLocation', 'readEmAsmArgs', 'jstoi_q', 'jstoi_s', 'getExecutableName', 'listenOnce', 'autoResumeAudioContext', 'handleException', 'runtimeKeepalivePush', 'runtimeKeepalivePop', 'callUserCallback', 'maybeExit', 'safeSetTimeout', 'asmjsMangle', 'asyncLoad', 'alignMemory', 'mmapAlloc', 'getNativeTypeSize', 'STACK_SIZE', 'STACK_ALIGN', 'POINTER_SIZE', 'ASSERTIONS', 'writeI53ToI64', 'writeI53ToI64Clamped', 'writeI53ToI64Signaling', 'writeI53ToU64Clamped', 'writeI53ToU64Signaling', 'readI53FromI64', 'readI53FromU64', 'convertI32PairToI53', 'convertU32PairToI53', 'uleb128Encode', 'sigToWasmTypes', 'generateFuncType', 'convertJsFunctionToWasm', 'getEmptyTableSlot', 'updateTableMap', 'getFunctionAddress', 'addFunction', 'removeFunction', 'reallyNegative', 'unSign', 'strLen', 'reSign', 'formatString', 'intArrayFromString', 'intArrayToString', 'AsciiToString', 'stringToAscii', 'stringToNewUTF8', 'getSocketFromFD', 'getSocketAddress', 'registerKeyEventCallback', 'maybeCStringToJsString', 'findEventTarget', 'findCanvasEventTarget', 'getBoundingClientRect', 'fillMouseEventData', 'registerMouseEventCallback', 'registerWheelEventCallback', 'registerUiEventCallback', 'registerFocusEventCallback', 'fillDeviceOrientationEventData', 'registerDeviceOrientationEventCallback', 'fillDeviceMotionEventData', 'registerDeviceMotionEventCallback', 'screenOrientation', 'fillOrientationChangeEventData', 'registerOrientationChangeEventCallback', 'fillFullscreenChangeEventData', 'registerFullscreenChangeEventCallback', 'JSEvents_requestFullscreen', 'JSEvents_resizeCanvasForFullscreen', 'registerRestoreOldStyle', 'hideEverythingExceptGivenElement', 'restoreHiddenElements', 'setLetterbox', 'softFullscreenResizeWebGLRenderTarget', 'doRequestFullscreen', 'fillPointerlockChangeEventData', 'registerPointerlockChangeEventCallback', 'registerPointerlockErrorEventCallback', 'requestPointerLock', 'fillVisibilityChangeEventData', 'registerVisibilityChangeEventCallback', 'registerTouchEventCallback', 'fillGamepadEventData', 'registerGamepadEventCallback', 'registerBeforeUnloadEventCallback', 'fillBatteryEventData', 'battery', 'registerBatteryEventCallback', 'setCanvasElementSize', 'getCanvasElementSize', 'demangle', 'demangleAll', 'jsStackTrace', 'stackTrace', 'getEnvStrings', 'checkWasiClock', 'wasiRightsToMuslOFlags', 'wasiOFlagsToMuslOFlags', 'createDyncallWrapper', 'setImmediateWrapped', 'clearImmediateWrapped', 'polyfillSetImmediate', 'getPromise', 'makePromise', 'makePromiseCallback', 'setMainLoop', '_setNetworkCallback', 'heapObjectForWebGLType', 'heapAccessShiftForWebGLHeap', 'webgl_enable_ANGLE_instanced_arrays', 'webgl_enable_OES_vertex_array_object', 'webgl_enable_WEBGL_draw_buffers', 'webgl_enable_WEBGL_multi_draw', 'emscriptenWebGLGet', 'computeUnpackAlignedImageSize', 'colorChannelsInGlTextureFormat', 'emscriptenWebGLGetTexPixelData', '__glGenObject', 'emscriptenWebGLGetUniform', 'webglGetUniformLocation', 'webglPrepareUniformLocationsBeforeFirstUse', 'webglGetLeftBracePos', 'emscriptenWebGLGetVertexAttrib', '__glGetActiveAttribOrUniform', 'writeGLArray', 'registerWebGlEventCallback', 'runAndAbortIfError', 'SDL_unicode', 'SDL_ttfContext', 'SDL_audio', 'GLFW_Window', 'ALLOC_NORMAL', 'ALLOC_STACK', 'allocate', 'writeStringToMemory', 'writeAsciiToMemory', 'init_embind', 'getBasestPointer', 'registerInheritedInstance', 'unregisterInheritedInstance', 'getInheritedInstance', 'getInheritedInstanceCount', 'getLiveInheritedInstances', 'requireRegisteredType', 'enumReadValueFromPointer', 'genericPointerToWireType', 'constNoSmartPtrRawPointerToWireType', 'nonConstNoSmartPtrRawPointerToWireType', 'init_RegisteredPointer', 'RegisteredPointer', 'RegisteredPointer_getPointee', 'RegisteredPointer_destructor', 'RegisteredPointer_deleteObject', 'RegisteredPointer_fromWireType', 'runDestructor', 'releaseClassHandle', 'detachFinalizer', 'attachFinalizer', 'makeClassHandle', 'init_ClassHandle', 'ClassHandle', 'ClassHandle_isAliasOf', 'throwInstanceAlreadyDeleted', 'ClassHandle_clone', 'ClassHandle_delete', 'ClassHandle_isDeleted', 'ClassHandle_deleteLater', 'flushPendingDeletes', 'setDelayFunction', 'RegisteredClass', 'shallowCopyInternalPointer', 'downcastPointer', 'upcastPointer', 'validateThis', 'getStringOrSymbol', 'craftEmvalAllocator', 'emval_get_global', 'emval_lookupTypes', 'emval_allocateDestructors', 'emval_addMethodCaller'];\nmissingLibrarySymbols.forEach(missingLibrarySymbol);\nvar unexportedSymbols = ['run', 'addOnPreRun', 'addOnInit', 'addOnPreMain', 'addOnExit', 'addOnPostRun', 'addRunDependency', 'removeRunDependency', 'FS_createFolder', 'FS_createPath', 'FS_createDataFile', 'FS_createPreloadedFile', 'FS_createLazyFile', 'FS_createLink', 'FS_createDevice', 'FS_unlink', 'out', 'err', 'callMain', 'abort', 'keepRuntimeAlive', 'wasmMemory', 'stackAlloc', 'stackSave', 'stackRestore', 'getTempRet0', 'setTempRet0', 'writeStackCookie', 'checkStackCookie', 'ptrToString', 'getHeapMax', 'abortOnCannotGrowMemory', 'ENV', 'MONTH_DAYS_REGULAR', 'MONTH_DAYS_LEAP', 'MONTH_DAYS_REGULAR_CUMULATIVE', 'MONTH_DAYS_LEAP_CUMULATIVE', 'ERRNO_CODES', 'ERRNO_MESSAGES', 'DNS', 'Protocols', 'Sockets', 'timers', 'warnOnce', 'UNWIND_CACHE', 'readEmAsmArgsArray', 'dynCallLegacy', 'getDynCaller', 'dynCall', 'HandleAllocator', 'convertI32PairToI53Checked', 'getCFunc', 'freeTableIndexes', 'functionsInTableMap', 'setValue', 'getValue', 'PATH', 'PATH_FS', 'UTF8Decoder', 'UTF8ArrayToString', 'UTF8ToString', 'stringToUTF8Array', 'stringToUTF8', 'lengthBytesUTF8', 'UTF16Decoder', 'UTF16ToString', 'stringToUTF16', 'lengthBytesUTF16', 'UTF32ToString', 'stringToUTF32', 'lengthBytesUTF32', 'stringToUTF8OnStack', 'writeArrayToMemory', 'SYSCALLS', 'JSEvents', 'specialHTMLTargets', 'currentFullscreenStrategy', 'restoreOldWindowedStyle', 'ExitStatus', 'flush_NO_FILESYSTEM', 'dlopenMissingError', 'promiseMap', 'uncaughtExceptionCount', 'exceptionLast', 'exceptionCaught', 'ExceptionInfo', 'exception_addRef', 'exception_decRef', 'getExceptionMessageCommon', 'incrementExceptionRefcount', 'decrementExceptionRefcount', 'getExceptionMessage', 'Browser', 'wget', 'FS', 'MEMFS', 'TTY', 'PIPEFS', 'SOCKFS', 'tempFixedLengthArray', 'miniTempWebGLFloatBuffers', 'miniTempWebGLIntBuffers', 'GL', 'emscripten_webgl_power_preferences', 'AL', 'GLUT', 'EGL', 'GLEW', 'IDBStore', 'SDL', 'SDL_gfx', 'GLFW', 'allocateUTF8', 'allocateUTF8OnStack', 'InternalError', 'BindingError', 'UnboundTypeError', 'PureVirtualError', 'throwInternalError', 'throwBindingError', 'throwUnboundTypeError', 'ensureOverloadTable', 'exposePublicSymbol', 'replacePublicSymbol', 'extendError', 'createNamedFunction', 'embindRepr', 'registeredInstances', 'registeredTypes', 'awaitingDependencies', 'typeDependencies', 'registeredPointers', 'registerType', 'whenDependentTypesAreResolved', 'embind_charCodes', 'embind_init_charCodes', 'readLatin1String', 'getTypeName', 'heap32VectorToArray', 'getShiftFromSize', 'integerReadValueFromPointer', 'floatReadValueFromPointer', 'simpleReadValueFromPointer', 'runDestructors', 'newFunc', 'craftInvokerFunction', 'embind__requireFunction', 'tupleRegistrations', 'structRegistrations', 'finalizationRegistry', 'detachFinalizer_deps', 'deletionQueue', 'delayFunction', 'char_0', 'char_9', 'makeLegalFunctionName', 'emval_handles', 'emval_symbols', 'init_emval', 'count_emval_handles', 'Emval', 'emval_newers', 'emval_methodCallers', 'emval_registeredMethods'];\nunexportedSymbols.forEach(unexportedRuntimeSymbol);\nvar calledRun;\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!calledRun) run();\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n};\n\nfunction stackCheckInit() {\n  // This is normally called automatically during __wasm_call_ctors but need to\n  // get these values before even running any of the ctors so we call it redundantly\n  // here.\n  _emscripten_stack_init();\n  // TODO(sbc): Move writeStackCookie to native to to avoid this.\n  writeStackCookie();\n}\nfunction run() {\n  if (runDependencies > 0) {\n    return;\n  }\n  stackCheckInit();\n  preRun();\n\n  // a preRun added a dependency, run will be called later\n  if (runDependencies > 0) {\n    return;\n  }\n  function doRun() {\n    // run may have just been called through dependencies being fulfilled just in this very frame,\n    // or while the async setStatus time below was happening\n    if (calledRun) return;\n    calledRun = true;\n    Module['calledRun'] = true;\n    if (ABORT) return;\n    initRuntime();\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n    assert(!Module['_main'], 'compiled without a main, but one is present. if you added it from JS, use Module[\"onRuntimeInitialized\"]');\n    postRun();\n  }\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function () {\n      setTimeout(function () {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else {\n    doRun();\n  }\n  checkStackCookie();\n}\nfunction checkUnflushedContent() {\n  // Compiler settings do not allow exiting the runtime, so flushing\n  // the streams is not possible. but in ASSERTIONS mode we check\n  // if there was something to flush, and if so tell the user they\n  // should request that the runtime be exitable.\n  // Normally we would not even include flush() at all, but in ASSERTIONS\n  // builds we do so just for this check, and here we see if there is any\n  // content to flush, that is, we check if there would have been\n  // something a non-ASSERTIONS build would have not seen.\n  // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0\n  // mode (which has its own special function for this; otherwise, all\n  // the code is inside libc)\n  var oldOut = out;\n  var oldErr = err;\n  var has = false;\n  out = err = x => {\n    has = true;\n  };\n  try {\n    // it doesn't matter if it fails\n    flush_NO_FILESYSTEM();\n  } catch (e) {}\n  out = oldOut;\n  err = oldErr;\n  if (has) {\n    warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.');\n    warnOnce('(this may also be due to not including full filesystem support - try building with -sFORCE_FILESYSTEM)');\n  }\n}\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\nrun();\n\n// end include: postamble.js\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"ExitStatus\");\n$RefreshReg$(_c2, \"ExceptionInfo\");\n$RefreshReg$(_c3, \"UTF8ArrayToString\");\n$RefreshReg$(_c4, \"UTF8ToString\");\n$RefreshReg$(_c5, \"HandleAllocator\");\n$RefreshReg$(_c6, \"UTF16ToString\");\n$RefreshReg$(_c7, \"UTF32ToString\");","map":{"version":3,"names":["Module","moduleOverrides","Object","assign","arguments_","thisProgram","quit_","status","toThrow","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","Error","scriptDirectory","locateFile","path","read_","readAsync","readBinary","setWindowTitle","process","require","window","importScripts","read","shell_read","f","data","readbuffer","Uint8Array","assert","onload","onerror","setTimeout","clearTimeout","globalThis","id","scriptArgs","arguments","quit","ExitStatus","toLog","stack","err","print","console","log","warn","error","printErr","self","location","href","document","currentScript","src","indexOf","substr","replace","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","title","out","bind","checkIncomingModuleAPI","legacyModuleProp","IDBFS","PROXYFS","WORKERFS","NODEFS","wasmBinary","noExitRuntime","WebAssembly","abort","wasmMemory","ABORT","EXITSTATUS","condition","text","HEAP","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","updateMemoryViews","b","buffer","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","prototype","subarray","undefined","set","wasmTable","writeStackCookie","max","_emscripten_stack_get_end","checkStackCookie","cookie1","cookie2","ptrToString","h16","h8","__ATPRERUN__","__ATINIT__","__ATEXIT__","__ATPOSTRUN__","runtimeInitialized","runtimeKeepaliveCounter","keepRuntimeAlive","preRun","length","addOnPreRun","shift","callRuntimeCallbacks","initRuntime","postRun","addOnPostRun","cb","unshift","addOnInit","addOnExit","Math","imul","fround","clz32","trunc","runDependencies","runDependencyWatcher","dependenciesFulfilled","runDependencyTracking","getUniqueRunDependency","orig","random","addRunDependency","setInterval","clearInterval","shown","dep","removeRunDependency","callback","what","e","RuntimeError","FS","init","createDataFile","createPreloadedFile","createLazyFile","mkdev","registerDevice","analyzePath","ErrnoError","dataURIPrefix","isDataURI","filename","startsWith","isFileURI","createExportWrapper","name","fixedasm","displayName","asm","apply","EmscriptenEH","EmscriptenSjLj","CppException","constructor","excPtr","excInfo","getExceptionMessage","message","wasmBinaryFile","getBinary","file","getBinaryPromise","binaryFile","fetch","credentials","then","catch","Promise","resolve","instantiateArrayBuffer","imports","receiver","binary","instantiate","instance","reason","instantiateAsync","instantiateStreaming","result","createWasm","info","wasmImports","receiveInstance","module","exports","trueModule","receiveInstantiationResult","tempDouble","tempI64","prop","newName","getOwnPropertyDescriptor","defineProperty","configurable","get","ignoredModuleProp","isExportedByForceFilesystem","missingGlobal","sym","msg","warnOnce","missingLibrarySymbol","librarySymbol","unexportedRuntimeSymbol","dbg","_c","callbacks","wasmTableMirror","getWasmTableEntry","funcPtr","func","exception_decRef","release_ref","get_rethrown","destructor","get_destructor","___cxa_free_exception","ExceptionInfo","ptr","set_type","type","get_type","set_destructor","set_refcount","refcount","set_caught","caught","get_caught","set_rethrown","rethrown","set_adjusted_ptr","add_ref","value","prev","adjustedPtr","get_adjusted_ptr","get_exception_ptr","isPointer","___cxa_is_pointer_type","adjusted","_c2","___cxa_decrement_exception_refcount","decrementExceptionRefcount","withStackSave","stackSave","ret","stackRestore","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","decode","str","u0","String","fromCharCode","u1","u2","ch","_c3","UTF8ToString","_c4","getExceptionMessageCommon","type_addr_addr","stackAlloc","message_addr_addr","___get_exception_message","type_addr","message_addr","_free","getValue","endsWith","exception_addRef","___cxa_increment_exception_refcount","incrementExceptionRefcount","toString","padStart","setValue","abs","min","floor","ceil","___assert_fail","line","exceptionCaught","uncaughtExceptionCount","___cxa_begin_catch","push","exceptionLast","___resumeException","___cxa_find_matching_catch","thrown","setTempRet0","thrownType","i","caughtType","adjusted_ptr_addr","___cxa_can_catch","___cxa_find_matching_catch_2","___cxa_find_matching_catch_3","__embind_register_bigint","primitiveType","size","minRange","maxRange","getShiftFromSize","TypeError","embind_init_charCodes","codes","Array","embind_charCodes","readLatin1String","c","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","charCodeAt","createNamedFunction","body","extendError","baseErrorType","errorName","errorClass","create","BindingError","throwBindingError","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","forEach","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","hasOwnProperty","rawType","registeredInstance","options","ignoreDuplicateRegistrations","__embind_register_bool","trueValue","falseValue","fromWireType","wt","toWireType","destructors","o","readValueFromPointer","pointer","heap","destructorFunction","HandleAllocator","allocated","freelist","allocate","handle","pop","free","_c5","emval_handles","__emval_decref","reserved","count_emval_handles","count","init_emval","Emval","toValue","toHandle","simpleReadValueFromPointer","__embind_register_emval","rv","embindRepr","v","t","floatReadValueFromPointer","__embind_register_float","runDestructors","del","newFunc","argumentList","Function","dummy","obj","r","craftInvokerFunction","humanName","argTypes","classType","cppInvokerFunc","cppTargetFunc","isAsync","argCount","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","ensureOverloadTable","proto","methodName","overloadTable","prevFunc","exposePublicSymbol","numArguments","heap32VectorToArray","firstElement","array","replacePublicSymbol","dynCallLegacy","sig","args","substring","concat","call","dynCall","includes","rtn","getDynCaller","argCache","embind__requireFunction","signature","rawFunction","makeDynCaller","fp","UnboundTypeError","getTypeName","___getTypeName","throwUnboundTypeError","types","unboundTypes","seen","visit","map","join","__embind_register_function","rawArgTypesAddr","rawInvoker","fn","invokerArgsArray","slice","integerReadValueFromPointer","signed","readS8FromPointer","readU8FromPointer","readS16FromPointer","readU16FromPointer","readS32FromPointer","readU32FromPointer","__embind_register_integer","bitshift","isUnsignedType","checkAssertions","toTypeName","__embind_register_memory_view","dataTypeIndex","typeMapping","TA","decodeMemoryView","stringToUTF8Array","outIdx","maxBytesToWrite","startIdx","u","stringToUTF8","outPtr","lengthBytesUTF8","len","__embind_register_std_string","stdStringIsUTF8","payload","decodeStartPtr","currentBytePtr","maxRead","stringSegment","a","ArrayBuffer","valueIsOfTypeString","Uint8ClampedArray","base","_malloc","charCode","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","_c6","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","_c7","stringToUTF32","trailSurrogate","lengthBytesUTF32","__embind_register_std_wstring","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","maxReadBytes","__embind_register_void","isVoid","_abort","_emscripten_memcpy_big","dest","num","copyWithin","getHeapMax","abortOnCannotGrowMemory","requestedSize","_emscripten_resize_heap","oldSize","SYSCALLS","varargs","getStr","_fd_close","fd","convertI32PairToI53Checked","lo","hi","NaN","_fd_seek","offset_low","offset_high","whence","newOffset","printCharBuffers","printChar","stream","curr","flush_NO_FILESYSTEM","_fflush","_fd_write","iov","iovcnt","pnum","j","getCFunc","ident","writeArrayToMemory","stringToUTF8OnStack","ccall","returnType","opts","toC","arr","convertReturnValue","Boolean","cArgs","converter","onDone","cwrap","invoke_ii","invoke_iii","invoke_v","invoke_vi","invoke_vii","invoke_viii","invoke_viiii","___wasm_call_ctors","__embind_initialize_bindings","___errno_location","_setThrew","getTempRet0","_emscripten_stack_init","_emscripten_stack_get_free","_emscripten_stack_get_base","_emscripten_stack_get_current","dynCall_jiji","index","a1","sp","a2","a3","a4","missingLibrarySymbols","unexportedSymbols","calledRun","runCaller","run","stackCheckInit","doRun","checkUnflushedContent","oldOut","oldErr","has","x","$RefreshReg$"],"sources":["/Users/alexclevenger/lehighnumericalanalysis.com/src/add.js"],"sourcesContent":["// include: shell.js\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = typeof Module != 'undefined' ? Module : {};\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n\n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = Object.assign({}, Module);\n\nvar arguments_ = [];\nvar thisProgram = './this.program';\nvar quit_ = (status, toThrow) => {\n  throw toThrow;\n};\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n\nvar ENVIRONMENT_IS_WEB = true;\nvar ENVIRONMENT_IS_WORKER = false;\nvar ENVIRONMENT_IS_NODE = false;\nvar ENVIRONMENT_IS_SHELL = false;\n\nif (Module['ENVIRONMENT']) {\n  throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)');\n}\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = '';\nfunction locateFile(path) {\n  if (Module['locateFile']) {\n    return Module['locateFile'](path, scriptDirectory);\n  }\n  return scriptDirectory + path;\n}\n\n// Hooks that are implemented differently in different runtime environments.\nvar read_,\n    readAsync,\n    readBinary,\n    setWindowTitle;\n\nif (ENVIRONMENT_IS_SHELL) {\n\n  if ((typeof process == 'object' && typeof require === 'function') || typeof window == 'object' || typeof importScripts == 'function') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n  if (typeof read != 'undefined') {\n    read_ = function shell_read(f) {\n      return read(f);\n    };\n  }\n\n  readBinary = function readBinary(f) {\n    let data;\n    if (typeof readbuffer == 'function') {\n      return new Uint8Array(readbuffer(f));\n    }\n    data = read(f, 'binary');\n    assert(typeof data == 'object');\n    return data;\n  };\n\n  readAsync = function readAsync(f, onload, onerror) {\n    setTimeout(() => onload(readBinary(f)), 0);\n  };\n\n  if (typeof clearTimeout == 'undefined') {\n    globalThis.clearTimeout = (id) => {};\n  }\n\n  if (typeof scriptArgs != 'undefined') {\n    arguments_ = scriptArgs;\n  } else if (typeof arguments != 'undefined') {\n    arguments_ = arguments;\n  }\n\n  if (typeof quit == 'function') {\n    quit_ = (status, toThrow) => {\n      // Unlike node which has process.exitCode, d8 has no such mechanism. So we\n      // have no way to set the exit code and then let the program exit with\n      // that code when it naturally stops running (say, when all setTimeouts\n      // have completed). For that reason, we must call `quit` - the only way to\n      // set the exit code - but quit also halts immediately.  To increase\n      // consistency with node (and the web) we schedule the actual quit call\n      // using a setTimeout to give the current stack and any exception handlers\n      // a chance to run.  This enables features such as addOnPostRun (which\n      // expected to be able to run code after main returns).\n      setTimeout(() => {\n        if (!(toThrow instanceof ExitStatus)) {\n          let toLog = toThrow;\n          if (toThrow && typeof toThrow == 'object' && toThrow.stack) {\n            toLog = [toThrow, toThrow.stack];\n          }\n          err('exiting due to exception: ' + toLog);\n        }\n        quit(status);\n      });\n      throw toThrow;\n    };\n  }\n\n  if (typeof print != 'undefined') {\n    // Prefer to use print/printErr where they exist, as they usually work better.\n    if (typeof console == 'undefined') console = /** @type{!Console} */({});\n    console.log = /** @type{!function(this:Console, ...*): undefined} */ (print);\n    console.warn = console.error = /** @type{!function(this:Console, ...*): undefined} */ (typeof printErr != 'undefined' ? printErr : print);\n  }\n\n} else\n\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\n// ENVIRONMENT_IS_NODE.\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\n    scriptDirectory = self.location.href;\n  } else if (typeof document != 'undefined' && document.currentScript) { // web\n    scriptDirectory = document.currentScript.src;\n  }\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n  // otherwise, slice off the final part of the url to find the script directory.\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n  // and scriptDirectory will correctly be replaced with an empty string.\n  // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\n  // they are removed because they could contain a slash.\n  if (scriptDirectory.indexOf('blob:') !== 0) {\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf('/')+1);\n  } else {\n    scriptDirectory = '';\n  }\n\n  if (!(typeof window == 'object' || typeof importScripts == 'function')) throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n  // Differentiate the Web Worker from the Node Worker case, as reading must\n  // be done differently.\n  {\n// include: web_or_worker_shell_read.js\nread_ = (url) => {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, false);\n      xhr.send(null);\n      return xhr.responseText;\n  }\n\n  if (ENVIRONMENT_IS_WORKER) {\n    readBinary = (url) => {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, false);\n        xhr.responseType = 'arraybuffer';\n        xhr.send(null);\n        return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));\n    };\n  }\n\n  readAsync = (url, onload, onerror) => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onload = () => {\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n        onload(xhr.response);\n        return;\n      }\n      onerror();\n    };\n    xhr.onerror = onerror;\n    xhr.send(null);\n  }\n\n// end include: web_or_worker_shell_read.js\n  }\n\n  setWindowTitle = (title) => document.title = title;\n} else\n{\n  throw new Error('environment detection error');\n}\n\nvar out = Module['print'] || console.log.bind(console);\nvar err = Module['printErr'] || console.warn.bind(console);\n\n// Merge back in the overrides\nObject.assign(Module, moduleOverrides);\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\nmoduleOverrides = null;\ncheckIncomingModuleAPI();\n\n// Emit code to handle expected values on the Module object. This applies Module.x\n// to the proper local x. This has two benefits: first, we only emit it if it is\n// expected to arrive, and second, by using a local everywhere else that can be\n// minified.\n\nif (Module['arguments']) arguments_ = Module['arguments'];legacyModuleProp('arguments', 'arguments_');\n\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];legacyModuleProp('thisProgram', 'thisProgram');\n\nif (Module['quit']) quit_ = Module['quit'];legacyModuleProp('quit', 'quit_');\n\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\n// Assertions on removed incoming Module JS APIs.\nassert(typeof Module['memoryInitializerPrefixURL'] == 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['pthreadMainPrefixURL'] == 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['cdInitializerPrefixURL'] == 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['filePackagePrefixURL'] == 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['read'] == 'undefined', 'Module.read option was removed (modify read_ in JS)');\nassert(typeof Module['readAsync'] == 'undefined', 'Module.readAsync option was removed (modify readAsync in JS)');\nassert(typeof Module['readBinary'] == 'undefined', 'Module.readBinary option was removed (modify readBinary in JS)');\nassert(typeof Module['setWindowTitle'] == 'undefined', 'Module.setWindowTitle option was removed (modify setWindowTitle in JS)');\nassert(typeof Module['TOTAL_MEMORY'] == 'undefined', 'Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY');\nlegacyModuleProp('read', 'read_');\nlegacyModuleProp('readAsync', 'readAsync');\nlegacyModuleProp('readBinary', 'readBinary');\nlegacyModuleProp('setWindowTitle', 'setWindowTitle');\nvar IDBFS = 'IDBFS is no longer included by default; build with -lidbfs.js';\nvar PROXYFS = 'PROXYFS is no longer included by default; build with -lproxyfs.js';\nvar WORKERFS = 'WORKERFS is no longer included by default; build with -lworkerfs.js';\nvar NODEFS = 'NODEFS is no longer included by default; build with -lnodefs.js';\n\nassert(!ENVIRONMENT_IS_WORKER, \"worker environment detected but not enabled at build time.  Add 'worker' to `-sENVIRONMENT` to enable.\");\n\nassert(!ENVIRONMENT_IS_NODE, \"node environment detected but not enabled at build time.  Add 'node' to `-sENVIRONMENT` to enable.\");\n\nassert(!ENVIRONMENT_IS_SHELL, \"shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable.\");\n\n\n// end include: shell.js\n// include: preamble.js\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\nvar wasmBinary;\nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];legacyModuleProp('wasmBinary', 'wasmBinary');\nvar noExitRuntime = Module['noExitRuntime'] || true;legacyModuleProp('noExitRuntime', 'noExitRuntime');\n\nif (typeof WebAssembly != 'object') {\n  abort('no native wasm support detected');\n}\n\n// Wasm globals\n\nvar wasmMemory;\n\n//========================================\n// Runtime essentials\n//========================================\n\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS;\n\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    abort('Assertion failed' + (text ? ': ' + text : ''));\n  }\n}\n\n// We used to include malloc/free by default in the past. Show a helpful error in\n// builds with assertions.\n\n// Memory management\n\nvar HEAP,\n/** @type {!Int8Array} */\n  HEAP8,\n/** @type {!Uint8Array} */\n  HEAPU8,\n/** @type {!Int16Array} */\n  HEAP16,\n/** @type {!Uint16Array} */\n  HEAPU16,\n/** @type {!Int32Array} */\n  HEAP32,\n/** @type {!Uint32Array} */\n  HEAPU32,\n/** @type {!Float32Array} */\n  HEAPF32,\n/** @type {!Float64Array} */\n  HEAPF64;\n\nfunction updateMemoryViews() {\n  var b = wasmMemory.buffer;\n  Module['HEAP8'] = HEAP8 = new Int8Array(b);\n  Module['HEAP16'] = HEAP16 = new Int16Array(b);\n  Module['HEAP32'] = HEAP32 = new Int32Array(b);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n}\n\nassert(!Module['STACK_SIZE'], 'STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time')\n\nassert(typeof Int32Array != 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined,\n       'JS engine does not provide full typed array support');\n\n// If memory is defined in wasm, the user can't provide it, or set INITIAL_MEMORY\nassert(!Module['wasmMemory'], 'Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally');\nassert(!Module['INITIAL_MEMORY'], 'Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically');\n\n// include: runtime_init_table.js\n// In regular non-RELOCATABLE mode the table is exported\n// from the wasm module and this will be assigned once\n// the exports are available.\nvar wasmTable;\n\n// end include: runtime_init_table.js\n// include: runtime_stack_check.js\n// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\nfunction writeStackCookie() {\n  var max = _emscripten_stack_get_end();\n  assert((max & 3) == 0);\n  // If the stack ends at address zero we write our cookies 4 bytes into the\n  // stack.  This prevents interference with the (separate) address-zero check\n  // below.\n  if (max == 0) {\n    max += 4;\n  }\n  // The stack grow downwards towards _emscripten_stack_get_end.\n  // We write cookies to the final two words in the stack and detect if they are\n  // ever overwritten.\n  HEAPU32[((max)>>2)] = 0x02135467;\n  HEAPU32[(((max)+(4))>>2)] = 0x89BACDFE;\n  // Also test the global address 0 for integrity.\n  HEAPU32[0] = 0x63736d65; /* 'emsc' */\n}\n\nfunction checkStackCookie() {\n  if (ABORT) return;\n  var max = _emscripten_stack_get_end();\n  // See writeStackCookie().\n  if (max == 0) {\n    max += 4;\n  }\n  var cookie1 = HEAPU32[((max)>>2)];\n  var cookie2 = HEAPU32[(((max)+(4))>>2)];\n  if (cookie1 != 0x02135467 || cookie2 != 0x89BACDFE) {\n    abort('Stack overflow! Stack cookie has been overwritten at ' + ptrToString(max) + ', expected hex dwords 0x89BACDFE and 0x2135467, but received ' + ptrToString(cookie2) + ' ' + ptrToString(cookie1));\n  }\n  // Also test the global address 0 for integrity.\n  if (HEAPU32[0] !== 0x63736d65 /* 'emsc' */) {\n    abort('Runtime error: The application has corrupted its heap memory area (address zero)!');\n  }\n}\n\n// end include: runtime_stack_check.js\n// include: runtime_assertions.js\n// Endianness check\n(function() {\n  var h16 = new Int16Array(1);\n  var h8 = new Int8Array(h16.buffer);\n  h16[0] = 0x6373;\n  if (h8[0] !== 0x73 || h8[1] !== 0x63) throw 'Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)';\n})();\n\n// end include: runtime_assertions.js\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\nvar __ATINIT__    = []; // functions called during startup\nvar __ATEXIT__    = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\n\nvar runtimeInitialized = false;\n\nvar runtimeKeepaliveCounter = 0;\n\nfunction keepRuntimeAlive() {\n  return noExitRuntime || runtimeKeepaliveCounter > 0;\n}\n\nfunction preRun() {\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n  assert(!runtimeInitialized);\n  runtimeInitialized = true;\n\n  checkStackCookie();\n\n  \n  callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction postRun() {\n  checkStackCookie();\n\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\n\nfunction addOnExit(cb) {\n}\n\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\n\n// include: runtime_math.js\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\n\nassert(Math.imul, 'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.fround, 'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.clz32, 'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.trunc, 'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\n\n// end include: runtime_math.js\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\nvar runDependencyTracking = {};\n\nfunction getUniqueRunDependency(id) {\n  var orig = id;\n  while (1) {\n    if (!runDependencyTracking[id]) return id;\n    id = orig + Math.random();\n  }\n}\n\nfunction addRunDependency(id) {\n  runDependencies++;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n  if (id) {\n    assert(!runDependencyTracking[id]);\n    runDependencyTracking[id] = 1;\n    if (runDependencyWatcher === null && typeof setInterval != 'undefined') {\n      // Check for missing dependencies every few seconds\n      runDependencyWatcher = setInterval(function() {\n        if (ABORT) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n          return;\n        }\n        var shown = false;\n        for (var dep in runDependencyTracking) {\n          if (!shown) {\n            shown = true;\n            err('still waiting on run dependencies:');\n          }\n          err('dependency: ' + dep);\n        }\n        if (shown) {\n          err('(end of list)');\n        }\n      }, 10000);\n    }\n  } else {\n    err('warning: run dependency added without ID');\n  }\n}\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n  if (id) {\n    assert(runDependencyTracking[id]);\n    delete runDependencyTracking[id];\n  } else {\n    err('warning: run dependency removed without ID');\n  }\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\n\n/** @param {string|number=} what */\nfunction abort(what) {\n  if (Module['onAbort']) {\n    Module['onAbort'](what);\n  }\n\n  what = 'Aborted(' + what + ')';\n  // TODO(sbc): Should we remove printing and leave it up to whoever\n  // catches the exception?\n  err(what);\n\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\n  // exception, which means we'd run destructors on it. We need the error to\n  // simply make the program stop.\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\n  // a trap or not based on a hidden field within the object. So at the moment\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\n  // allows this in the wasm spec.\n\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\n  // defintion for WebAssembly.RuntimeError claims it takes no arguments even\n  // though it can.\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\n  /** @suppress {checkTypes} */\n  var e = new WebAssembly.RuntimeError(what);\n\n  // Throw the error whether or not MODULARIZE is set because abort is used\n  // in code paths apart from instantiation where an exception is expected\n  // to be thrown when abort is called.\n  throw e;\n}\n\n// include: memoryprofiler.js\n// end include: memoryprofiler.js\n// show errors on likely calls to FS when it was not included\nvar FS = {\n  error: function() {\n    abort('Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with -sFORCE_FILESYSTEM');\n  },\n  init: function() { FS.error() },\n  createDataFile: function() { FS.error() },\n  createPreloadedFile: function() { FS.error() },\n  createLazyFile: function() { FS.error() },\n  open: function() { FS.error() },\n  mkdev: function() { FS.error() },\n  registerDevice: function() { FS.error() },\n  analyzePath: function() { FS.error() },\n\n  ErrnoError: function ErrnoError() { FS.error() },\n};\nModule['FS_createDataFile'] = FS.createDataFile;\nModule['FS_createPreloadedFile'] = FS.createPreloadedFile;\n\n// include: URIUtils.js\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\n\n// Indicates whether filename is a base64 data URI.\nfunction isDataURI(filename) {\n  // Prefix of data URIs emitted by SINGLE_FILE and related options.\n  return filename.startsWith(dataURIPrefix);\n}\n\n// Indicates whether filename is delivered via file protocol (as opposed to http/https)\nfunction isFileURI(filename) {\n  return filename.startsWith('file://');\n}\n\n// end include: URIUtils.js\n/** @param {boolean=} fixedasm */\nfunction createExportWrapper(name, fixedasm) {\n  return function() {\n    var displayName = name;\n    var asm = fixedasm;\n    if (!fixedasm) {\n      asm = Module['asm'];\n    }\n    assert(runtimeInitialized, 'native function `' + displayName + '` called before runtime initialization');\n    if (!asm[name]) {\n      assert(asm[name], 'exported native function `' + displayName + '` not found');\n    }\n    return asm[name].apply(null, arguments);\n  };\n}\n\n// include: runtime_exceptions.js\n// Base Emscripten EH error class\nclass EmscriptenEH extends Error {}\n\nclass EmscriptenSjLj extends EmscriptenEH {}\n\nclass CppException extends EmscriptenEH {\n  constructor(excPtr) {\n    super(excPtr);\n    this.excPtr = excPtr;\n    const excInfo = getExceptionMessage(excPtr);\n    this.name = excInfo[0];\n    this.message = excInfo[1];\n  }\n}\n\n// end include: runtime_exceptions.js\nvar wasmBinaryFile;\n  wasmBinaryFile = 'add.wasm';\n  if (!isDataURI(wasmBinaryFile)) {\n    wasmBinaryFile = locateFile(wasmBinaryFile);\n  }\n\nfunction getBinary(file) {\n  try {\n    if (file == wasmBinaryFile && wasmBinary) {\n      return new Uint8Array(wasmBinary);\n    }\n    if (readBinary) {\n      return readBinary(file);\n    }\n    throw \"both async and sync fetching of the wasm failed\";\n  }\n  catch (err) {\n    abort(err);\n  }\n}\n\nfunction getBinaryPromise(binaryFile) {\n  // If we don't have the binary yet, try to load it asynchronously.\n  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\n  // See https://github.com/github/fetch/pull/92#issuecomment-140665932\n  // Cordova or Electron apps are typically loaded from a file:// url.\n  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\n  if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n    if (typeof fetch == 'function'\n    ) {\n      return fetch(binaryFile, { credentials: 'same-origin' }).then(function(response) {\n        if (!response['ok']) {\n          throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\n        }\n        return response['arrayBuffer']();\n      }).catch(function () {\n          return getBinary(binaryFile);\n      });\n    }\n  }\n\n  // Otherwise, getBinary should be able to get it synchronously\n  return Promise.resolve().then(function() { return getBinary(binaryFile); });\n}\n\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\n  return getBinaryPromise(binaryFile).then(function(binary) {\n    return WebAssembly.instantiate(binary, imports);\n  }).then(function (instance) {\n    return instance;\n  }).then(receiver, function(reason) {\n    err('failed to asynchronously prepare wasm: ' + reason);\n\n    // Warn on some common problems.\n    if (isFileURI(wasmBinaryFile)) {\n      err('warning: Loading from a file URI (' + wasmBinaryFile + ') is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing');\n    }\n    abort(reason);\n  });\n}\n\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\n  if (!binary &&\n      typeof WebAssembly.instantiateStreaming == 'function' &&\n      !isDataURI(binaryFile) &&\n      typeof fetch == 'function') {\n    return fetch(binaryFile, { credentials: 'same-origin' }).then(function(response) {\n      // Suppress closure warning here since the upstream definition for\n      // instantiateStreaming only allows Promise<Repsponse> rather than\n      // an actual Response.\n      // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\n      /** @suppress {checkTypes} */\n      var result = WebAssembly.instantiateStreaming(response, imports);\n\n      return result.then(\n        callback,\n        function(reason) {\n          // We expect the most common failure cause to be a bad MIME type for the binary,\n          // in which case falling back to ArrayBuffer instantiation should work.\n          err('wasm streaming compile failed: ' + reason);\n          err('falling back to ArrayBuffer instantiation');\n          return instantiateArrayBuffer(binaryFile, imports, callback);\n        });\n    });\n  } else {\n    return instantiateArrayBuffer(binaryFile, imports, callback);\n  }\n}\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nfunction createWasm() {\n  // prepare imports\n  var info = {\n    'env': wasmImports,\n    'wasi_snapshot_preview1': wasmImports,\n  };\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  /** @param {WebAssembly.Module=} module*/\n  function receiveInstance(instance, module) {\n    var exports = instance.exports;\n\n    Module['asm'] = exports;\n\n    wasmMemory = Module['asm']['memory'];\n    assert(wasmMemory, \"memory not found in wasm exports\");\n    // This assertion doesn't hold when emscripten is run in --post-link\n    // mode.\n    // TODO(sbc): Read INITIAL_MEMORY out of the wasm file in post-link mode.\n    //assert(wasmMemory.buffer.byteLength === 16777216);\n    updateMemoryViews();\n\n    wasmTable = Module['asm']['__indirect_function_table'];\n    assert(wasmTable, \"table not found in wasm exports\");\n\n    addOnInit(Module['asm']['__wasm_call_ctors']);\n\n    removeRunDependency('wasm-instantiate');\n\n    return exports;\n  }\n  // wait for the pthread pool (if any)\n  addRunDependency('wasm-instantiate');\n\n  // Prefer streaming instantiation if available.\n  // Async compilation can be confusing when an error on the page overwrites Module\n  // (for example, if the order of elements is wrong, and the one defining Module is\n  // later), so we save Module and check it later.\n  var trueModule = Module;\n  function receiveInstantiationResult(result) {\n    // 'result' is a ResultObject object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n    assert(Module === trueModule, 'the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?');\n    trueModule = null;\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n    // When the regression is fixed, can restore the above PTHREADS-enabled path.\n    receiveInstance(result['instance']);\n  }\n\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n  // to manually instantiate the Wasm module themselves. This allows pages to\n  // run the instantiation parallel to any other async startup actions they are\n  // performing.\n  // Also pthreads and wasm workers initialize the wasm instance through this\n  // path.\n  if (Module['instantiateWasm']) {\n\n    try {\n      return Module['instantiateWasm'](info, receiveInstance);\n    } catch(e) {\n      err('Module.instantiateWasm callback failed with error: ' + e);\n        return false;\n    }\n  }\n\n  instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult);\n  return {}; // no exports yet; we'll fill them in later\n}\n\n// Globals used by JS i64 conversions (see makeSetValue)\nvar tempDouble;\nvar tempI64;\n\n// include: runtime_debug.js\nfunction legacyModuleProp(prop, newName) {\n  if (!Object.getOwnPropertyDescriptor(Module, prop)) {\n    Object.defineProperty(Module, prop, {\n      configurable: true,\n      get: function() {\n        abort('Module.' + prop + ' has been replaced with plain ' + newName + ' (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)');\n      }\n    });\n  }\n}\n\nfunction ignoredModuleProp(prop) {\n  if (Object.getOwnPropertyDescriptor(Module, prop)) {\n    abort('`Module.' + prop + '` was supplied but `' + prop + '` not included in INCOMING_MODULE_JS_API');\n  }\n}\n\n// forcing the filesystem exports a few things by default\nfunction isExportedByForceFilesystem(name) {\n  return name === 'FS_createPath' ||\n         name === 'FS_createDataFile' ||\n         name === 'FS_createPreloadedFile' ||\n         name === 'FS_unlink' ||\n         name === 'addRunDependency' ||\n         // The old FS has some functionality that WasmFS lacks.\n         name === 'FS_createLazyFile' ||\n         name === 'FS_createDevice' ||\n         name === 'removeRunDependency';\n}\n\nfunction missingGlobal(sym, msg) {\n  if (typeof globalThis !== 'undefined') {\n    Object.defineProperty(globalThis, sym, {\n      configurable: true,\n      get: function() {\n        warnOnce('`' + sym + '` is not longer defined by emscripten. ' + msg);\n        return undefined;\n      }\n    });\n  }\n}\n\nmissingGlobal('buffer', 'Please use HEAP8.buffer or wasmMemory.buffer');\n\nfunction missingLibrarySymbol(sym) {\n  if (typeof globalThis !== 'undefined' && !Object.getOwnPropertyDescriptor(globalThis, sym)) {\n    Object.defineProperty(globalThis, sym, {\n      configurable: true,\n      get: function() {\n        // Can't `abort()` here because it would break code that does runtime\n        // checks.  e.g. `if (typeof SDL === 'undefined')`.\n        var msg = '`' + sym + '` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line';\n        // DEFAULT_LIBRARY_FUNCS_TO_INCLUDE requires the name as it appears in\n        // library.js, which means $name for a JS name with no prefix, or name\n        // for a JS name like _name.\n        var librarySymbol = sym;\n        if (!librarySymbol.startsWith('_')) {\n          librarySymbol = '$' + sym;\n        }\n        msg += \" (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE=\" + librarySymbol + \")\";\n        if (isExportedByForceFilesystem(sym)) {\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n        }\n        warnOnce(msg);\n        return undefined;\n      }\n    });\n  }\n  // Any symbol that is not included from the JS libary is also (by definition)\n  // not exported on the Module object.\n  unexportedRuntimeSymbol(sym);\n}\n\nfunction unexportedRuntimeSymbol(sym) {\n  if (!Object.getOwnPropertyDescriptor(Module, sym)) {\n    Object.defineProperty(Module, sym, {\n      configurable: true,\n      get: function() {\n        var msg = \"'\" + sym + \"' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\";\n        if (isExportedByForceFilesystem(sym)) {\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n        }\n        abort(msg);\n      }\n    });\n  }\n}\n\n// Used by XXXXX_DEBUG settings to output debug messages.\nfunction dbg(text) {\n  // TODO(sbc): Make this configurable somehow.  Its not always convenient for\n  // logging to show up as errors.\n  console.error(text);\n}\n\n// end include: runtime_debug.js\n// === Body ===\n\n\n// end include: preamble.js\n\n  /** @constructor */\n  function ExitStatus(status) {\n      this.name = 'ExitStatus';\n      this.message = 'Program terminated with exit(' + status + ')';\n      this.status = status;\n    }\n\n  function callRuntimeCallbacks(callbacks) {\n      while (callbacks.length > 0) {\n        // Pass the module as the first argument.\n        callbacks.shift()(Module);\n      }\n    }\n\n  \n  var wasmTableMirror = [];\n  \n  function getWasmTableEntry(funcPtr) {\n      var func = wasmTableMirror[funcPtr];\n      if (!func) {\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n      }\n      assert(wasmTable.get(funcPtr) == func, \"JavaScript-side Wasm function table mirror is out of date!\");\n      return func;\n    }\n  function exception_decRef(info) {\n      // A rethrown exception can reach refcount 0; it must not be discarded\n      // Its next handler will clear the rethrown flag and addRef it, prior to\n      // final decRef and destruction here\n      if (info.release_ref() && !info.get_rethrown()) {\n        var destructor = info.get_destructor();\n        if (destructor) {\n          // In Wasm, destructors return 'this' as in ARM\n          getWasmTableEntry(destructor)(info.excPtr);\n        }\n        ___cxa_free_exception(info.excPtr);\n      }\n    }\n  \n  /** @constructor */\n  function ExceptionInfo(excPtr) {\n      this.excPtr = excPtr;\n      this.ptr = excPtr - 24;\n  \n      this.set_type = function(type) {\n        HEAPU32[(((this.ptr)+(4))>>2)] = type;\n      };\n  \n      this.get_type = function() {\n        return HEAPU32[(((this.ptr)+(4))>>2)];\n      };\n  \n      this.set_destructor = function(destructor) {\n        HEAPU32[(((this.ptr)+(8))>>2)] = destructor;\n      };\n  \n      this.get_destructor = function() {\n        return HEAPU32[(((this.ptr)+(8))>>2)];\n      };\n  \n      this.set_refcount = function(refcount) {\n        HEAP32[((this.ptr)>>2)] = refcount;\n      };\n  \n      this.set_caught = function (caught) {\n        caught = caught ? 1 : 0;\n        HEAP8[(((this.ptr)+(12))>>0)] = caught;\n      };\n  \n      this.get_caught = function () {\n        return HEAP8[(((this.ptr)+(12))>>0)] != 0;\n      };\n  \n      this.set_rethrown = function (rethrown) {\n        rethrown = rethrown ? 1 : 0;\n        HEAP8[(((this.ptr)+(13))>>0)] = rethrown;\n      };\n  \n      this.get_rethrown = function () {\n        return HEAP8[(((this.ptr)+(13))>>0)] != 0;\n      };\n  \n      // Initialize native structure fields. Should be called once after allocated.\n      this.init = function(type, destructor) {\n        this.set_adjusted_ptr(0);\n        this.set_type(type);\n        this.set_destructor(destructor);\n        this.set_refcount(0);\n        this.set_caught(false);\n        this.set_rethrown(false);\n      }\n  \n      this.add_ref = function() {\n        var value = HEAP32[((this.ptr)>>2)];\n        HEAP32[((this.ptr)>>2)] = value + 1;\n      };\n  \n      // Returns true if last reference released.\n      this.release_ref = function() {\n        var prev = HEAP32[((this.ptr)>>2)];\n        HEAP32[((this.ptr)>>2)] = prev - 1;\n        assert(prev > 0);\n        return prev === 1;\n      };\n  \n      this.set_adjusted_ptr = function(adjustedPtr) {\n        HEAPU32[(((this.ptr)+(16))>>2)] = adjustedPtr;\n      };\n  \n      this.get_adjusted_ptr = function() {\n        return HEAPU32[(((this.ptr)+(16))>>2)];\n      };\n  \n      // Get pointer which is expected to be received by catch clause in C++ code. It may be adjusted\n      // when the pointer is casted to some of the exception object base classes (e.g. when virtual\n      // inheritance is used). When a pointer is thrown this method should return the thrown pointer\n      // itself.\n      this.get_exception_ptr = function() {\n        // Work around a fastcomp bug, this code is still included for some reason in a build without\n        // exceptions support.\n        var isPointer = ___cxa_is_pointer_type(this.get_type());\n        if (isPointer) {\n          return HEAPU32[((this.excPtr)>>2)];\n        }\n        var adjusted = this.get_adjusted_ptr();\n        if (adjusted !== 0) return adjusted;\n        return this.excPtr;\n      };\n    }\n  function ___cxa_decrement_exception_refcount(ptr) {\n      if (!ptr) return;\n      exception_decRef(new ExceptionInfo(ptr));\n    }\n  function decrementExceptionRefcount(ptr) {\n      ___cxa_decrement_exception_refcount(ptr);\n    }\n\n  \n  \n  function withStackSave(f) {\n      var stack = stackSave();\n      var ret = f();\n      stackRestore(stack);\n      return ret;\n    }\n  \n  var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n  \n    /**\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\n     * array that contains uint8 values, returns a copy of that string as a\n     * Javascript String object.\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\n     * @param {number} idx\n     * @param {number=} maxBytesToRead\n     * @return {string}\n     */\n  function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\n      // null terminator by itself.  Also, use the length info to avoid running tiny\n      // strings through TextDecoder, since .subarray() allocates garbage.\n      // (As a tiny code save trick, compare endPtr against endIdx using a negation,\n      // so that undefined means Infinity)\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n  \n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = '';\n      // If building with TextDecoder, we have already computed the string length\n      // above, so test loop end condition against that\n      while (idx < endPtr) {\n        // For UTF8 byte structure, see:\n        // http://en.wikipedia.org/wiki/UTF-8#Description\n        // https://www.ietf.org/rfc/rfc2279.txt\n        // https://tools.ietf.org/html/rfc3629\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xF0) == 0xE0) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          if ((u0 & 0xF8) != 0xF0) warnOnce('Invalid UTF-8 leading byte ' + ptrToString(u0) + ' encountered when deserializing a UTF-8 string in wasm memory to a JS string!');\n          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\n        }\n  \n        if (u0 < 0x10000) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 0x10000;\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n        }\n      }\n      return str;\n    }\n  \n  \n    /**\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\n     *\n     * @param {number} ptr\n     * @param {number=} maxBytesToRead - An optional length that specifies the\n     *   maximum number of bytes to read. You can omit this parameter to scan the\n     *   string until the first \u0000 byte. If maxBytesToRead is passed, and the string\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\n     * @return {string}\n     */\n  function UTF8ToString(ptr, maxBytesToRead) {\n      assert(typeof ptr == 'number');\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n    }\n  function getExceptionMessageCommon(ptr) {\n      return withStackSave(function() {\n        var type_addr_addr = stackAlloc(4);\n        var message_addr_addr = stackAlloc(4);\n        ___get_exception_message(ptr, type_addr_addr, message_addr_addr);\n        var type_addr = HEAPU32[((type_addr_addr)>>2)];\n        var message_addr = HEAPU32[((message_addr_addr)>>2)];\n        var type = UTF8ToString(type_addr);\n        _free(type_addr);\n        var message;\n        if (message_addr) {\n          message = UTF8ToString(message_addr);\n          _free(message_addr);\n        }\n        return [type, message];\n      });\n    }\n  function getExceptionMessage(ptr) {\n      return getExceptionMessageCommon(ptr);\n    }\n  Module[\"getExceptionMessage\"] = getExceptionMessage;\n\n  \n    /**\n     * @param {number} ptr\n     * @param {string} type\n     */\n  function getValue(ptr, type = 'i8') {\n    if (type.endsWith('*')) type = '*';\n    switch (type) {\n      case 'i1': return HEAP8[((ptr)>>0)];\n      case 'i8': return HEAP8[((ptr)>>0)];\n      case 'i16': return HEAP16[((ptr)>>1)];\n      case 'i32': return HEAP32[((ptr)>>2)];\n      case 'i64': return HEAP32[((ptr)>>2)];\n      case 'float': return HEAPF32[((ptr)>>2)];\n      case 'double': return HEAPF64[((ptr)>>3)];\n      case '*': return HEAPU32[((ptr)>>2)];\n      default: abort('invalid type for getValue: ' + type);\n    }\n  }\n\n  function exception_addRef(info) {\n      info.add_ref();\n    }\n  \n  function ___cxa_increment_exception_refcount(ptr) {\n      if (!ptr) return;\n      exception_addRef(new ExceptionInfo(ptr));\n    }\n  function incrementExceptionRefcount(ptr) {\n      ___cxa_increment_exception_refcount(ptr);\n    }\n\n  function ptrToString(ptr) {\n      assert(typeof ptr === 'number');\n      return '0x' + ptr.toString(16).padStart(8, '0');\n    }\n\n  \n    /**\n     * @param {number} ptr\n     * @param {number} value\n     * @param {string} type\n     */\n  function setValue(ptr, value, type = 'i8') {\n    if (type.endsWith('*')) type = '*';\n    switch (type) {\n      case 'i1': HEAP8[((ptr)>>0)] = value; break;\n      case 'i8': HEAP8[((ptr)>>0)] = value; break;\n      case 'i16': HEAP16[((ptr)>>1)] = value; break;\n      case 'i32': HEAP32[((ptr)>>2)] = value; break;\n      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math.min((+(Math.floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)] = tempI64[0],HEAP32[(((ptr)+(4))>>2)] = tempI64[1]); break;\n      case 'float': HEAPF32[((ptr)>>2)] = value; break;\n      case 'double': HEAPF64[((ptr)>>3)] = value; break;\n      case '*': HEAPU32[((ptr)>>2)] = value; break;\n      default: abort('invalid type for setValue: ' + type);\n    }\n  }\n\n  function warnOnce(text) {\n      if (!warnOnce.shown) warnOnce.shown = {};\n      if (!warnOnce.shown[text]) {\n        warnOnce.shown[text] = 1;\n        err(text);\n      }\n    }\n\n  function ___assert_fail(condition, filename, line, func) {\n      abort('Assertion failed: ' + UTF8ToString(condition) + ', at: ' + [filename ? UTF8ToString(filename) : 'unknown filename', line, func ? UTF8ToString(func) : 'unknown function']);\n    }\n\n  var exceptionCaught =  [];\n  \n  \n  var uncaughtExceptionCount = 0;\n  function ___cxa_begin_catch(ptr) {\n      var info = new ExceptionInfo(ptr);\n      if (!info.get_caught()) {\n        info.set_caught(true);\n        uncaughtExceptionCount--;\n      }\n      info.set_rethrown(false);\n      exceptionCaught.push(info);\n      exception_addRef(info);\n      return info.get_exception_ptr();\n    }\n\n  var exceptionLast = 0;\n  \n  \n  function ___resumeException(ptr) {\n      if (!exceptionLast) { \n        exceptionLast = new CppException(ptr);\n      }\n      throw exceptionLast;\n    }\n  \n  \n  /** @suppress {duplicate } */\n  function ___cxa_find_matching_catch() {\n      var thrown = \n        exceptionLast && exceptionLast.excPtr;\n      if (!thrown) {\n        // just pass through the null ptr\n        setTempRet0(0);\n        return 0;\n      }\n      var info = new ExceptionInfo(thrown);\n      info.set_adjusted_ptr(thrown);\n      var thrownType = info.get_type();\n      if (!thrownType) {\n        // just pass through the thrown ptr\n        setTempRet0(0);\n        return thrown;\n      }\n  \n      // can_catch receives a **, add indirection\n      // The different catch blocks are denoted by different types.\n      // Due to inheritance, those types may not precisely match the\n      // type of the thrown object. Find one which matches, and\n      // return the type of the catch block which should be called.\n      for (var i = 0; i < arguments.length; i++) {\n        var caughtType = arguments[i];\n        if (caughtType === 0 || caughtType === thrownType) {\n          // Catch all clause matched or exactly the same type is caught\n          break;\n        }\n        var adjusted_ptr_addr = info.ptr + 16;\n        if (___cxa_can_catch(caughtType, thrownType, adjusted_ptr_addr)) {\n          setTempRet0(caughtType);\n          return thrown;\n        }\n      }\n      setTempRet0(thrownType);\n      return thrown;\n    }\n  var ___cxa_find_matching_catch_2 = ___cxa_find_matching_catch;\n\n  var ___cxa_find_matching_catch_3 = ___cxa_find_matching_catch;\n\n\n  function __embind_register_bigint(primitiveType, name, size, minRange, maxRange) {}\n\n  function getShiftFromSize(size) {\n      switch (size) {\n          case 1: return 0;\n          case 2: return 1;\n          case 4: return 2;\n          case 8: return 3;\n          default:\n              throw new TypeError('Unknown type size: ' + size);\n      }\n    }\n  \n  function embind_init_charCodes() {\n      var codes = new Array(256);\n      for (var i = 0; i < 256; ++i) {\n          codes[i] = String.fromCharCode(i);\n      }\n      embind_charCodes = codes;\n    }\n  var embind_charCodes = undefined;\n  function readLatin1String(ptr) {\n      var ret = \"\";\n      var c = ptr;\n      while (HEAPU8[c]) {\n          ret += embind_charCodes[HEAPU8[c++]];\n      }\n      return ret;\n    }\n  \n  var awaitingDependencies = {};\n  \n  var registeredTypes = {};\n  \n  var typeDependencies = {};\n  \n  var char_0 = 48;\n  \n  var char_9 = 57;\n  function makeLegalFunctionName(name) {\n      if (undefined === name) {\n        return '_unknown';\n      }\n      name = name.replace(/[^a-zA-Z0-9_]/g, '$');\n      var f = name.charCodeAt(0);\n      if (f >= char_0 && f <= char_9) {\n        return '_' + name;\n      }\n      return name;\n    }\n  function createNamedFunction(name, body) {\n      name = makeLegalFunctionName(name);\n      // Use an abject with a computed property name to create a new function with\n      // a name specified at runtime, but without using `new Function` or `eval`.\n      return {\n        [name]: function() {\n          return body.apply(this, arguments);\n        }\n      }[name];\n    }\n  function extendError(baseErrorType, errorName) {\n      var errorClass = createNamedFunction(errorName, function(message) {\n        this.name = errorName;\n        this.message = message;\n  \n        var stack = (new Error(message)).stack;\n        if (stack !== undefined) {\n          this.stack = this.toString() + '\\n' +\n              stack.replace(/^Error(:[^\\n]*)?\\n/, '');\n        }\n      });\n      errorClass.prototype = Object.create(baseErrorType.prototype);\n      errorClass.prototype.constructor = errorClass;\n      errorClass.prototype.toString = function() {\n        if (this.message === undefined) {\n          return this.name;\n        } else {\n          return this.name + ': ' + this.message;\n        }\n      };\n  \n      return errorClass;\n    }\n  var BindingError = undefined;\n  function throwBindingError(message) {\n      throw new BindingError(message);\n    }\n  \n  \n  \n  \n  var InternalError = undefined;\n  function throwInternalError(message) {\n      throw new InternalError(message);\n    }\n  function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n      myTypes.forEach(function(type) {\n          typeDependencies[type] = dependentTypes;\n      });\n  \n      function onComplete(typeConverters) {\n          var myTypeConverters = getTypeConverters(typeConverters);\n          if (myTypeConverters.length !== myTypes.length) {\n              throwInternalError('Mismatched type converter count');\n          }\n          for (var i = 0; i < myTypes.length; ++i) {\n              registerType(myTypes[i], myTypeConverters[i]);\n          }\n      }\n  \n      var typeConverters = new Array(dependentTypes.length);\n      var unregisteredTypes = [];\n      var registered = 0;\n      dependentTypes.forEach((dt, i) => {\n        if (registeredTypes.hasOwnProperty(dt)) {\n          typeConverters[i] = registeredTypes[dt];\n        } else {\n          unregisteredTypes.push(dt);\n          if (!awaitingDependencies.hasOwnProperty(dt)) {\n            awaitingDependencies[dt] = [];\n          }\n          awaitingDependencies[dt].push(() => {\n            typeConverters[i] = registeredTypes[dt];\n            ++registered;\n            if (registered === unregisteredTypes.length) {\n              onComplete(typeConverters);\n            }\n          });\n        }\n      });\n      if (0 === unregisteredTypes.length) {\n        onComplete(typeConverters);\n      }\n    }\n  /** @param {Object=} options */\n  function registerType(rawType, registeredInstance, options = {}) {\n      if (!('argPackAdvance' in registeredInstance)) {\n          throw new TypeError('registerType registeredInstance requires argPackAdvance');\n      }\n  \n      var name = registeredInstance.name;\n      if (!rawType) {\n          throwBindingError('type \"' + name + '\" must have a positive integer typeid pointer');\n      }\n      if (registeredTypes.hasOwnProperty(rawType)) {\n          if (options.ignoreDuplicateRegistrations) {\n              return;\n          } else {\n              throwBindingError(\"Cannot register type '\" + name + \"' twice\");\n          }\n      }\n  \n      registeredTypes[rawType] = registeredInstance;\n      delete typeDependencies[rawType];\n  \n      if (awaitingDependencies.hasOwnProperty(rawType)) {\n        var callbacks = awaitingDependencies[rawType];\n        delete awaitingDependencies[rawType];\n        callbacks.forEach((cb) => cb());\n      }\n    }\n  function __embind_register_bool(rawType, name, size, trueValue, falseValue) {\n      var shift = getShiftFromSize(size);\n  \n      name = readLatin1String(name);\n      registerType(rawType, {\n          name: name,\n          'fromWireType': function(wt) {\n              // ambiguous emscripten ABI: sometimes return values are\n              // true or false, and sometimes integers (0 or 1)\n              return !!wt;\n          },\n          'toWireType': function(destructors, o) {\n              return o ? trueValue : falseValue;\n          },\n          'argPackAdvance': 8,\n          'readValueFromPointer': function(pointer) {\n              // TODO: if heap is fixed (like in asm.js) this could be executed outside\n              var heap;\n              if (size === 1) {\n                  heap = HEAP8;\n              } else if (size === 2) {\n                  heap = HEAP16;\n              } else if (size === 4) {\n                  heap = HEAP32;\n              } else {\n                  throw new TypeError(\"Unknown boolean type size: \" + name);\n              }\n              return this['fromWireType'](heap[pointer >> shift]);\n          },\n          destructorFunction: null, // This type does not need a destructor\n      });\n    }\n\n  /** @constructor */\n  function HandleAllocator() {\n      // Reserve slot 0 so that 0 is always an invalid handle\n      this.allocated = [undefined];\n      this.freelist = [];\n      this.get = function(id) {\n        assert(this.allocated[id] !== undefined, 'invalid handle: ' + id);\n        return this.allocated[id];\n      };\n      this.allocate = function(handle) {\n        let id = this.freelist.pop() || this.allocated.length;\n        this.allocated[id] = handle;\n        return id;\n      };\n      this.free = function(id) {\n        assert(this.allocated[id] !== undefined);\n        // Set the slot to `undefined` rather than using `delete` here since\n        // apparently arrays with holes in them can be less efficient.\n        this.allocated[id] = undefined;\n        this.freelist.push(id);\n      };\n    }\n  var emval_handles = new HandleAllocator();;\n  function __emval_decref(handle) {\n      if (handle >= emval_handles.reserved && 0 === --emval_handles.get(handle).refcount) {\n        emval_handles.free(handle);\n      }\n    }\n  \n  \n  \n  function count_emval_handles() {\n      var count = 0;\n      for (var i = emval_handles.reserved; i < emval_handles.allocated.length; ++i) {\n        if (emval_handles.allocated[i] !== undefined) {\n          ++count;\n        }\n      }\n      return count;\n    }\n  \n  function init_emval() {\n      // reserve some special values. These never get de-allocated.\n      // The HandleAllocator takes care of reserving zero.\n      emval_handles.allocated.push(\n        {value: undefined},\n        {value: null},\n        {value: true},\n        {value: false},\n      );\n      emval_handles.reserved = emval_handles.allocated.length\n      Module['count_emval_handles'] = count_emval_handles;\n    }\n  var Emval = {toValue:(handle) => {\n        if (!handle) {\n            throwBindingError('Cannot use deleted val. handle = ' + handle);\n        }\n        return emval_handles.get(handle).value;\n      },toHandle:(value) => {\n        switch (value) {\n          case undefined: return 1;\n          case null: return 2;\n          case true: return 3;\n          case false: return 4;\n          default:{\n            return emval_handles.allocate({refcount: 1, value: value});\n          }\n        }\n      }};\n  \n  \n  \n  function simpleReadValueFromPointer(pointer) {\n      return this['fromWireType'](HEAP32[((pointer)>>2)]);\n    }\n  function __embind_register_emval(rawType, name) {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        'fromWireType': function(handle) {\n          var rv = Emval.toValue(handle);\n          __emval_decref(handle);\n          return rv;\n        },\n        'toWireType': function(destructors, value) {\n          return Emval.toHandle(value);\n        },\n        'argPackAdvance': 8,\n        'readValueFromPointer': simpleReadValueFromPointer,\n        destructorFunction: null, // This type does not need a destructor\n  \n        // TODO: do we need a deleteObject here?  write a test where\n        // emval is passed into JS via an interface\n      });\n    }\n\n  function embindRepr(v) {\n      if (v === null) {\n          return 'null';\n      }\n      var t = typeof v;\n      if (t === 'object' || t === 'array' || t === 'function') {\n          return v.toString();\n      } else {\n          return '' + v;\n      }\n    }\n  \n  function floatReadValueFromPointer(name, shift) {\n      switch (shift) {\n          case 2: return function(pointer) {\n              return this['fromWireType'](HEAPF32[pointer >> 2]);\n          };\n          case 3: return function(pointer) {\n              return this['fromWireType'](HEAPF64[pointer >> 3]);\n          };\n          default:\n              throw new TypeError(\"Unknown float type: \" + name);\n      }\n    }\n  \n  \n  \n  function __embind_register_float(rawType, name, size) {\n      var shift = getShiftFromSize(size);\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        'fromWireType': function(value) {\n           return value;\n        },\n        'toWireType': function(destructors, value) {\n          if (typeof value != \"number\" && typeof value != \"boolean\") {\n            throw new TypeError('Cannot convert \"' + embindRepr(value) + '\" to ' + this.name);\n          }\n          // The VM will perform JS to Wasm value conversion, according to the spec:\n          // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\n          return value;\n        },\n        'argPackAdvance': 8,\n        'readValueFromPointer': floatReadValueFromPointer(name, shift),\n        destructorFunction: null, // This type does not need a destructor\n      });\n    }\n\n  \n  function runDestructors(destructors) {\n      while (destructors.length) {\n        var ptr = destructors.pop();\n        var del = destructors.pop();\n        del(ptr);\n      }\n    }\n  \n  \n  function newFunc(constructor, argumentList) {\n      if (!(constructor instanceof Function)) {\n        throw new TypeError('new_ called with constructor type ' + typeof(constructor) + \" which is not a function\");\n      }\n      /*\n       * Previously, the following line was just:\n       *   function dummy() {};\n       * Unfortunately, Chrome was preserving 'dummy' as the object's name, even\n       * though at creation, the 'dummy' has the correct constructor name.  Thus,\n       * objects created with IMVU.new would show up in the debugger as 'dummy',\n       * which isn't very helpful.  Using IMVU.createNamedFunction addresses the\n       * issue.  Doublely-unfortunately, there's no way to write a test for this\n       * behavior.  -NRD 2013.02.22\n       */\n      var dummy = createNamedFunction(constructor.name || 'unknownFunctionName', function(){});\n      dummy.prototype = constructor.prototype;\n      var obj = new dummy;\n  \n      var r = constructor.apply(obj, argumentList);\n      return (r instanceof Object) ? r : obj;\n    }\n  function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc, isAsync) {\n      // humanName: a human-readable string name for the function to be generated.\n      // argTypes: An array that contains the embind type objects for all types in the function signature.\n      //    argTypes[0] is the type object for the function return value.\n      //    argTypes[1] is the type object for function this object/class type, or null if not crafting an invoker for a class method.\n      //    argTypes[2...] are the actual function parameters.\n      // classType: The embind type object for the class to be bound, or null if this is not a method of a class.\n      // cppInvokerFunc: JS Function object to the C++-side function that interops into C++ code.\n      // cppTargetFunc: Function pointer (an integer to FUNCTION_TABLE) to the target C++ function the cppInvokerFunc will end up calling.\n      var argCount = argTypes.length;\n  \n      if (argCount < 2) {\n        throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n      }\n  \n      assert(!isAsync, 'Async bindings are only supported with JSPI.');\n  \n      var isClassMethodFunc = (argTypes[1] !== null && classType !== null);\n  \n      // Free functions with signature \"void function()\" do not need an invoker that marshalls between wire types.\n  // TODO: This omits argument count check - enable only at -O3 or similar.\n  //    if (ENABLE_UNSAFE_OPTS && argCount == 2 && argTypes[0].name == \"void\" && !isClassMethodFunc) {\n  //       return FUNCTION_TABLE[fn];\n  //    }\n  \n      // Determine if we need to use a dynamic stack to store the destructors for the function parameters.\n      // TODO: Remove this completely once all function invokers are being dynamically generated.\n      var needsDestructorStack = false;\n  \n      for (var i = 1; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here.\n        if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) { // The type does not define a destructor function - must use dynamic stack\n          needsDestructorStack = true;\n          break;\n        }\n      }\n  \n      var returns = (argTypes[0].name !== \"void\");\n  \n      var argsList = \"\";\n      var argsListWired = \"\";\n      for (var i = 0; i < argCount - 2; ++i) {\n        argsList += (i!==0?\", \":\"\")+\"arg\"+i;\n        argsListWired += (i!==0?\", \":\"\")+\"arg\"+i+\"Wired\";\n      }\n  \n      var invokerFnBody =\n          \"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\" +\n          \"if (arguments.length !== \"+(argCount - 2)+\") {\\n\" +\n              \"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount - 2)+\" args!');\\n\" +\n          \"}\\n\";\n  \n      if (needsDestructorStack) {\n        invokerFnBody += \"var destructors = [];\\n\";\n      }\n  \n      var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n      var args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n      var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n  \n      if (isClassMethodFunc) {\n        invokerFnBody += \"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\";\n      }\n  \n      for (var i = 0; i < argCount - 2; ++i) {\n        invokerFnBody += \"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";\n        args1.push(\"argType\"+i);\n        args2.push(argTypes[i+2]);\n      }\n  \n      if (isClassMethodFunc) {\n        argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n      }\n  \n      invokerFnBody +=\n          (returns || isAsync ? \"var rv = \":\"\") + \"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";\n  \n      if (needsDestructorStack) {\n        invokerFnBody += \"runDestructors(destructors);\\n\";\n      } else {\n        for (var i = isClassMethodFunc?1:2; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.\n          var paramName = (i === 1 ? \"thisWired\" : (\"arg\"+(i - 2)+\"Wired\"));\n          if (argTypes[i].destructorFunction !== null) {\n            invokerFnBody += paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";\n            args1.push(paramName+\"_dtor\");\n            args2.push(argTypes[i].destructorFunction);\n          }\n        }\n      }\n  \n      if (returns) {\n        invokerFnBody += \"var ret = retType.fromWireType(rv);\\n\" +\n                         \"return ret;\\n\";\n      } else {\n      }\n  \n      invokerFnBody += \"}\\n\";\n  \n      args1.push(invokerFnBody);\n  \n      return newFunc(Function, args1).apply(null, args2);\n    }\n  \n  function ensureOverloadTable(proto, methodName, humanName) {\n      if (undefined === proto[methodName].overloadTable) {\n        var prevFunc = proto[methodName];\n        // Inject an overload resolver function that routes to the appropriate overload based on the number of arguments.\n        proto[methodName] = function() {\n          // TODO This check can be removed in -O3 level \"unsafe\" optimizations.\n          if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n              throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n          }\n          return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n        };\n        // Move the previous function into the overload table.\n        proto[methodName].overloadTable = [];\n        proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n      }\n    }\n  \n  /** @param {number=} numArguments */\n  function exposePublicSymbol(name, value, numArguments) {\n      if (Module.hasOwnProperty(name)) {\n        if (undefined === numArguments || (undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments])) {\n          throwBindingError(\"Cannot register public name '\" + name + \"' twice\");\n        }\n  \n        // We are exposing a function with the same name as an existing function. Create an overload table and a function selector\n        // that routes between the two.\n        ensureOverloadTable(Module, name, name);\n        if (Module.hasOwnProperty(numArguments)) {\n            throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n        }\n        // Add the new function into the overload table.\n        Module[name].overloadTable[numArguments] = value;\n      }\n      else {\n        Module[name] = value;\n        if (undefined !== numArguments) {\n          Module[name].numArguments = numArguments;\n        }\n      }\n    }\n  \n  function heap32VectorToArray(count, firstElement) {\n      var array = [];\n      for (var i = 0; i < count; i++) {\n          // TODO(https://github.com/emscripten-core/emscripten/issues/17310):\n          // Find a way to hoist the `>> 2` or `>> 3` out of this loop.\n          array.push(HEAPU32[(((firstElement)+(i * 4))>>2)]);\n      }\n      return array;\n    }\n  \n  \n  /** @param {number=} numArguments */\n  function replacePublicSymbol(name, value, numArguments) {\n      if (!Module.hasOwnProperty(name)) {\n        throwInternalError('Replacing nonexistant public symbol');\n      }\n      // If there's an overload table for this symbol, replace the symbol in the overload table instead.\n      if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n        Module[name].overloadTable[numArguments] = value;\n      }\n      else {\n        Module[name] = value;\n        Module[name].argCount = numArguments;\n      }\n    }\n  \n  \n  \n  function dynCallLegacy(sig, ptr, args) {\n      assert(('dynCall_' + sig) in Module, 'bad function pointer type - dynCall function not found for sig \\'' + sig + '\\'');\n      if (args && args.length) {\n        // j (64-bit integer) must be passed in as two numbers [low 32, high 32].\n        assert(args.length === sig.substring(1).replace(/j/g, '--').length);\n      } else {\n        assert(sig.length == 1);\n      }\n      var f = Module['dynCall_' + sig];\n      return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\n    }\n  \n  \n  /** @param {Object=} args */\n  function dynCall(sig, ptr, args) {\n      // Without WASM_BIGINT support we cannot directly call function with i64 as\n      // part of thier signature, so we rely the dynCall functions generated by\n      // wasm-emscripten-finalize\n      if (sig.includes('j')) {\n        return dynCallLegacy(sig, ptr, args);\n      }\n      assert(getWasmTableEntry(ptr), 'missing table entry in dynCall: ' + ptr);\n      var rtn = getWasmTableEntry(ptr).apply(null, args);\n      return rtn;\n    }\n  \n  function getDynCaller(sig, ptr) {\n      assert(sig.includes('j') || sig.includes('p'), 'getDynCaller should only be called with i64 sigs')\n      var argCache = [];\n      return function() {\n        argCache.length = 0;\n        Object.assign(argCache, arguments);\n        return dynCall(sig, ptr, argCache);\n      };\n    }\n  \n  \n  function embind__requireFunction(signature, rawFunction) {\n      signature = readLatin1String(signature);\n  \n      function makeDynCaller() {\n        if (signature.includes('j')) {\n          return getDynCaller(signature, rawFunction);\n        }\n        return getWasmTableEntry(rawFunction);\n      }\n  \n      var fp = makeDynCaller();\n      if (typeof fp != \"function\") {\n          throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n      }\n      return fp;\n    }\n  \n  \n  \n  var UnboundTypeError = undefined;\n  \n  \n  function getTypeName(type) {\n      var ptr = ___getTypeName(type);\n      var rv = readLatin1String(ptr);\n      _free(ptr);\n      return rv;\n    }\n  function throwUnboundTypeError(message, types) {\n      var unboundTypes = [];\n      var seen = {};\n      function visit(type) {\n        if (seen[type]) {\n          return;\n        }\n        if (registeredTypes[type]) {\n          return;\n        }\n        if (typeDependencies[type]) {\n          typeDependencies[type].forEach(visit);\n          return;\n        }\n        unboundTypes.push(type);\n        seen[type] = true;\n      }\n      types.forEach(visit);\n  \n      throw new UnboundTypeError(message + ': ' + unboundTypes.map(getTypeName).join([', ']));\n    }\n  \n  function __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn, isAsync) {\n      var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      name = readLatin1String(name);\n  \n      rawInvoker = embind__requireFunction(signature, rawInvoker);\n  \n      exposePublicSymbol(name, function() {\n        throwUnboundTypeError('Cannot call ' + name + ' due to unbound types', argTypes);\n      }, argCount - 1);\n  \n      whenDependentTypesAreResolved([], argTypes, function(argTypes) {\n        var invokerArgsArray = [argTypes[0] /* return value */, null /* no class 'this'*/].concat(argTypes.slice(1) /* actual params */);\n        replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null /* no class 'this'*/, rawInvoker, fn, isAsync), argCount - 1);\n        return [];\n      });\n    }\n\n  \n  \n  function integerReadValueFromPointer(name, shift, signed) {\n      // integers are quite common, so generate very specialized functions\n      switch (shift) {\n          case 0: return signed ?\n              function readS8FromPointer(pointer) { return HEAP8[pointer]; } :\n              function readU8FromPointer(pointer) { return HEAPU8[pointer]; };\n          case 1: return signed ?\n              function readS16FromPointer(pointer) { return HEAP16[pointer >> 1]; } :\n              function readU16FromPointer(pointer) { return HEAPU16[pointer >> 1]; };\n          case 2: return signed ?\n              function readS32FromPointer(pointer) { return HEAP32[pointer >> 2]; } :\n              function readU32FromPointer(pointer) { return HEAPU32[pointer >> 2]; };\n          default:\n              throw new TypeError(\"Unknown integer type: \" + name);\n      }\n    }\n  \n  \n  function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\n      name = readLatin1String(name);\n      // LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come\n      // out as 'i32 -1'. Always treat those as max u32.\n      if (maxRange === -1) {\n          maxRange = 4294967295;\n      }\n  \n      var shift = getShiftFromSize(size);\n  \n      var fromWireType = (value) => value;\n  \n      if (minRange === 0) {\n          var bitshift = 32 - 8*size;\n          fromWireType = (value) => (value << bitshift) >>> bitshift;\n      }\n  \n      var isUnsignedType = (name.includes('unsigned'));\n      var checkAssertions = (value, toTypeName) => {\n        if (typeof value != \"number\" && typeof value != \"boolean\") {\n          throw new TypeError('Cannot convert \"' + embindRepr(value) + '\" to ' + toTypeName);\n        }\n        if (value < minRange || value > maxRange) {\n          throw new TypeError('Passing a number \"' + embindRepr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name + '\", which is outside the valid range [' + minRange + ', ' + maxRange + ']!');\n        }\n      }\n      var toWireType;\n      if (isUnsignedType) {\n        toWireType = function(destructors, value) {\n          checkAssertions(value, this.name);\n          return value >>> 0;\n        }\n      } else {\n        toWireType = function(destructors, value) {\n          checkAssertions(value, this.name);\n          // The VM will perform JS to Wasm value conversion, according to the spec:\n          // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\n          return value;\n        }\n      }\n      registerType(primitiveType, {\n        name: name,\n        'fromWireType': fromWireType,\n        'toWireType': toWireType,\n        'argPackAdvance': 8,\n        'readValueFromPointer': integerReadValueFromPointer(name, shift, minRange !== 0),\n        destructorFunction: null, // This type does not need a destructor\n      });\n    }\n\n  \n  function __embind_register_memory_view(rawType, dataTypeIndex, name) {\n      var typeMapping = [\n        Int8Array,\n        Uint8Array,\n        Int16Array,\n        Uint16Array,\n        Int32Array,\n        Uint32Array,\n        Float32Array,\n        Float64Array,\n      ];\n  \n      var TA = typeMapping[dataTypeIndex];\n  \n      function decodeMemoryView(handle) {\n        handle = handle >> 2;\n        var heap = HEAPU32;\n        var size = heap[handle]; // in elements\n        var data = heap[handle + 1]; // byte offset into emscripten heap\n        return new TA(heap.buffer, data, size);\n      }\n  \n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        'fromWireType': decodeMemoryView,\n        'argPackAdvance': 8,\n        'readValueFromPointer': decodeMemoryView,\n      }, {\n        ignoreDuplicateRegistrations: true,\n      });\n    }\n\n  \n  \n  \n  \n  function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n      // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\n      // undefined and false each don't write out any bytes.\n      if (!(maxBytesToWrite > 0))\n        return 0;\n  \n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n        // unit, not a Unicode code point of the character! So decode\n        // UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\n        // and https://www.ietf.org/rfc/rfc2279.txt\n        // and https://tools.ietf.org/html/rfc3629\n        var u = str.charCodeAt(i); // possibly a lead surrogate\n        if (u >= 0xD800 && u <= 0xDFFF) {\n          var u1 = str.charCodeAt(++i);\n          u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\n        }\n        if (u <= 0x7F) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 0x7FF) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 0xC0 | (u >> 6);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else if (u <= 0xFFFF) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 0xE0 | (u >> 12);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          if (u > 0x10FFFF) warnOnce('Invalid Unicode code point ' + ptrToString(u) + ' encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).');\n          heap[outIdx++] = 0xF0 | (u >> 18);\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        }\n      }\n      // Null-terminate the pointer to the buffer.\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    }\n  function stringToUTF8(str, outPtr, maxBytesToWrite) {\n      assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n      return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);\n    }\n  \n  function lengthBytesUTF8(str) {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n        // unit, not a Unicode code point of the character! So decode\n        // UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var c = str.charCodeAt(i); // possibly a lead surrogate\n        if (c <= 0x7F) {\n          len++;\n        } else if (c <= 0x7FF) {\n          len += 2;\n        } else if (c >= 0xD800 && c <= 0xDFFF) {\n          len += 4; ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    }\n  \n  function __embind_register_std_string(rawType, name) {\n      name = readLatin1String(name);\n      var stdStringIsUTF8\n      //process only std::string bindings with UTF8 support, in contrast to e.g. std::basic_string<unsigned char>\n      = (name === \"std::string\");\n  \n      registerType(rawType, {\n        name: name,\n        'fromWireType': function(value) {\n          var length = HEAPU32[((value)>>2)];\n          var payload = value + 4;\n  \n          var str;\n          if (stdStringIsUTF8) {\n            var decodeStartPtr = payload;\n            // Looping here to support possible embedded '0' bytes\n            for (var i = 0; i <= length; ++i) {\n              var currentBytePtr = payload + i;\n              if (i == length || HEAPU8[currentBytePtr] == 0) {\n                var maxRead = currentBytePtr - decodeStartPtr;\n                var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                if (str === undefined) {\n                  str = stringSegment;\n                } else {\n                  str += String.fromCharCode(0);\n                  str += stringSegment;\n                }\n                decodeStartPtr = currentBytePtr + 1;\n              }\n            }\n          } else {\n            var a = new Array(length);\n            for (var i = 0; i < length; ++i) {\n              a[i] = String.fromCharCode(HEAPU8[payload + i]);\n            }\n            str = a.join('');\n          }\n  \n          _free(value);\n  \n          return str;\n        },\n        'toWireType': function(destructors, value) {\n          if (value instanceof ArrayBuffer) {\n            value = new Uint8Array(value);\n          }\n  \n          var length;\n          var valueIsOfTypeString = (typeof value == 'string');\n  \n          if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n            throwBindingError('Cannot pass non-string to std::string');\n          }\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            length = lengthBytesUTF8(value);\n          } else {\n            length = value.length;\n          }\n  \n          // assumes 4-byte alignment\n          var base = _malloc(4 + length + 1);\n          var ptr = base + 4;\n          HEAPU32[((base)>>2)] = length;\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            stringToUTF8(value, ptr, length + 1);\n          } else {\n            if (valueIsOfTypeString) {\n              for (var i = 0; i < length; ++i) {\n                var charCode = value.charCodeAt(i);\n                if (charCode > 255) {\n                  _free(ptr);\n                  throwBindingError('String has UTF-16 code units that do not fit in 8 bits');\n                }\n                HEAPU8[ptr + i] = charCode;\n              }\n            } else {\n              for (var i = 0; i < length; ++i) {\n                HEAPU8[ptr + i] = value[i];\n              }\n            }\n          }\n  \n          if (destructors !== null) {\n            destructors.push(_free, base);\n          }\n          return base;\n        },\n        'argPackAdvance': 8,\n        'readValueFromPointer': simpleReadValueFromPointer,\n        destructorFunction: function(ptr) { _free(ptr); },\n      });\n    }\n\n  \n  \n  \n  var UTF16Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf-16le') : undefined;;\n  function UTF16ToString(ptr, maxBytesToRead) {\n      assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');\n      var endPtr = ptr;\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\n      // null terminator by itself.\n      // Also, use the length info to avoid running tiny strings through\n      // TextDecoder, since .subarray() allocates garbage.\n      var idx = endPtr >> 1;\n      var maxIdx = idx + maxBytesToRead / 2;\n      // If maxBytesToRead is not passed explicitly, it will be undefined, and this\n      // will always evaluate to true. This saves on code size.\n      while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;\n      endPtr = idx << 1;\n  \n      if (endPtr - ptr > 32 && UTF16Decoder)\n        return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n  \n      // Fallback: decode without UTF16Decoder\n      var str = '';\n  \n      // If maxBytesToRead is not passed explicitly, it will be undefined, and the\n      // for-loop's condition will always evaluate to true. The loop is then\n      // terminated on the first null char.\n      for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n        var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];\n        if (codeUnit == 0) break;\n        // fromCharCode constructs a character from a UTF-16 code unit, so we can\n        // pass the UTF16 string right through.\n        str += String.fromCharCode(codeUnit);\n      }\n  \n      return str;\n    }\n  \n  function stringToUTF16(str, outPtr, maxBytesToWrite) {\n      assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');\n      assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n      // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n      if (maxBytesToWrite === undefined) {\n        maxBytesToWrite = 0x7FFFFFFF;\n      }\n      if (maxBytesToWrite < 2) return 0;\n      maxBytesToWrite -= 2; // Null terminator.\n      var startPtr = outPtr;\n      var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;\n      for (var i = 0; i < numCharsToWrite; ++i) {\n        // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\n        var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n        HEAP16[((outPtr)>>1)] = codeUnit;\n        outPtr += 2;\n      }\n      // Null-terminate the pointer to the HEAP.\n      HEAP16[((outPtr)>>1)] = 0;\n      return outPtr - startPtr;\n    }\n  \n  function lengthBytesUTF16(str) {\n      return str.length*2;\n    }\n  \n  function UTF32ToString(ptr, maxBytesToRead) {\n      assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');\n      var i = 0;\n  \n      var str = '';\n      // If maxBytesToRead is not passed explicitly, it will be undefined, and this\n      // will always evaluate to true. This saves on code size.\n      while (!(i >= maxBytesToRead / 4)) {\n        var utf32 = HEAP32[(((ptr)+(i*4))>>2)];\n        if (utf32 == 0) break;\n        ++i;\n        // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        if (utf32 >= 0x10000) {\n          var ch = utf32 - 0x10000;\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n        } else {\n          str += String.fromCharCode(utf32);\n        }\n      }\n      return str;\n    }\n  \n  function stringToUTF32(str, outPtr, maxBytesToWrite) {\n      assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');\n      assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n      // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n      if (maxBytesToWrite === undefined) {\n        maxBytesToWrite = 0x7FFFFFFF;\n      }\n      if (maxBytesToWrite < 4) return 0;\n      var startPtr = outPtr;\n      var endPtr = startPtr + maxBytesToWrite - 4;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n        if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {\n          var trailSurrogate = str.charCodeAt(++i);\n          codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);\n        }\n        HEAP32[((outPtr)>>2)] = codeUnit;\n        outPtr += 4;\n        if (outPtr + 4 > endPtr) break;\n      }\n      // Null-terminate the pointer to the HEAP.\n      HEAP32[((outPtr)>>2)] = 0;\n      return outPtr - startPtr;\n    }\n  \n  function lengthBytesUTF32(str) {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var codeUnit = str.charCodeAt(i);\n        if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.\n        len += 4;\n      }\n  \n      return len;\n    }\n  function __embind_register_std_wstring(rawType, charSize, name) {\n      name = readLatin1String(name);\n      var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n      if (charSize === 2) {\n        decodeString = UTF16ToString;\n        encodeString = stringToUTF16;\n        lengthBytesUTF = lengthBytesUTF16;\n        getHeap = () => HEAPU16;\n        shift = 1;\n      } else if (charSize === 4) {\n        decodeString = UTF32ToString;\n        encodeString = stringToUTF32;\n        lengthBytesUTF = lengthBytesUTF32;\n        getHeap = () => HEAPU32;\n        shift = 2;\n      }\n      registerType(rawType, {\n        name: name,\n        'fromWireType': function(value) {\n          // Code mostly taken from _embind_register_std_string fromWireType\n          var length = HEAPU32[value >> 2];\n          var HEAP = getHeap();\n          var str;\n  \n          var decodeStartPtr = value + 4;\n          // Looping here to support possible embedded '0' bytes\n          for (var i = 0; i <= length; ++i) {\n            var currentBytePtr = value + 4 + i * charSize;\n            if (i == length || HEAP[currentBytePtr >> shift] == 0) {\n              var maxReadBytes = currentBytePtr - decodeStartPtr;\n              var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n              if (str === undefined) {\n                str = stringSegment;\n              } else {\n                str += String.fromCharCode(0);\n                str += stringSegment;\n              }\n              decodeStartPtr = currentBytePtr + charSize;\n            }\n          }\n  \n          _free(value);\n  \n          return str;\n        },\n        'toWireType': function(destructors, value) {\n          if (!(typeof value == 'string')) {\n            throwBindingError('Cannot pass non-string to C++ string type ' + name);\n          }\n  \n          // assumes 4-byte alignment\n          var length = lengthBytesUTF(value);\n          var ptr = _malloc(4 + length + charSize);\n          HEAPU32[ptr >> 2] = length >> shift;\n  \n          encodeString(value, ptr + 4, length + charSize);\n  \n          if (destructors !== null) {\n            destructors.push(_free, ptr);\n          }\n          return ptr;\n        },\n        'argPackAdvance': 8,\n        'readValueFromPointer': simpleReadValueFromPointer,\n        destructorFunction: function(ptr) { _free(ptr); },\n      });\n    }\n\n  \n  function __embind_register_void(rawType, name) {\n      name = readLatin1String(name);\n      registerType(rawType, {\n          isVoid: true, // void return values can be optimized out sometimes\n          name: name,\n          'argPackAdvance': 0,\n          'fromWireType': function() {\n              return undefined;\n          },\n          'toWireType': function(destructors, o) {\n              // TODO: assert if anything else is given?\n              return undefined;\n          },\n      });\n    }\n\n  function _abort() {\n      abort('native code called abort()');\n    }\n\n  function _emscripten_memcpy_big(dest, src, num) {\n      HEAPU8.copyWithin(dest, src, src + num);\n    }\n\n  function getHeapMax() {\n      return HEAPU8.length;\n    }\n  \n  function abortOnCannotGrowMemory(requestedSize) {\n      abort('Cannot enlarge memory arrays to size ' + requestedSize + ' bytes (OOM). Either (1) compile with -sINITIAL_MEMORY=X with X higher than the current value ' + HEAP8.length + ', (2) compile with -sALLOW_MEMORY_GROWTH which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with -sABORTING_MALLOC=0');\n    }\n  function _emscripten_resize_heap(requestedSize) {\n      var oldSize = HEAPU8.length;\n      requestedSize = requestedSize >>> 0;\n      abortOnCannotGrowMemory(requestedSize);\n    }\n\n  var SYSCALLS = {varargs:undefined,get:function() {\n        assert(SYSCALLS.varargs != undefined);\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];\n        return ret;\n      },getStr:function(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      }};\n  function _fd_close(fd) {\n      abort('fd_close called without SYSCALLS_REQUIRE_FILESYSTEM');\n    }\n\n  function convertI32PairToI53Checked(lo, hi) {\n      assert(lo == (lo >>> 0) || lo == (lo|0)); // lo should either be a i32 or a u32\n      assert(hi === (hi|0));                    // hi should be a i32\n      return ((hi + 0x200000) >>> 0 < 0x400001 - !!lo) ? (lo >>> 0) + hi * 4294967296 : NaN;\n    }\n  \n  \n  \n  \n  function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n      return 70;\n    }\n\n  var printCharBuffers = [null,[],[]];\n  \n  function printChar(stream, curr) {\n      var buffer = printCharBuffers[stream];\n      assert(buffer);\n      if (curr === 0 || curr === 10) {\n        (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n        buffer.length = 0;\n      } else {\n        buffer.push(curr);\n      }\n    }\n  \n  function flush_NO_FILESYSTEM() {\n      // flush anything remaining in the buffers during shutdown\n      _fflush(0);\n      if (printCharBuffers[1].length) printChar(1, 10);\n      if (printCharBuffers[2].length) printChar(2, 10);\n    }\n  \n  \n  function _fd_write(fd, iov, iovcnt, pnum) {\n      // hack to support printf in SYSCALLS_REQUIRE_FILESYSTEM=0\n      var num = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[((iov)>>2)];\n        var len = HEAPU32[(((iov)+(4))>>2)];\n        iov += 8;\n        for (var j = 0; j < len; j++) {\n          printChar(fd, HEAPU8[ptr+j]);\n        }\n        num += len;\n      }\n      HEAPU32[((pnum)>>2)] = num;\n      return 0;\n    }\n\n\n  function getCFunc(ident) {\n      var func = Module['_' + ident]; // closure exported function\n      assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');\n      return func;\n    }\n  \n  function writeArrayToMemory(array, buffer) {\n      assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)')\n      HEAP8.set(array, buffer);\n    }\n  \n  \n  function stringToUTF8OnStack(str) {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = stackAlloc(size);\n      stringToUTF8(str, ret, size);\n      return ret;\n    }\n  \n  \n    /**\n     * @param {string|null=} returnType\n     * @param {Array=} argTypes\n     * @param {Arguments|Array=} args\n     * @param {Object=} opts\n     */\n  function ccall(ident, returnType, argTypes, args, opts) {\n      // For fast lookup of conversion functions\n      var toC = {\n        'string': (str) => {\n          var ret = 0;\n          if (str !== null && str !== undefined && str !== 0) { // null string\n            // at most 4 bytes per UTF-8 code point, +1 for the trailing '\\0'\n            ret = stringToUTF8OnStack(str);\n          }\n          return ret;\n        },\n        'array': (arr) => {\n          var ret = stackAlloc(arr.length);\n          writeArrayToMemory(arr, ret);\n          return ret;\n        }\n      };\n  \n      function convertReturnValue(ret) {\n        if (returnType === 'string') {\n          \n          return UTF8ToString(ret);\n        }\n        if (returnType === 'boolean') return Boolean(ret);\n        return ret;\n      }\n  \n      var func = getCFunc(ident);\n      var cArgs = [];\n      var stack = 0;\n      assert(returnType !== 'array', 'Return type should not be \"array\".');\n      if (args) {\n        for (var i = 0; i < args.length; i++) {\n          var converter = toC[argTypes[i]];\n          if (converter) {\n            if (stack === 0) stack = stackSave();\n            cArgs[i] = converter(args[i]);\n          } else {\n            cArgs[i] = args[i];\n          }\n        }\n      }\n      var ret = func.apply(null, cArgs);\n      function onDone(ret) {\n        if (stack !== 0) stackRestore(stack);\n        return convertReturnValue(ret);\n      }\n  \n      ret = onDone(ret);\n      return ret;\n    }\n\n  \n  \n    /**\n     * @param {string=} returnType\n     * @param {Array=} argTypes\n     * @param {Object=} opts\n     */\n  function cwrap(ident, returnType, argTypes, opts) {\n      return function() {\n        return ccall(ident, returnType, argTypes, arguments, opts);\n      }\n    }\nembind_init_charCodes();\nBindingError = Module['BindingError'] = extendError(Error, 'BindingError');;\nInternalError = Module['InternalError'] = extendError(Error, 'InternalError');;\ninit_emval();;\nUnboundTypeError = Module['UnboundTypeError'] = extendError(Error, 'UnboundTypeError');;\nfunction checkIncomingModuleAPI() {\n  ignoredModuleProp('fetchSettings');\n}\nvar wasmImports = {\n  \"__assert_fail\": ___assert_fail,\n  \"__cxa_begin_catch\": ___cxa_begin_catch,\n  \"__cxa_find_matching_catch_2\": ___cxa_find_matching_catch_2,\n  \"__cxa_find_matching_catch_3\": ___cxa_find_matching_catch_3,\n  \"__resumeException\": ___resumeException,\n  \"_embind_register_bigint\": __embind_register_bigint,\n  \"_embind_register_bool\": __embind_register_bool,\n  \"_embind_register_emval\": __embind_register_emval,\n  \"_embind_register_float\": __embind_register_float,\n  \"_embind_register_function\": __embind_register_function,\n  \"_embind_register_integer\": __embind_register_integer,\n  \"_embind_register_memory_view\": __embind_register_memory_view,\n  \"_embind_register_std_string\": __embind_register_std_string,\n  \"_embind_register_std_wstring\": __embind_register_std_wstring,\n  \"_embind_register_void\": __embind_register_void,\n  \"abort\": _abort,\n  \"emscripten_memcpy_big\": _emscripten_memcpy_big,\n  \"emscripten_resize_heap\": _emscripten_resize_heap,\n  \"fd_close\": _fd_close,\n  \"fd_seek\": _fd_seek,\n  \"fd_write\": _fd_write,\n  \"invoke_ii\": invoke_ii,\n  \"invoke_iii\": invoke_iii,\n  \"invoke_v\": invoke_v,\n  \"invoke_vi\": invoke_vi,\n  \"invoke_vii\": invoke_vii,\n  \"invoke_viii\": invoke_viii,\n  \"invoke_viiii\": invoke_viiii\n};\nvar asm = createWasm();\n/** @type {function(...*):?} */\nvar ___wasm_call_ctors = createExportWrapper(\"__wasm_call_ctors\");\n/** @type {function(...*):?} */\nvar ___getTypeName = Module[\"___getTypeName\"] = createExportWrapper(\"__getTypeName\");\n/** @type {function(...*):?} */\nvar __embind_initialize_bindings = Module[\"__embind_initialize_bindings\"] = createExportWrapper(\"_embind_initialize_bindings\");\n/** @type {function(...*):?} */\nvar ___errno_location = createExportWrapper(\"__errno_location\");\n/** @type {function(...*):?} */\nvar _fflush = Module[\"_fflush\"] = createExportWrapper(\"fflush\");\n/** @type {function(...*):?} */\nvar _malloc = createExportWrapper(\"malloc\");\n/** @type {function(...*):?} */\nvar _free = Module[\"_free\"] = createExportWrapper(\"free\");\n/** @type {function(...*):?} */\nvar _setThrew = createExportWrapper(\"setThrew\");\n/** @type {function(...*):?} */\nvar setTempRet0 = createExportWrapper(\"setTempRet0\");\n/** @type {function(...*):?} */\nvar getTempRet0 = createExportWrapper(\"getTempRet0\");\n/** @type {function(...*):?} */\nvar _emscripten_stack_init = function() {\n  return (_emscripten_stack_init = Module[\"asm\"][\"emscripten_stack_init\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_free = function() {\n  return (_emscripten_stack_get_free = Module[\"asm\"][\"emscripten_stack_get_free\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_base = function() {\n  return (_emscripten_stack_get_base = Module[\"asm\"][\"emscripten_stack_get_base\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_end = function() {\n  return (_emscripten_stack_get_end = Module[\"asm\"][\"emscripten_stack_get_end\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar stackSave = createExportWrapper(\"stackSave\");\n/** @type {function(...*):?} */\nvar stackRestore = createExportWrapper(\"stackRestore\");\n/** @type {function(...*):?} */\nvar stackAlloc = createExportWrapper(\"stackAlloc\");\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_current = function() {\n  return (_emscripten_stack_get_current = Module[\"asm\"][\"emscripten_stack_get_current\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar ___get_exception_message = Module[\"___get_exception_message\"] = createExportWrapper(\"__get_exception_message\");\n/** @type {function(...*):?} */\nvar ___cxa_free_exception = createExportWrapper(\"__cxa_free_exception\");\n/** @type {function(...*):?} */\nvar ___cxa_can_catch = createExportWrapper(\"__cxa_can_catch\");\n/** @type {function(...*):?} */\nvar ___cxa_is_pointer_type = createExportWrapper(\"__cxa_is_pointer_type\");\n/** @type {function(...*):?} */\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = createExportWrapper(\"dynCall_jiji\");\n\nfunction invoke_ii(index,a1) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1);\n  } catch(e) {\n    stackRestore(sp);\n    if (!(e instanceof EmscriptenEH)) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiii(index,a1,a2,a3,a4) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1,a2,a3,a4);\n  } catch(e) {\n    stackRestore(sp);\n    if (!(e instanceof EmscriptenEH)) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_vii(index,a1,a2) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1,a2);\n  } catch(e) {\n    stackRestore(sp);\n    if (!(e instanceof EmscriptenEH)) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_v(index) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)();\n  } catch(e) {\n    stackRestore(sp);\n    if (!(e instanceof EmscriptenEH)) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iii(index,a1,a2) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1,a2);\n  } catch(e) {\n    stackRestore(sp);\n    if (!(e instanceof EmscriptenEH)) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viii(index,a1,a2,a3) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1,a2,a3);\n  } catch(e) {\n    stackRestore(sp);\n    if (!(e instanceof EmscriptenEH)) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_vi(index,a1) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1);\n  } catch(e) {\n    stackRestore(sp);\n    if (!(e instanceof EmscriptenEH)) throw e;\n    _setThrew(1, 0);\n  }\n}\n\n\n// include: postamble.js\n// === Auto-generated postamble setup entry stuff ===\n\nModule[\"ccall\"] = ccall;\nModule[\"cwrap\"] = cwrap;\nvar missingLibrarySymbols = [\n  'zeroMemory',\n  'exitJS',\n  'emscripten_realloc_buffer',\n  'isLeapYear',\n  'ydayFromDate',\n  'arraySum',\n  'addDays',\n  'setErrNo',\n  'inetPton4',\n  'inetNtop4',\n  'inetPton6',\n  'inetNtop6',\n  'readSockaddr',\n  'writeSockaddr',\n  'getHostByName',\n  'initRandomFill',\n  'randomFill',\n  'traverseStack',\n  'getCallstack',\n  'emscriptenLog',\n  'convertPCtoSourceLocation',\n  'readEmAsmArgs',\n  'jstoi_q',\n  'jstoi_s',\n  'getExecutableName',\n  'listenOnce',\n  'autoResumeAudioContext',\n  'handleException',\n  'runtimeKeepalivePush',\n  'runtimeKeepalivePop',\n  'callUserCallback',\n  'maybeExit',\n  'safeSetTimeout',\n  'asmjsMangle',\n  'asyncLoad',\n  'alignMemory',\n  'mmapAlloc',\n  'getNativeTypeSize',\n  'STACK_SIZE',\n  'STACK_ALIGN',\n  'POINTER_SIZE',\n  'ASSERTIONS',\n  'writeI53ToI64',\n  'writeI53ToI64Clamped',\n  'writeI53ToI64Signaling',\n  'writeI53ToU64Clamped',\n  'writeI53ToU64Signaling',\n  'readI53FromI64',\n  'readI53FromU64',\n  'convertI32PairToI53',\n  'convertU32PairToI53',\n  'uleb128Encode',\n  'sigToWasmTypes',\n  'generateFuncType',\n  'convertJsFunctionToWasm',\n  'getEmptyTableSlot',\n  'updateTableMap',\n  'getFunctionAddress',\n  'addFunction',\n  'removeFunction',\n  'reallyNegative',\n  'unSign',\n  'strLen',\n  'reSign',\n  'formatString',\n  'intArrayFromString',\n  'intArrayToString',\n  'AsciiToString',\n  'stringToAscii',\n  'stringToNewUTF8',\n  'getSocketFromFD',\n  'getSocketAddress',\n  'registerKeyEventCallback',\n  'maybeCStringToJsString',\n  'findEventTarget',\n  'findCanvasEventTarget',\n  'getBoundingClientRect',\n  'fillMouseEventData',\n  'registerMouseEventCallback',\n  'registerWheelEventCallback',\n  'registerUiEventCallback',\n  'registerFocusEventCallback',\n  'fillDeviceOrientationEventData',\n  'registerDeviceOrientationEventCallback',\n  'fillDeviceMotionEventData',\n  'registerDeviceMotionEventCallback',\n  'screenOrientation',\n  'fillOrientationChangeEventData',\n  'registerOrientationChangeEventCallback',\n  'fillFullscreenChangeEventData',\n  'registerFullscreenChangeEventCallback',\n  'JSEvents_requestFullscreen',\n  'JSEvents_resizeCanvasForFullscreen',\n  'registerRestoreOldStyle',\n  'hideEverythingExceptGivenElement',\n  'restoreHiddenElements',\n  'setLetterbox',\n  'softFullscreenResizeWebGLRenderTarget',\n  'doRequestFullscreen',\n  'fillPointerlockChangeEventData',\n  'registerPointerlockChangeEventCallback',\n  'registerPointerlockErrorEventCallback',\n  'requestPointerLock',\n  'fillVisibilityChangeEventData',\n  'registerVisibilityChangeEventCallback',\n  'registerTouchEventCallback',\n  'fillGamepadEventData',\n  'registerGamepadEventCallback',\n  'registerBeforeUnloadEventCallback',\n  'fillBatteryEventData',\n  'battery',\n  'registerBatteryEventCallback',\n  'setCanvasElementSize',\n  'getCanvasElementSize',\n  'demangle',\n  'demangleAll',\n  'jsStackTrace',\n  'stackTrace',\n  'getEnvStrings',\n  'checkWasiClock',\n  'wasiRightsToMuslOFlags',\n  'wasiOFlagsToMuslOFlags',\n  'createDyncallWrapper',\n  'setImmediateWrapped',\n  'clearImmediateWrapped',\n  'polyfillSetImmediate',\n  'getPromise',\n  'makePromise',\n  'makePromiseCallback',\n  'setMainLoop',\n  '_setNetworkCallback',\n  'heapObjectForWebGLType',\n  'heapAccessShiftForWebGLHeap',\n  'webgl_enable_ANGLE_instanced_arrays',\n  'webgl_enable_OES_vertex_array_object',\n  'webgl_enable_WEBGL_draw_buffers',\n  'webgl_enable_WEBGL_multi_draw',\n  'emscriptenWebGLGet',\n  'computeUnpackAlignedImageSize',\n  'colorChannelsInGlTextureFormat',\n  'emscriptenWebGLGetTexPixelData',\n  '__glGenObject',\n  'emscriptenWebGLGetUniform',\n  'webglGetUniformLocation',\n  'webglPrepareUniformLocationsBeforeFirstUse',\n  'webglGetLeftBracePos',\n  'emscriptenWebGLGetVertexAttrib',\n  '__glGetActiveAttribOrUniform',\n  'writeGLArray',\n  'registerWebGlEventCallback',\n  'runAndAbortIfError',\n  'SDL_unicode',\n  'SDL_ttfContext',\n  'SDL_audio',\n  'GLFW_Window',\n  'ALLOC_NORMAL',\n  'ALLOC_STACK',\n  'allocate',\n  'writeStringToMemory',\n  'writeAsciiToMemory',\n  'init_embind',\n  'getBasestPointer',\n  'registerInheritedInstance',\n  'unregisterInheritedInstance',\n  'getInheritedInstance',\n  'getInheritedInstanceCount',\n  'getLiveInheritedInstances',\n  'requireRegisteredType',\n  'enumReadValueFromPointer',\n  'genericPointerToWireType',\n  'constNoSmartPtrRawPointerToWireType',\n  'nonConstNoSmartPtrRawPointerToWireType',\n  'init_RegisteredPointer',\n  'RegisteredPointer',\n  'RegisteredPointer_getPointee',\n  'RegisteredPointer_destructor',\n  'RegisteredPointer_deleteObject',\n  'RegisteredPointer_fromWireType',\n  'runDestructor',\n  'releaseClassHandle',\n  'detachFinalizer',\n  'attachFinalizer',\n  'makeClassHandle',\n  'init_ClassHandle',\n  'ClassHandle',\n  'ClassHandle_isAliasOf',\n  'throwInstanceAlreadyDeleted',\n  'ClassHandle_clone',\n  'ClassHandle_delete',\n  'ClassHandle_isDeleted',\n  'ClassHandle_deleteLater',\n  'flushPendingDeletes',\n  'setDelayFunction',\n  'RegisteredClass',\n  'shallowCopyInternalPointer',\n  'downcastPointer',\n  'upcastPointer',\n  'validateThis',\n  'getStringOrSymbol',\n  'craftEmvalAllocator',\n  'emval_get_global',\n  'emval_lookupTypes',\n  'emval_allocateDestructors',\n  'emval_addMethodCaller',\n];\nmissingLibrarySymbols.forEach(missingLibrarySymbol)\n\nvar unexportedSymbols = [\n  'run',\n  'addOnPreRun',\n  'addOnInit',\n  'addOnPreMain',\n  'addOnExit',\n  'addOnPostRun',\n  'addRunDependency',\n  'removeRunDependency',\n  'FS_createFolder',\n  'FS_createPath',\n  'FS_createDataFile',\n  'FS_createPreloadedFile',\n  'FS_createLazyFile',\n  'FS_createLink',\n  'FS_createDevice',\n  'FS_unlink',\n  'out',\n  'err',\n  'callMain',\n  'abort',\n  'keepRuntimeAlive',\n  'wasmMemory',\n  'stackAlloc',\n  'stackSave',\n  'stackRestore',\n  'getTempRet0',\n  'setTempRet0',\n  'writeStackCookie',\n  'checkStackCookie',\n  'ptrToString',\n  'getHeapMax',\n  'abortOnCannotGrowMemory',\n  'ENV',\n  'MONTH_DAYS_REGULAR',\n  'MONTH_DAYS_LEAP',\n  'MONTH_DAYS_REGULAR_CUMULATIVE',\n  'MONTH_DAYS_LEAP_CUMULATIVE',\n  'ERRNO_CODES',\n  'ERRNO_MESSAGES',\n  'DNS',\n  'Protocols',\n  'Sockets',\n  'timers',\n  'warnOnce',\n  'UNWIND_CACHE',\n  'readEmAsmArgsArray',\n  'dynCallLegacy',\n  'getDynCaller',\n  'dynCall',\n  'HandleAllocator',\n  'convertI32PairToI53Checked',\n  'getCFunc',\n  'freeTableIndexes',\n  'functionsInTableMap',\n  'setValue',\n  'getValue',\n  'PATH',\n  'PATH_FS',\n  'UTF8Decoder',\n  'UTF8ArrayToString',\n  'UTF8ToString',\n  'stringToUTF8Array',\n  'stringToUTF8',\n  'lengthBytesUTF8',\n  'UTF16Decoder',\n  'UTF16ToString',\n  'stringToUTF16',\n  'lengthBytesUTF16',\n  'UTF32ToString',\n  'stringToUTF32',\n  'lengthBytesUTF32',\n  'stringToUTF8OnStack',\n  'writeArrayToMemory',\n  'SYSCALLS',\n  'JSEvents',\n  'specialHTMLTargets',\n  'currentFullscreenStrategy',\n  'restoreOldWindowedStyle',\n  'ExitStatus',\n  'flush_NO_FILESYSTEM',\n  'dlopenMissingError',\n  'promiseMap',\n  'uncaughtExceptionCount',\n  'exceptionLast',\n  'exceptionCaught',\n  'ExceptionInfo',\n  'exception_addRef',\n  'exception_decRef',\n  'getExceptionMessageCommon',\n  'incrementExceptionRefcount',\n  'decrementExceptionRefcount',\n  'getExceptionMessage',\n  'Browser',\n  'wget',\n  'FS',\n  'MEMFS',\n  'TTY',\n  'PIPEFS',\n  'SOCKFS',\n  'tempFixedLengthArray',\n  'miniTempWebGLFloatBuffers',\n  'miniTempWebGLIntBuffers',\n  'GL',\n  'emscripten_webgl_power_preferences',\n  'AL',\n  'GLUT',\n  'EGL',\n  'GLEW',\n  'IDBStore',\n  'SDL',\n  'SDL_gfx',\n  'GLFW',\n  'allocateUTF8',\n  'allocateUTF8OnStack',\n  'InternalError',\n  'BindingError',\n  'UnboundTypeError',\n  'PureVirtualError',\n  'throwInternalError',\n  'throwBindingError',\n  'throwUnboundTypeError',\n  'ensureOverloadTable',\n  'exposePublicSymbol',\n  'replacePublicSymbol',\n  'extendError',\n  'createNamedFunction',\n  'embindRepr',\n  'registeredInstances',\n  'registeredTypes',\n  'awaitingDependencies',\n  'typeDependencies',\n  'registeredPointers',\n  'registerType',\n  'whenDependentTypesAreResolved',\n  'embind_charCodes',\n  'embind_init_charCodes',\n  'readLatin1String',\n  'getTypeName',\n  'heap32VectorToArray',\n  'getShiftFromSize',\n  'integerReadValueFromPointer',\n  'floatReadValueFromPointer',\n  'simpleReadValueFromPointer',\n  'runDestructors',\n  'newFunc',\n  'craftInvokerFunction',\n  'embind__requireFunction',\n  'tupleRegistrations',\n  'structRegistrations',\n  'finalizationRegistry',\n  'detachFinalizer_deps',\n  'deletionQueue',\n  'delayFunction',\n  'char_0',\n  'char_9',\n  'makeLegalFunctionName',\n  'emval_handles',\n  'emval_symbols',\n  'init_emval',\n  'count_emval_handles',\n  'Emval',\n  'emval_newers',\n  'emval_methodCallers',\n  'emval_registeredMethods',\n];\nunexportedSymbols.forEach(unexportedRuntimeSymbol);\n\n\n\nvar calledRun;\n\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!calledRun) run();\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n};\n\nfunction stackCheckInit() {\n  // This is normally called automatically during __wasm_call_ctors but need to\n  // get these values before even running any of the ctors so we call it redundantly\n  // here.\n  _emscripten_stack_init();\n  // TODO(sbc): Move writeStackCookie to native to to avoid this.\n  writeStackCookie();\n}\n\nfunction run() {\n\n  if (runDependencies > 0) {\n    return;\n  }\n\n    stackCheckInit();\n\n  preRun();\n\n  // a preRun added a dependency, run will be called later\n  if (runDependencies > 0) {\n    return;\n  }\n\n  function doRun() {\n    // run may have just been called through dependencies being fulfilled just in this very frame,\n    // or while the async setStatus time below was happening\n    if (calledRun) return;\n    calledRun = true;\n    Module['calledRun'] = true;\n\n    if (ABORT) return;\n\n    initRuntime();\n\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n    assert(!Module['_main'], 'compiled without a main, but one is present. if you added it from JS, use Module[\"onRuntimeInitialized\"]');\n\n    postRun();\n  }\n\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function() {\n      setTimeout(function() {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else\n  {\n    doRun();\n  }\n  checkStackCookie();\n}\n\nfunction checkUnflushedContent() {\n  // Compiler settings do not allow exiting the runtime, so flushing\n  // the streams is not possible. but in ASSERTIONS mode we check\n  // if there was something to flush, and if so tell the user they\n  // should request that the runtime be exitable.\n  // Normally we would not even include flush() at all, but in ASSERTIONS\n  // builds we do so just for this check, and here we see if there is any\n  // content to flush, that is, we check if there would have been\n  // something a non-ASSERTIONS build would have not seen.\n  // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0\n  // mode (which has its own special function for this; otherwise, all\n  // the code is inside libc)\n  var oldOut = out;\n  var oldErr = err;\n  var has = false;\n  out = err = (x) => {\n    has = true;\n  }\n  try { // it doesn't matter if it fails\n    flush_NO_FILESYSTEM();\n  } catch(e) {}\n  out = oldOut;\n  err = oldErr;\n  if (has) {\n    warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.');\n    warnOnce('(this may also be due to not including full filesystem support - try building with -sFORCE_FILESYSTEM)');\n  }\n}\n\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\n\nrun();\n\n\n// end include: postamble.js\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}