{"ast":null,"code":"// include: shell.js\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = typeof Module != 'undefined' ? Module : {};\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = Object.assign({}, Module);\nvar arguments_ = [];\nvar thisProgram = './this.program';\nvar quit_ = (status, toThrow) => {\n  throw toThrow;\n};\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n\n// Attempt to auto-detect the environment\nvar ENVIRONMENT_IS_WEB = typeof window == 'object';\nvar ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';\n// N.b. Electron.js environment is simultaneously a NODE-environment, but\n// also a web environment.\nvar ENVIRONMENT_IS_NODE = typeof process == 'object' && typeof process.versions == 'object' && typeof process.versions.node == 'string';\nvar ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\nif (Module['ENVIRONMENT']) {\n  throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)');\n}\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = '';\nfunction locateFile(path) {\n  if (Module['locateFile']) {\n    return Module['locateFile'](path, scriptDirectory);\n  }\n  return scriptDirectory + path;\n}\n\n// Hooks that are implemented differently in different runtime environments.\nvar read_, readAsync, readBinary, setWindowTitle;\nif (ENVIRONMENT_IS_NODE) {\n  if (typeof process == 'undefined' || !process.release || process.release.name !== 'node') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n  var nodeVersion = process.versions.node;\n  var numericVersion = nodeVersion.split('.').slice(0, 3);\n  numericVersion = numericVersion[0] * 10000 + numericVersion[1] * 100 + numericVersion[2].split('-')[0] * 1;\n  var minVersion = 101900;\n  if (numericVersion < 101900) {\n    throw new Error('This emscripten-generated code requires node v10.19.19.0 (detected v' + nodeVersion + ')');\n  }\n\n  // `require()` is no-op in an ESM module, use `createRequire()` to construct\n  // the require()` function.  This is only necessary for multi-environment\n  // builds, `-sENVIRONMENT=node` emits a static import declaration instead.\n  // TODO: Swap all `require()`'s with `import()`'s?\n  // These modules will usually be used on Node.js. Load them eagerly to avoid\n  // the complexity of lazy-loading.\n  var fs = require('fs');\n  var nodePath = require('path');\n  if (ENVIRONMENT_IS_WORKER) {\n    scriptDirectory = nodePath.dirname(scriptDirectory) + '/';\n  } else {\n    scriptDirectory = __dirname + '/';\n  }\n\n  // include: node_shell_read.js\n  read_ = (filename, binary) => {\n    // We need to re-wrap `file://` strings to URLs. Normalizing isn't\n    // necessary in that case, the path should already be absolute.\n    filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n    return fs.readFileSync(filename, binary ? undefined : 'utf8');\n  };\n  readBinary = filename => {\n    var ret = read_(filename, true);\n    if (!ret.buffer) {\n      ret = new Uint8Array(ret);\n    }\n    assert(ret.buffer);\n    return ret;\n  };\n  readAsync = (filename, onload, onerror) => {\n    // See the comment in the `read_` function.\n    filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n    fs.readFile(filename, function (err, data) {\n      if (err) onerror(err);else onload(data.buffer);\n    });\n  };\n\n  // end include: node_shell_read.js\n  if (!Module['thisProgram'] && process.argv.length > 1) {\n    thisProgram = process.argv[1].replace(/\\\\/g, '/');\n  }\n  arguments_ = process.argv.slice(2);\n  if (typeof module != 'undefined') {\n    module['exports'] = Module;\n  }\n  process.on('uncaughtException', function (ex) {\n    // suppress ExitStatus exceptions from showing an error\n    if (ex !== 'unwind' && !(ex instanceof ExitStatus) && !(ex.context instanceof ExitStatus)) {\n      throw ex;\n    }\n  });\n\n  // Without this older versions of node (< v15) will log unhandled rejections\n  // but return 0, which is not normally the desired behaviour.  This is\n  // not be needed with node v15 and about because it is now the default\n  // behaviour:\n  // See https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode\n  var nodeMajor = process.versions.node.split(\".\")[0];\n  if (nodeMajor < 15) {\n    process.on('unhandledRejection', function (reason) {\n      throw reason;\n    });\n  }\n  quit_ = (status, toThrow) => {\n    process.exitCode = status;\n    throw toThrow;\n  };\n  Module['inspect'] = function () {\n    return '[Emscripten Module object]';\n  };\n} else if (ENVIRONMENT_IS_SHELL) {\n  if (typeof process == 'object' && typeof require === 'function' || typeof window == 'object' || typeof importScripts == 'function') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n  if (typeof read != 'undefined') {\n    read_ = function shell_read(f) {\n      return read(f);\n    };\n  }\n  readBinary = function readBinary(f) {\n    let data;\n    if (typeof readbuffer == 'function') {\n      return new Uint8Array(readbuffer(f));\n    }\n    data = read(f, 'binary');\n    assert(typeof data == 'object');\n    return data;\n  };\n  readAsync = function readAsync(f, onload, onerror) {\n    setTimeout(() => onload(readBinary(f)), 0);\n  };\n  if (typeof clearTimeout == 'undefined') {\n    globalThis.clearTimeout = id => {};\n  }\n  if (typeof scriptArgs != 'undefined') {\n    arguments_ = scriptArgs;\n  } else if (typeof arguments != 'undefined') {\n    arguments_ = arguments;\n  }\n  if (typeof quit == 'function') {\n    quit_ = (status, toThrow) => {\n      // Unlike node which has process.exitCode, d8 has no such mechanism. So we\n      // have no way to set the exit code and then let the program exit with\n      // that code when it naturally stops running (say, when all setTimeouts\n      // have completed). For that reason, we must call `quit` - the only way to\n      // set the exit code - but quit also halts immediately.  To increase\n      // consistency with node (and the web) we schedule the actual quit call\n      // using a setTimeout to give the current stack and any exception handlers\n      // a chance to run.  This enables features such as addOnPostRun (which\n      // expected to be able to run code after main returns).\n      setTimeout(() => {\n        if (!(toThrow instanceof ExitStatus)) {\n          let toLog = toThrow;\n          if (toThrow && typeof toThrow == 'object' && toThrow.stack) {\n            toLog = [toThrow, toThrow.stack];\n          }\n          err('exiting due to exception: ' + toLog);\n        }\n        quit(status);\n      });\n      throw toThrow;\n    };\n  }\n  if (typeof print != 'undefined') {\n    // Prefer to use print/printErr where they exist, as they usually work better.\n    if (typeof console == 'undefined') console = /** @type{!Console} */{};\n    console.log = /** @type{!function(this:Console, ...*): undefined} */print;\n    console.warn = console.error = /** @type{!function(this:Console, ...*): undefined} */typeof printErr != 'undefined' ? printErr : print;\n  }\n} else\n  // Note that this includes Node.js workers when relevant (pthreads is enabled).\n  // Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\n  // ENVIRONMENT_IS_NODE.\n  if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n    if (ENVIRONMENT_IS_WORKER) {\n      // Check worker, not web, since window could be polyfilled\n      scriptDirectory = self.location.href;\n    } else if (typeof document != 'undefined' && document.currentScript) {\n      // web\n      scriptDirectory = document.currentScript.src;\n    }\n    // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n    // otherwise, slice off the final part of the url to find the script directory.\n    // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n    // and scriptDirectory will correctly be replaced with an empty string.\n    // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\n    // they are removed because they could contain a slash.\n    if (scriptDirectory.indexOf('blob:') !== 0) {\n      scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf('/') + 1);\n    } else {\n      scriptDirectory = '';\n    }\n    if (!(typeof window == 'object' || typeof importScripts == 'function')) throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n    // Differentiate the Web Worker from the Node Worker case, as reading must\n    // be done differently.\n    {\n      // include: web_or_worker_shell_read.js\n      read_ = url => {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, false);\n        xhr.send(null);\n        return xhr.responseText;\n      };\n      if (ENVIRONMENT_IS_WORKER) {\n        readBinary = url => {\n          var xhr = new XMLHttpRequest();\n          xhr.open('GET', url, false);\n          xhr.responseType = 'arraybuffer';\n          xhr.send(null);\n          return new Uint8Array( /** @type{!ArrayBuffer} */xhr.response);\n        };\n      }\n      readAsync = (url, onload, onerror) => {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, true);\n        xhr.responseType = 'arraybuffer';\n        xhr.onload = () => {\n          if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n            // file URLs can return 0\n            onload(xhr.response);\n            return;\n          }\n          onerror();\n        };\n        xhr.onerror = onerror;\n        xhr.send(null);\n      };\n\n      // end include: web_or_worker_shell_read.js\n    }\n\n    setWindowTitle = title => document.title = title;\n  } else {\n    throw new Error('environment detection error');\n  }\nvar out = Module['print'] || console.log.bind(console);\nvar err = Module['printErr'] || console.warn.bind(console);\n\n// Merge back in the overrides\nObject.assign(Module, moduleOverrides);\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\nmoduleOverrides = null;\ncheckIncomingModuleAPI();\n\n// Emit code to handle expected values on the Module object. This applies Module.x\n// to the proper local x. This has two benefits: first, we only emit it if it is\n// expected to arrive, and second, by using a local everywhere else that can be\n// minified.\n\nif (Module['arguments']) arguments_ = Module['arguments'];\nlegacyModuleProp('arguments', 'arguments_');\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];\nlegacyModuleProp('thisProgram', 'thisProgram');\nif (Module['quit']) quit_ = Module['quit'];\nlegacyModuleProp('quit', 'quit_');\n\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\n// Assertions on removed incoming Module JS APIs.\nassert(typeof Module['memoryInitializerPrefixURL'] == 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['pthreadMainPrefixURL'] == 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['cdInitializerPrefixURL'] == 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['filePackagePrefixURL'] == 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['read'] == 'undefined', 'Module.read option was removed (modify read_ in JS)');\nassert(typeof Module['readAsync'] == 'undefined', 'Module.readAsync option was removed (modify readAsync in JS)');\nassert(typeof Module['readBinary'] == 'undefined', 'Module.readBinary option was removed (modify readBinary in JS)');\nassert(typeof Module['setWindowTitle'] == 'undefined', 'Module.setWindowTitle option was removed (modify setWindowTitle in JS)');\nassert(typeof Module['TOTAL_MEMORY'] == 'undefined', 'Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY');\nlegacyModuleProp('read', 'read_');\nlegacyModuleProp('readAsync', 'readAsync');\nlegacyModuleProp('readBinary', 'readBinary');\nlegacyModuleProp('setWindowTitle', 'setWindowTitle');\nvar IDBFS = 'IDBFS is no longer included by default; build with -lidbfs.js';\nvar PROXYFS = 'PROXYFS is no longer included by default; build with -lproxyfs.js';\nvar WORKERFS = 'WORKERFS is no longer included by default; build with -lworkerfs.js';\nvar NODEFS = 'NODEFS is no longer included by default; build with -lnodefs.js';\nassert(!ENVIRONMENT_IS_SHELL, \"shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable.\");\n\n// end include: shell.js\n// include: preamble.js\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\nvar wasmBinary;\nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\nlegacyModuleProp('wasmBinary', 'wasmBinary');\nvar noExitRuntime = Module['noExitRuntime'] || true;\nlegacyModuleProp('noExitRuntime', 'noExitRuntime');\nif (typeof WebAssembly != 'object') {\n  abort('no native wasm support detected');\n}\n\n// Wasm globals\n\nvar wasmMemory;\n\n//========================================\n// Runtime essentials\n//========================================\n\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS;\n\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    abort('Assertion failed' + (text ? ': ' + text : ''));\n  }\n}\n\n// We used to include malloc/free by default in the past. Show a helpful error in\n// builds with assertions.\nfunction _malloc() {\n  abort(\"malloc() called but not included in the build - add '_malloc' to EXPORTED_FUNCTIONS\");\n}\nfunction _free() {\n  // Show a helpful error since we used to include free by default in the past.\n  abort(\"free() called but not included in the build - add '_free' to EXPORTED_FUNCTIONS\");\n}\n\n// Memory management\n\nvar HEAP, /** @type {!Int8Array} */\n  HEAP8, /** @type {!Uint8Array} */\n  HEAPU8, /** @type {!Int16Array} */\n  HEAP16, /** @type {!Uint16Array} */\n  HEAPU16, /** @type {!Int32Array} */\n  HEAP32, /** @type {!Uint32Array} */\n  HEAPU32, /** @type {!Float32Array} */\n  HEAPF32, /** @type {!Float64Array} */\n  HEAPF64;\nfunction updateMemoryViews() {\n  var b = wasmMemory.buffer;\n  Module['HEAP8'] = HEAP8 = new Int8Array(b);\n  Module['HEAP16'] = HEAP16 = new Int16Array(b);\n  Module['HEAP32'] = HEAP32 = new Int32Array(b);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n}\nassert(!Module['STACK_SIZE'], 'STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time');\nassert(typeof Int32Array != 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined, 'JS engine does not provide full typed array support');\n\n// If memory is defined in wasm, the user can't provide it, or set INITIAL_MEMORY\nassert(!Module['wasmMemory'], 'Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally');\nassert(!Module['INITIAL_MEMORY'], 'Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically');\n\n// include: runtime_init_table.js\n// In regular non-RELOCATABLE mode the table is exported\n// from the wasm module and this will be assigned once\n// the exports are available.\nvar wasmTable;\n\n// end include: runtime_init_table.js\n// include: runtime_stack_check.js\n// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\nfunction writeStackCookie() {\n  var max = _emscripten_stack_get_end();\n  assert((max & 3) == 0);\n  // If the stack ends at address zero we write our cookies 4 bytes into the\n  // stack.  This prevents interference with the (separate) address-zero check\n  // below.\n  if (max == 0) {\n    max += 4;\n  }\n  // The stack grow downwards towards _emscripten_stack_get_end.\n  // We write cookies to the final two words in the stack and detect if they are\n  // ever overwritten.\n  HEAPU32[max >> 2] = 0x02135467;\n  HEAPU32[max + 4 >> 2] = 0x89BACDFE;\n  // Also test the global address 0 for integrity.\n  HEAPU32[0] = 0x63736d65; /* 'emsc' */\n}\n\nfunction checkStackCookie() {\n  if (ABORT) return;\n  var max = _emscripten_stack_get_end();\n  // See writeStackCookie().\n  if (max == 0) {\n    max += 4;\n  }\n  var cookie1 = HEAPU32[max >> 2];\n  var cookie2 = HEAPU32[max + 4 >> 2];\n  if (cookie1 != 0x02135467 || cookie2 != 0x89BACDFE) {\n    abort('Stack overflow! Stack cookie has been overwritten at ' + ptrToString(max) + ', expected hex dwords 0x89BACDFE and 0x2135467, but received ' + ptrToString(cookie2) + ' ' + ptrToString(cookie1));\n  }\n  // Also test the global address 0 for integrity.\n  if (HEAPU32[0] !== 0x63736d65 /* 'emsc' */) {\n    abort('Runtime error: The application has corrupted its heap memory area (address zero)!');\n  }\n}\n\n// end include: runtime_stack_check.js\n// include: runtime_assertions.js\n// Endianness check\n(function () {\n  var h16 = new Int16Array(1);\n  var h8 = new Int8Array(h16.buffer);\n  h16[0] = 0x6373;\n  if (h8[0] !== 0x73 || h8[1] !== 0x63) throw 'Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)';\n})();\n\n// end include: runtime_assertions.js\nvar __ATPRERUN__ = []; // functions called before the runtime is initialized\nvar __ATINIT__ = []; // functions called during startup\nvar __ATEXIT__ = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\n\nvar runtimeInitialized = false;\nvar runtimeKeepaliveCounter = 0;\nfunction keepRuntimeAlive() {\n  return noExitRuntime || runtimeKeepaliveCounter > 0;\n}\nfunction preRun() {\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPRERUN__);\n}\nfunction initRuntime() {\n  assert(!runtimeInitialized);\n  runtimeInitialized = true;\n  checkStackCookie();\n  callRuntimeCallbacks(__ATINIT__);\n}\nfunction postRun() {\n  checkStackCookie();\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\nfunction addOnExit(cb) {}\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\n\n// include: runtime_math.js\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\n\nassert(Math.imul, 'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.fround, 'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.clz32, 'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.trunc, 'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\n\n// end include: runtime_math.js\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\nvar runDependencyTracking = {};\nfunction getUniqueRunDependency(id) {\n  var orig = id;\n  while (1) {\n    if (!runDependencyTracking[id]) return id;\n    id = orig + Math.random();\n  }\n}\nfunction addRunDependency(id) {\n  runDependencies++;\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n  if (id) {\n    assert(!runDependencyTracking[id]);\n    runDependencyTracking[id] = 1;\n    if (runDependencyWatcher === null && typeof setInterval != 'undefined') {\n      // Check for missing dependencies every few seconds\n      runDependencyWatcher = setInterval(function () {\n        if (ABORT) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n          return;\n        }\n        var shown = false;\n        for (var dep in runDependencyTracking) {\n          if (!shown) {\n            shown = true;\n            err('still waiting on run dependencies:');\n          }\n          err('dependency: ' + dep);\n        }\n        if (shown) {\n          err('(end of list)');\n        }\n      }, 10000);\n    }\n  } else {\n    err('warning: run dependency added without ID');\n  }\n}\nfunction removeRunDependency(id) {\n  runDependencies--;\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n  if (id) {\n    assert(runDependencyTracking[id]);\n    delete runDependencyTracking[id];\n  } else {\n    err('warning: run dependency removed without ID');\n  }\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\n\n/** @param {string|number=} what */\nfunction abort(what) {\n  if (Module['onAbort']) {\n    Module['onAbort'](what);\n  }\n  what = 'Aborted(' + what + ')';\n  // TODO(sbc): Should we remove printing and leave it up to whoever\n  // catches the exception?\n  err(what);\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\n  // exception, which means we'd run destructors on it. We need the error to\n  // simply make the program stop.\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\n  // a trap or not based on a hidden field within the object. So at the moment\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\n  // allows this in the wasm spec.\n\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\n  // defintion for WebAssembly.RuntimeError claims it takes no arguments even\n  // though it can.\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\n  /** @suppress {checkTypes} */\n  var e = new WebAssembly.RuntimeError(what);\n\n  // Throw the error whether or not MODULARIZE is set because abort is used\n  // in code paths apart from instantiation where an exception is expected\n  // to be thrown when abort is called.\n  throw e;\n}\n\n// include: memoryprofiler.js\n// end include: memoryprofiler.js\n// show errors on likely calls to FS when it was not included\nvar FS = {\n  error: function () {\n    abort('Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with -sFORCE_FILESYSTEM');\n  },\n  init: function () {\n    FS.error();\n  },\n  createDataFile: function () {\n    FS.error();\n  },\n  createPreloadedFile: function () {\n    FS.error();\n  },\n  createLazyFile: function () {\n    FS.error();\n  },\n  open: function () {\n    FS.error();\n  },\n  mkdev: function () {\n    FS.error();\n  },\n  registerDevice: function () {\n    FS.error();\n  },\n  analyzePath: function () {\n    FS.error();\n  },\n  ErrnoError: function ErrnoError() {\n    FS.error();\n  }\n};\nModule['FS_createDataFile'] = FS.createDataFile;\nModule['FS_createPreloadedFile'] = FS.createPreloadedFile;\n\n// include: URIUtils.js\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\n\n// Indicates whether filename is a base64 data URI.\nfunction isDataURI(filename) {\n  // Prefix of data URIs emitted by SINGLE_FILE and related options.\n  return filename.startsWith(dataURIPrefix);\n}\n\n// Indicates whether filename is delivered via file protocol (as opposed to http/https)\nfunction isFileURI(filename) {\n  return filename.startsWith('file://');\n}\n\n// end include: URIUtils.js\n/** @param {boolean=} fixedasm */\nfunction createExportWrapper(name, fixedasm) {\n  return function () {\n    var displayName = name;\n    var asm = fixedasm;\n    if (!fixedasm) {\n      asm = Module['asm'];\n    }\n    assert(runtimeInitialized, 'native function `' + displayName + '` called before runtime initialization');\n    if (!asm[name]) {\n      assert(asm[name], 'exported native function `' + displayName + '` not found');\n    }\n    return asm[name].apply(null, arguments);\n  };\n}\n\n// include: runtime_exceptions.js\n// end include: runtime_exceptions.js\nvar wasmBinaryFile;\nwasmBinaryFile = 'add.wasm';\nif (!isDataURI(wasmBinaryFile)) {\n  wasmBinaryFile = locateFile(wasmBinaryFile);\n}\nfunction getBinary(file) {\n  try {\n    if (file == wasmBinaryFile && wasmBinary) {\n      return new Uint8Array(wasmBinary);\n    }\n    if (readBinary) {\n      return readBinary(file);\n    }\n    throw \"both async and sync fetching of the wasm failed\";\n  } catch (err) {\n    abort(err);\n  }\n}\nfunction getBinaryPromise(binaryFile) {\n  // If we don't have the binary yet, try to load it asynchronously.\n  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\n  // See https://github.com/github/fetch/pull/92#issuecomment-140665932\n  // Cordova or Electron apps are typically loaded from a file:// url.\n  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\n  if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n    if (typeof fetch == 'function' && !isFileURI(binaryFile)) {\n      return fetch(binaryFile, {\n        credentials: 'same-origin'\n      }).then(function (response) {\n        if (!response['ok']) {\n          throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\n        }\n        return response['arrayBuffer']();\n      }).catch(function () {\n        return getBinary(binaryFile);\n      });\n    } else {\n      if (readAsync) {\n        // fetch is not available or url is file => try XHR (readAsync uses XHR internally)\n        return new Promise(function (resolve, reject) {\n          readAsync(binaryFile, function (response) {\n            resolve(new Uint8Array( /** @type{!ArrayBuffer} */response));\n          }, reject);\n        });\n      }\n    }\n  }\n\n  // Otherwise, getBinary should be able to get it synchronously\n  return Promise.resolve().then(function () {\n    return getBinary(binaryFile);\n  });\n}\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\n  return getBinaryPromise(binaryFile).then(function (binary) {\n    return WebAssembly.instantiate(binary, imports);\n  }).then(function (instance) {\n    return instance;\n  }).then(receiver, function (reason) {\n    err('failed to asynchronously prepare wasm: ' + reason);\n\n    // Warn on some common problems.\n    if (isFileURI(wasmBinaryFile)) {\n      err('warning: Loading from a file URI (' + wasmBinaryFile + ') is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing');\n    }\n    abort(reason);\n  });\n}\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\n  if (!binary && typeof WebAssembly.instantiateStreaming == 'function' && !isDataURI(binaryFile) &&\n  // Don't use streaming for file:// delivered objects in a webview, fetch them synchronously.\n  !isFileURI(binaryFile) &&\n  // Avoid instantiateStreaming() on Node.js environment for now, as while\n  // Node.js v18.1.0 implements it, it does not have a full fetch()\n  // implementation yet.\n  //\n  // Reference:\n  //   https://github.com/emscripten-core/emscripten/pull/16917\n  !ENVIRONMENT_IS_NODE && typeof fetch == 'function') {\n    return fetch(binaryFile, {\n      credentials: 'same-origin'\n    }).then(function (response) {\n      // Suppress closure warning here since the upstream definition for\n      // instantiateStreaming only allows Promise<Repsponse> rather than\n      // an actual Response.\n      // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\n      /** @suppress {checkTypes} */\n      var result = WebAssembly.instantiateStreaming(response, imports);\n      return result.then(callback, function (reason) {\n        // We expect the most common failure cause to be a bad MIME type for the binary,\n        // in which case falling back to ArrayBuffer instantiation should work.\n        err('wasm streaming compile failed: ' + reason);\n        err('falling back to ArrayBuffer instantiation');\n        return instantiateArrayBuffer(binaryFile, imports, callback);\n      });\n    });\n  } else {\n    return instantiateArrayBuffer(binaryFile, imports, callback);\n  }\n}\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nfunction createWasm() {\n  // prepare imports\n  var info = {\n    'env': wasmImports,\n    'wasi_snapshot_preview1': wasmImports\n  };\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  /** @param {WebAssembly.Module=} module*/\n  function receiveInstance(instance, module) {\n    var exports = instance.exports;\n    Module['asm'] = exports;\n    wasmMemory = Module['asm']['memory'];\n    assert(wasmMemory, \"memory not found in wasm exports\");\n    // This assertion doesn't hold when emscripten is run in --post-link\n    // mode.\n    // TODO(sbc): Read INITIAL_MEMORY out of the wasm file in post-link mode.\n    //assert(wasmMemory.buffer.byteLength === 16777216);\n    updateMemoryViews();\n    wasmTable = Module['asm']['__indirect_function_table'];\n    assert(wasmTable, \"table not found in wasm exports\");\n    addOnInit(Module['asm']['__wasm_call_ctors']);\n    removeRunDependency('wasm-instantiate');\n    return exports;\n  }\n  // wait for the pthread pool (if any)\n  addRunDependency('wasm-instantiate');\n\n  // Prefer streaming instantiation if available.\n  // Async compilation can be confusing when an error on the page overwrites Module\n  // (for example, if the order of elements is wrong, and the one defining Module is\n  // later), so we save Module and check it later.\n  var trueModule = Module;\n  function receiveInstantiationResult(result) {\n    // 'result' is a ResultObject object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n    assert(Module === trueModule, 'the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?');\n    trueModule = null;\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n    // When the regression is fixed, can restore the above PTHREADS-enabled path.\n    receiveInstance(result['instance']);\n  }\n\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n  // to manually instantiate the Wasm module themselves. This allows pages to\n  // run the instantiation parallel to any other async startup actions they are\n  // performing.\n  // Also pthreads and wasm workers initialize the wasm instance through this\n  // path.\n  if (Module['instantiateWasm']) {\n    try {\n      return Module['instantiateWasm'](info, receiveInstance);\n    } catch (e) {\n      err('Module.instantiateWasm callback failed with error: ' + e);\n      return false;\n    }\n  }\n  instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult);\n  return {}; // no exports yet; we'll fill them in later\n}\n\n// Globals used by JS i64 conversions (see makeSetValue)\nvar tempDouble;\nvar tempI64;\n\n// include: runtime_debug.js\nfunction legacyModuleProp(prop, newName) {\n  if (!Object.getOwnPropertyDescriptor(Module, prop)) {\n    Object.defineProperty(Module, prop, {\n      configurable: true,\n      get: function () {\n        abort('Module.' + prop + ' has been replaced with plain ' + newName + ' (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)');\n      }\n    });\n  }\n}\nfunction ignoredModuleProp(prop) {\n  if (Object.getOwnPropertyDescriptor(Module, prop)) {\n    abort('`Module.' + prop + '` was supplied but `' + prop + '` not included in INCOMING_MODULE_JS_API');\n  }\n}\n\n// forcing the filesystem exports a few things by default\nfunction isExportedByForceFilesystem(name) {\n  return name === 'FS_createPath' || name === 'FS_createDataFile' || name === 'FS_createPreloadedFile' || name === 'FS_unlink' || name === 'addRunDependency' ||\n  // The old FS has some functionality that WasmFS lacks.\n  name === 'FS_createLazyFile' || name === 'FS_createDevice' || name === 'removeRunDependency';\n}\nfunction missingGlobal(sym, msg) {\n  if (typeof globalThis !== 'undefined') {\n    Object.defineProperty(globalThis, sym, {\n      configurable: true,\n      get: function () {\n        warnOnce('`' + sym + '` is not longer defined by emscripten. ' + msg);\n        return undefined;\n      }\n    });\n  }\n}\nmissingGlobal('buffer', 'Please use HEAP8.buffer or wasmMemory.buffer');\nfunction missingLibrarySymbol(sym) {\n  if (typeof globalThis !== 'undefined' && !Object.getOwnPropertyDescriptor(globalThis, sym)) {\n    Object.defineProperty(globalThis, sym, {\n      configurable: true,\n      get: function () {\n        // Can't `abort()` here because it would break code that does runtime\n        // checks.  e.g. `if (typeof SDL === 'undefined')`.\n        var msg = '`' + sym + '` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line';\n        // DEFAULT_LIBRARY_FUNCS_TO_INCLUDE requires the name as it appears in\n        // library.js, which means $name for a JS name with no prefix, or name\n        // for a JS name like _name.\n        var librarySymbol = sym;\n        if (!librarySymbol.startsWith('_')) {\n          librarySymbol = '$' + sym;\n        }\n        msg += \" (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE=\" + librarySymbol + \")\";\n        if (isExportedByForceFilesystem(sym)) {\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n        }\n        warnOnce(msg);\n        return undefined;\n      }\n    });\n  }\n  // Any symbol that is not included from the JS libary is also (by definition)\n  // not exported on the Module object.\n  unexportedRuntimeSymbol(sym);\n}\nfunction unexportedRuntimeSymbol(sym) {\n  if (!Object.getOwnPropertyDescriptor(Module, sym)) {\n    Object.defineProperty(Module, sym, {\n      configurable: true,\n      get: function () {\n        var msg = \"'\" + sym + \"' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\";\n        if (isExportedByForceFilesystem(sym)) {\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n        }\n        abort(msg);\n      }\n    });\n  }\n}\n\n// Used by XXXXX_DEBUG settings to output debug messages.\nfunction dbg(text) {\n  // TODO(sbc): Make this configurable somehow.  Its not always convenient for\n  // logging to show up as errors.\n  console.error(text);\n}\n\n// end include: runtime_debug.js\n// === Body ===\n\n// end include: preamble.js\n\n/** @constructor */\nfunction ExitStatus(status) {\n  this.name = 'ExitStatus';\n  this.message = 'Program terminated with exit(' + status + ')';\n  this.status = status;\n}\n_c = ExitStatus;\nfunction callRuntimeCallbacks(callbacks) {\n  while (callbacks.length > 0) {\n    // Pass the module as the first argument.\n    callbacks.shift()(Module);\n  }\n}\n\n/**\n * @param {number} ptr\n * @param {string} type\n */\nfunction getValue(ptr) {\n  let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'i8';\n  if (type.endsWith('*')) type = '*';\n  switch (type) {\n    case 'i1':\n      return HEAP8[ptr >> 0];\n    case 'i8':\n      return HEAP8[ptr >> 0];\n    case 'i16':\n      return HEAP16[ptr >> 1];\n    case 'i32':\n      return HEAP32[ptr >> 2];\n    case 'i64':\n      return HEAP32[ptr >> 2];\n    case 'float':\n      return HEAPF32[ptr >> 2];\n    case 'double':\n      return HEAPF64[ptr >> 3];\n    case '*':\n      return HEAPU32[ptr >> 2];\n    default:\n      abort('invalid type for getValue: ' + type);\n  }\n}\nfunction ptrToString(ptr) {\n  assert(typeof ptr === 'number');\n  return '0x' + ptr.toString(16).padStart(8, '0');\n}\n\n/**\n * @param {number} ptr\n * @param {number} value\n * @param {string} type\n */\nfunction setValue(ptr, value) {\n  let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'i8';\n  if (type.endsWith('*')) type = '*';\n  switch (type) {\n    case 'i1':\n      HEAP8[ptr >> 0] = value;\n      break;\n    case 'i8':\n      HEAP8[ptr >> 0] = value;\n      break;\n    case 'i16':\n      HEAP16[ptr >> 1] = value;\n      break;\n    case 'i32':\n      HEAP32[ptr >> 2] = value;\n      break;\n    case 'i64':\n      tempI64 = [value >>> 0, (tempDouble = value, +Math.abs(tempDouble) >= 1.0 ? tempDouble > 0.0 ? (Math.min(+Math.floor(tempDouble / 4294967296.0), 4294967295.0) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0) >>> 0 : 0)], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];\n      break;\n    case 'float':\n      HEAPF32[ptr >> 2] = value;\n      break;\n    case 'double':\n      HEAPF64[ptr >> 3] = value;\n      break;\n    case '*':\n      HEAPU32[ptr >> 2] = value;\n      break;\n    default:\n      abort('invalid type for setValue: ' + type);\n  }\n}\nfunction warnOnce(text) {\n  if (!warnOnce.shown) warnOnce.shown = {};\n  if (!warnOnce.shown[text]) {\n    warnOnce.shown[text] = 1;\n    if (ENVIRONMENT_IS_NODE) text = 'warning: ' + text;\n    err(text);\n  }\n}\nfunction checkIncomingModuleAPI() {\n  ignoredModuleProp('fetchSettings');\n}\nvar wasmImports = {};\nvar asm = createWasm();\n/** @type {function(...*):?} */\nvar ___wasm_call_ctors = createExportWrapper(\"__wasm_call_ctors\");\n/** @type {function(...*):?} */\nvar ___errno_location = createExportWrapper(\"__errno_location\");\n/** @type {function(...*):?} */\nvar _fflush = Module[\"_fflush\"] = createExportWrapper(\"fflush\");\n/** @type {function(...*):?} */\nvar _emscripten_stack_init = function () {\n  return (_emscripten_stack_init = Module[\"asm\"][\"emscripten_stack_init\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_free = function () {\n  return (_emscripten_stack_get_free = Module[\"asm\"][\"emscripten_stack_get_free\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_base = function () {\n  return (_emscripten_stack_get_base = Module[\"asm\"][\"emscripten_stack_get_base\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_end = function () {\n  return (_emscripten_stack_get_end = Module[\"asm\"][\"emscripten_stack_get_end\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar stackSave = createExportWrapper(\"stackSave\");\n/** @type {function(...*):?} */\nvar stackRestore = createExportWrapper(\"stackRestore\");\n/** @type {function(...*):?} */\nvar stackAlloc = createExportWrapper(\"stackAlloc\");\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_current = function () {\n  return (_emscripten_stack_get_current = Module[\"asm\"][\"emscripten_stack_get_current\"]).apply(null, arguments);\n};\n\n// include: postamble.js\n// === Auto-generated postamble setup entry stuff ===\n\nvar missingLibrarySymbols = ['zeroMemory', 'exitJS', 'getHeapMax', 'abortOnCannotGrowMemory', 'emscripten_realloc_buffer', 'isLeapYear', 'ydayFromDate', 'arraySum', 'addDays', 'setErrNo', 'inetPton4', 'inetNtop4', 'inetPton6', 'inetNtop6', 'readSockaddr', 'writeSockaddr', 'getHostByName', 'initRandomFill', 'randomFill', 'traverseStack', 'getCallstack', 'emscriptenLog', 'convertPCtoSourceLocation', 'readEmAsmArgs', 'jstoi_q', 'jstoi_s', 'getExecutableName', 'listenOnce', 'autoResumeAudioContext', 'dynCallLegacy', 'getDynCaller', 'dynCall', 'handleException', 'runtimeKeepalivePush', 'runtimeKeepalivePop', 'callUserCallback', 'maybeExit', 'safeSetTimeout', 'asmjsMangle', 'asyncLoad', 'alignMemory', 'mmapAlloc', 'HandleAllocator', 'getNativeTypeSize', 'STACK_SIZE', 'STACK_ALIGN', 'POINTER_SIZE', 'ASSERTIONS', 'writeI53ToI64', 'writeI53ToI64Clamped', 'writeI53ToI64Signaling', 'writeI53ToU64Clamped', 'writeI53ToU64Signaling', 'readI53FromI64', 'readI53FromU64', 'convertI32PairToI53', 'convertI32PairToI53Checked', 'convertU32PairToI53', 'getCFunc', 'ccall', 'cwrap', 'uleb128Encode', 'sigToWasmTypes', 'generateFuncType', 'convertJsFunctionToWasm', 'getEmptyTableSlot', 'updateTableMap', 'getFunctionAddress', 'addFunction', 'removeFunction', 'reallyNegative', 'unSign', 'strLen', 'reSign', 'formatString', 'UTF8ArrayToString', 'UTF8ToString', 'stringToUTF8Array', 'stringToUTF8', 'lengthBytesUTF8', 'intArrayFromString', 'intArrayToString', 'AsciiToString', 'stringToAscii', 'UTF16ToString', 'stringToUTF16', 'lengthBytesUTF16', 'UTF32ToString', 'stringToUTF32', 'lengthBytesUTF32', 'stringToNewUTF8', 'stringToUTF8OnStack', 'writeArrayToMemory', 'getSocketFromFD', 'getSocketAddress', 'registerKeyEventCallback', 'maybeCStringToJsString', 'findEventTarget', 'findCanvasEventTarget', 'getBoundingClientRect', 'fillMouseEventData', 'registerMouseEventCallback', 'registerWheelEventCallback', 'registerUiEventCallback', 'registerFocusEventCallback', 'fillDeviceOrientationEventData', 'registerDeviceOrientationEventCallback', 'fillDeviceMotionEventData', 'registerDeviceMotionEventCallback', 'screenOrientation', 'fillOrientationChangeEventData', 'registerOrientationChangeEventCallback', 'fillFullscreenChangeEventData', 'registerFullscreenChangeEventCallback', 'JSEvents_requestFullscreen', 'JSEvents_resizeCanvasForFullscreen', 'registerRestoreOldStyle', 'hideEverythingExceptGivenElement', 'restoreHiddenElements', 'setLetterbox', 'softFullscreenResizeWebGLRenderTarget', 'doRequestFullscreen', 'fillPointerlockChangeEventData', 'registerPointerlockChangeEventCallback', 'registerPointerlockErrorEventCallback', 'requestPointerLock', 'fillVisibilityChangeEventData', 'registerVisibilityChangeEventCallback', 'registerTouchEventCallback', 'fillGamepadEventData', 'registerGamepadEventCallback', 'registerBeforeUnloadEventCallback', 'fillBatteryEventData', 'battery', 'registerBatteryEventCallback', 'setCanvasElementSize', 'getCanvasElementSize', 'demangle', 'demangleAll', 'jsStackTrace', 'stackTrace', 'getEnvStrings', 'checkWasiClock', 'flush_NO_FILESYSTEM', 'wasiRightsToMuslOFlags', 'wasiOFlagsToMuslOFlags', 'createDyncallWrapper', 'setImmediateWrapped', 'clearImmediateWrapped', 'polyfillSetImmediate', 'getPromise', 'makePromise', 'makePromiseCallback', 'ExceptionInfo', 'exception_addRef', 'exception_decRef', 'setMainLoop', '_setNetworkCallback', 'heapObjectForWebGLType', 'heapAccessShiftForWebGLHeap', 'webgl_enable_ANGLE_instanced_arrays', 'webgl_enable_OES_vertex_array_object', 'webgl_enable_WEBGL_draw_buffers', 'webgl_enable_WEBGL_multi_draw', 'emscriptenWebGLGet', 'computeUnpackAlignedImageSize', 'colorChannelsInGlTextureFormat', 'emscriptenWebGLGetTexPixelData', '__glGenObject', 'emscriptenWebGLGetUniform', 'webglGetUniformLocation', 'webglPrepareUniformLocationsBeforeFirstUse', 'webglGetLeftBracePos', 'emscriptenWebGLGetVertexAttrib', '__glGetActiveAttribOrUniform', 'writeGLArray', 'registerWebGlEventCallback', 'runAndAbortIfError', 'SDL_unicode', 'SDL_ttfContext', 'SDL_audio', 'GLFW_Window', 'ALLOC_NORMAL', 'ALLOC_STACK', 'allocate', 'writeStringToMemory', 'writeAsciiToMemory'];\nmissingLibrarySymbols.forEach(missingLibrarySymbol);\nvar unexportedSymbols = ['run', 'addOnPreRun', 'addOnInit', 'addOnPreMain', 'addOnExit', 'addOnPostRun', 'addRunDependency', 'removeRunDependency', 'FS_createFolder', 'FS_createPath', 'FS_createDataFile', 'FS_createPreloadedFile', 'FS_createLazyFile', 'FS_createLink', 'FS_createDevice', 'FS_unlink', 'out', 'err', 'callMain', 'abort', 'keepRuntimeAlive', 'wasmMemory', 'stackAlloc', 'stackSave', 'stackRestore', 'getTempRet0', 'setTempRet0', 'writeStackCookie', 'checkStackCookie', 'ptrToString', 'ENV', 'MONTH_DAYS_REGULAR', 'MONTH_DAYS_LEAP', 'MONTH_DAYS_REGULAR_CUMULATIVE', 'MONTH_DAYS_LEAP_CUMULATIVE', 'ERRNO_CODES', 'ERRNO_MESSAGES', 'DNS', 'Protocols', 'Sockets', 'timers', 'warnOnce', 'UNWIND_CACHE', 'readEmAsmArgsArray', 'freeTableIndexes', 'functionsInTableMap', 'setValue', 'getValue', 'PATH', 'PATH_FS', 'UTF8Decoder', 'UTF16Decoder', 'SYSCALLS', 'JSEvents', 'specialHTMLTargets', 'currentFullscreenStrategy', 'restoreOldWindowedStyle', 'ExitStatus', 'dlopenMissingError', 'promiseMap', 'uncaughtExceptionCount', 'exceptionLast', 'exceptionCaught', 'Browser', 'wget', 'FS', 'MEMFS', 'TTY', 'PIPEFS', 'SOCKFS', 'tempFixedLengthArray', 'miniTempWebGLFloatBuffers', 'miniTempWebGLIntBuffers', 'GL', 'emscripten_webgl_power_preferences', 'AL', 'GLUT', 'EGL', 'GLEW', 'IDBStore', 'SDL', 'SDL_gfx', 'GLFW', 'allocateUTF8', 'allocateUTF8OnStack'];\nunexportedSymbols.forEach(unexportedRuntimeSymbol);\nvar calledRun;\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!calledRun) run();\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n};\n\nfunction stackCheckInit() {\n  // This is normally called automatically during __wasm_call_ctors but need to\n  // get these values before even running any of the ctors so we call it redundantly\n  // here.\n  _emscripten_stack_init();\n  // TODO(sbc): Move writeStackCookie to native to to avoid this.\n  writeStackCookie();\n}\nfunction run() {\n  if (runDependencies > 0) {\n    return;\n  }\n  stackCheckInit();\n  preRun();\n\n  // a preRun added a dependency, run will be called later\n  if (runDependencies > 0) {\n    return;\n  }\n  function doRun() {\n    // run may have just been called through dependencies being fulfilled just in this very frame,\n    // or while the async setStatus time below was happening\n    if (calledRun) return;\n    calledRun = true;\n    Module['calledRun'] = true;\n    if (ABORT) return;\n    initRuntime();\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n    assert(!Module['_main'], 'compiled without a main, but one is present. if you added it from JS, use Module[\"onRuntimeInitialized\"]');\n    postRun();\n  }\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function () {\n      setTimeout(function () {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else {\n    doRun();\n  }\n  checkStackCookie();\n}\nfunction checkUnflushedContent() {\n  // Compiler settings do not allow exiting the runtime, so flushing\n  // the streams is not possible. but in ASSERTIONS mode we check\n  // if there was something to flush, and if so tell the user they\n  // should request that the runtime be exitable.\n  // Normally we would not even include flush() at all, but in ASSERTIONS\n  // builds we do so just for this check, and here we see if there is any\n  // content to flush, that is, we check if there would have been\n  // something a non-ASSERTIONS build would have not seen.\n  // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0\n  // mode (which has its own special function for this; otherwise, all\n  // the code is inside libc)\n  var oldOut = out;\n  var oldErr = err;\n  var has = false;\n  out = err = x => {\n    has = true;\n  };\n  try {\n    // it doesn't matter if it fails\n    _fflush(0);\n  } catch (e) {}\n  out = oldOut;\n  err = oldErr;\n  if (has) {\n    warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.');\n    warnOnce('(this may also be due to not including full filesystem support - try building with -sFORCE_FILESYSTEM)');\n  }\n}\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\nrun();\n\n// end include: postamble.js\nvar _c;\n$RefreshReg$(_c, \"ExitStatus\");","map":{"version":3,"names":["Module","moduleOverrides","Object","assign","arguments_","thisProgram","quit_","status","toThrow","ENVIRONMENT_IS_WEB","window","ENVIRONMENT_IS_WORKER","importScripts","ENVIRONMENT_IS_NODE","process","versions","node","ENVIRONMENT_IS_SHELL","Error","scriptDirectory","locateFile","path","read_","readAsync","readBinary","setWindowTitle","release","name","nodeVersion","numericVersion","split","slice","minVersion","fs","require","nodePath","dirname","__dirname","filename","binary","isFileURI","URL","normalize","readFileSync","undefined","ret","buffer","Uint8Array","assert","onload","onerror","readFile","err","data","argv","length","replace","module","on","ex","ExitStatus","context","nodeMajor","reason","exitCode","read","shell_read","f","readbuffer","setTimeout","clearTimeout","globalThis","id","scriptArgs","arguments","quit","toLog","stack","print","console","log","warn","error","printErr","self","location","href","document","currentScript","src","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","title","out","bind","checkIncomingModuleAPI","legacyModuleProp","IDBFS","PROXYFS","WORKERFS","NODEFS","wasmBinary","noExitRuntime","WebAssembly","abort","wasmMemory","ABORT","EXITSTATUS","condition","text","_malloc","_free","HEAP","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","updateMemoryViews","b","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","prototype","subarray","set","wasmTable","writeStackCookie","max","_emscripten_stack_get_end","checkStackCookie","cookie1","cookie2","ptrToString","h16","h8","__ATPRERUN__","__ATINIT__","__ATEXIT__","__ATPOSTRUN__","runtimeInitialized","runtimeKeepaliveCounter","keepRuntimeAlive","preRun","addOnPreRun","shift","callRuntimeCallbacks","initRuntime","postRun","addOnPostRun","cb","unshift","addOnInit","addOnExit","Math","imul","fround","clz32","trunc","runDependencies","runDependencyWatcher","dependenciesFulfilled","runDependencyTracking","getUniqueRunDependency","orig","random","addRunDependency","setInterval","clearInterval","shown","dep","removeRunDependency","callback","what","e","RuntimeError","FS","init","createDataFile","createPreloadedFile","createLazyFile","mkdev","registerDevice","analyzePath","ErrnoError","dataURIPrefix","isDataURI","startsWith","createExportWrapper","fixedasm","displayName","asm","apply","wasmBinaryFile","getBinary","file","getBinaryPromise","binaryFile","fetch","credentials","then","catch","Promise","resolve","reject","instantiateArrayBuffer","imports","receiver","instantiate","instance","instantiateAsync","instantiateStreaming","result","createWasm","info","wasmImports","receiveInstance","exports","trueModule","receiveInstantiationResult","tempDouble","tempI64","prop","newName","getOwnPropertyDescriptor","defineProperty","configurable","get","ignoredModuleProp","isExportedByForceFilesystem","missingGlobal","sym","msg","warnOnce","missingLibrarySymbol","librarySymbol","unexportedRuntimeSymbol","dbg","message","_c","callbacks","getValue","ptr","type","endsWith","toString","padStart","setValue","value","abs","min","floor","ceil","___wasm_call_ctors","___errno_location","_fflush","_emscripten_stack_init","_emscripten_stack_get_free","_emscripten_stack_get_base","stackSave","stackRestore","stackAlloc","_emscripten_stack_get_current","missingLibrarySymbols","forEach","unexportedSymbols","calledRun","runCaller","run","stackCheckInit","doRun","checkUnflushedContent","oldOut","oldErr","has","x","pop","$RefreshReg$"],"sources":["/Users/alexclevenger/lehighnumericalanalysis.com/src/pages/demo/add.js"],"sourcesContent":["// include: shell.js\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = typeof Module != 'undefined' ? Module : {};\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n\n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = Object.assign({}, Module);\n\nvar arguments_ = [];\nvar thisProgram = './this.program';\nvar quit_ = (status, toThrow) => {\n  throw toThrow;\n};\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n\n// Attempt to auto-detect the environment\nvar ENVIRONMENT_IS_WEB = typeof window == 'object';\nvar ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';\n// N.b. Electron.js environment is simultaneously a NODE-environment, but\n// also a web environment.\nvar ENVIRONMENT_IS_NODE = typeof process == 'object' && typeof process.versions == 'object' && typeof process.versions.node == 'string';\nvar ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\nif (Module['ENVIRONMENT']) {\n  throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)');\n}\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = '';\nfunction locateFile(path) {\n  if (Module['locateFile']) {\n    return Module['locateFile'](path, scriptDirectory);\n  }\n  return scriptDirectory + path;\n}\n\n// Hooks that are implemented differently in different runtime environments.\nvar read_,\n    readAsync,\n    readBinary,\n    setWindowTitle;\n\nif (ENVIRONMENT_IS_NODE) {\n  if (typeof process == 'undefined' || !process.release || process.release.name !== 'node') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n  var nodeVersion = process.versions.node;\n  var numericVersion = nodeVersion.split('.').slice(0, 3);\n  numericVersion = (numericVersion[0] * 10000) + (numericVersion[1] * 100) + (numericVersion[2].split('-')[0] * 1);\n  var minVersion = 101900;\n  if (numericVersion < 101900) {\n    throw new Error('This emscripten-generated code requires node v10.19.19.0 (detected v' + nodeVersion + ')');\n  }\n\n  // `require()` is no-op in an ESM module, use `createRequire()` to construct\n  // the require()` function.  This is only necessary for multi-environment\n  // builds, `-sENVIRONMENT=node` emits a static import declaration instead.\n  // TODO: Swap all `require()`'s with `import()`'s?\n  // These modules will usually be used on Node.js. Load them eagerly to avoid\n  // the complexity of lazy-loading.\n  var fs = require('fs');\n  var nodePath = require('path');\n\n  if (ENVIRONMENT_IS_WORKER) {\n    scriptDirectory = nodePath.dirname(scriptDirectory) + '/';\n  } else {\n    scriptDirectory = __dirname + '/';\n  }\n\n// include: node_shell_read.js\nread_ = (filename, binary) => {\n  // We need to re-wrap `file://` strings to URLs. Normalizing isn't\n  // necessary in that case, the path should already be absolute.\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  return fs.readFileSync(filename, binary ? undefined : 'utf8');\n};\n\nreadBinary = (filename) => {\n  var ret = read_(filename, true);\n  if (!ret.buffer) {\n    ret = new Uint8Array(ret);\n  }\n  assert(ret.buffer);\n  return ret;\n};\n\nreadAsync = (filename, onload, onerror) => {\n  // See the comment in the `read_` function.\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  fs.readFile(filename, function(err, data) {\n    if (err) onerror(err);\n    else onload(data.buffer);\n  });\n};\n\n// end include: node_shell_read.js\n  if (!Module['thisProgram'] && process.argv.length > 1) {\n    thisProgram = process.argv[1].replace(/\\\\/g, '/');\n  }\n\n  arguments_ = process.argv.slice(2);\n\n  if (typeof module != 'undefined') {\n    module['exports'] = Module;\n  }\n\n  process.on('uncaughtException', function(ex) {\n    // suppress ExitStatus exceptions from showing an error\n    if (ex !== 'unwind' && !(ex instanceof ExitStatus) && !(ex.context instanceof ExitStatus)) {\n      throw ex;\n    }\n  });\n\n  // Without this older versions of node (< v15) will log unhandled rejections\n  // but return 0, which is not normally the desired behaviour.  This is\n  // not be needed with node v15 and about because it is now the default\n  // behaviour:\n  // See https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode\n  var nodeMajor = process.versions.node.split(\".\")[0];\n  if (nodeMajor < 15) {\n    process.on('unhandledRejection', function(reason) { throw reason; });\n  }\n\n  quit_ = (status, toThrow) => {\n    process.exitCode = status;\n    throw toThrow;\n  };\n\n  Module['inspect'] = function () { return '[Emscripten Module object]'; };\n\n} else\nif (ENVIRONMENT_IS_SHELL) {\n\n  if ((typeof process == 'object' && typeof require === 'function') || typeof window == 'object' || typeof importScripts == 'function') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n  if (typeof read != 'undefined') {\n    read_ = function shell_read(f) {\n      return read(f);\n    };\n  }\n\n  readBinary = function readBinary(f) {\n    let data;\n    if (typeof readbuffer == 'function') {\n      return new Uint8Array(readbuffer(f));\n    }\n    data = read(f, 'binary');\n    assert(typeof data == 'object');\n    return data;\n  };\n\n  readAsync = function readAsync(f, onload, onerror) {\n    setTimeout(() => onload(readBinary(f)), 0);\n  };\n\n  if (typeof clearTimeout == 'undefined') {\n    globalThis.clearTimeout = (id) => {};\n  }\n\n  if (typeof scriptArgs != 'undefined') {\n    arguments_ = scriptArgs;\n  } else if (typeof arguments != 'undefined') {\n    arguments_ = arguments;\n  }\n\n  if (typeof quit == 'function') {\n    quit_ = (status, toThrow) => {\n      // Unlike node which has process.exitCode, d8 has no such mechanism. So we\n      // have no way to set the exit code and then let the program exit with\n      // that code when it naturally stops running (say, when all setTimeouts\n      // have completed). For that reason, we must call `quit` - the only way to\n      // set the exit code - but quit also halts immediately.  To increase\n      // consistency with node (and the web) we schedule the actual quit call\n      // using a setTimeout to give the current stack and any exception handlers\n      // a chance to run.  This enables features such as addOnPostRun (which\n      // expected to be able to run code after main returns).\n      setTimeout(() => {\n        if (!(toThrow instanceof ExitStatus)) {\n          let toLog = toThrow;\n          if (toThrow && typeof toThrow == 'object' && toThrow.stack) {\n            toLog = [toThrow, toThrow.stack];\n          }\n          err('exiting due to exception: ' + toLog);\n        }\n        quit(status);\n      });\n      throw toThrow;\n    };\n  }\n\n  if (typeof print != 'undefined') {\n    // Prefer to use print/printErr where they exist, as they usually work better.\n    if (typeof console == 'undefined') console = /** @type{!Console} */({});\n    console.log = /** @type{!function(this:Console, ...*): undefined} */ (print);\n    console.warn = console.error = /** @type{!function(this:Console, ...*): undefined} */ (typeof printErr != 'undefined' ? printErr : print);\n  }\n\n} else\n\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\n// ENVIRONMENT_IS_NODE.\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\n    scriptDirectory = self.location.href;\n  } else if (typeof document != 'undefined' && document.currentScript) { // web\n    scriptDirectory = document.currentScript.src;\n  }\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n  // otherwise, slice off the final part of the url to find the script directory.\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n  // and scriptDirectory will correctly be replaced with an empty string.\n  // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\n  // they are removed because they could contain a slash.\n  if (scriptDirectory.indexOf('blob:') !== 0) {\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf('/')+1);\n  } else {\n    scriptDirectory = '';\n  }\n\n  if (!(typeof window == 'object' || typeof importScripts == 'function')) throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n  // Differentiate the Web Worker from the Node Worker case, as reading must\n  // be done differently.\n  {\n// include: web_or_worker_shell_read.js\nread_ = (url) => {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, false);\n      xhr.send(null);\n      return xhr.responseText;\n  }\n\n  if (ENVIRONMENT_IS_WORKER) {\n    readBinary = (url) => {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, false);\n        xhr.responseType = 'arraybuffer';\n        xhr.send(null);\n        return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));\n    };\n  }\n\n  readAsync = (url, onload, onerror) => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onload = () => {\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n        onload(xhr.response);\n        return;\n      }\n      onerror();\n    };\n    xhr.onerror = onerror;\n    xhr.send(null);\n  }\n\n// end include: web_or_worker_shell_read.js\n  }\n\n  setWindowTitle = (title) => document.title = title;\n} else\n{\n  throw new Error('environment detection error');\n}\n\nvar out = Module['print'] || console.log.bind(console);\nvar err = Module['printErr'] || console.warn.bind(console);\n\n// Merge back in the overrides\nObject.assign(Module, moduleOverrides);\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\nmoduleOverrides = null;\ncheckIncomingModuleAPI();\n\n// Emit code to handle expected values on the Module object. This applies Module.x\n// to the proper local x. This has two benefits: first, we only emit it if it is\n// expected to arrive, and second, by using a local everywhere else that can be\n// minified.\n\nif (Module['arguments']) arguments_ = Module['arguments'];legacyModuleProp('arguments', 'arguments_');\n\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];legacyModuleProp('thisProgram', 'thisProgram');\n\nif (Module['quit']) quit_ = Module['quit'];legacyModuleProp('quit', 'quit_');\n\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\n// Assertions on removed incoming Module JS APIs.\nassert(typeof Module['memoryInitializerPrefixURL'] == 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['pthreadMainPrefixURL'] == 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['cdInitializerPrefixURL'] == 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['filePackagePrefixURL'] == 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['read'] == 'undefined', 'Module.read option was removed (modify read_ in JS)');\nassert(typeof Module['readAsync'] == 'undefined', 'Module.readAsync option was removed (modify readAsync in JS)');\nassert(typeof Module['readBinary'] == 'undefined', 'Module.readBinary option was removed (modify readBinary in JS)');\nassert(typeof Module['setWindowTitle'] == 'undefined', 'Module.setWindowTitle option was removed (modify setWindowTitle in JS)');\nassert(typeof Module['TOTAL_MEMORY'] == 'undefined', 'Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY');\nlegacyModuleProp('read', 'read_');\nlegacyModuleProp('readAsync', 'readAsync');\nlegacyModuleProp('readBinary', 'readBinary');\nlegacyModuleProp('setWindowTitle', 'setWindowTitle');\nvar IDBFS = 'IDBFS is no longer included by default; build with -lidbfs.js';\nvar PROXYFS = 'PROXYFS is no longer included by default; build with -lproxyfs.js';\nvar WORKERFS = 'WORKERFS is no longer included by default; build with -lworkerfs.js';\nvar NODEFS = 'NODEFS is no longer included by default; build with -lnodefs.js';\n\nassert(!ENVIRONMENT_IS_SHELL, \"shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable.\");\n\n\n// end include: shell.js\n// include: preamble.js\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\nvar wasmBinary;\nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];legacyModuleProp('wasmBinary', 'wasmBinary');\nvar noExitRuntime = Module['noExitRuntime'] || true;legacyModuleProp('noExitRuntime', 'noExitRuntime');\n\nif (typeof WebAssembly != 'object') {\n  abort('no native wasm support detected');\n}\n\n// Wasm globals\n\nvar wasmMemory;\n\n//========================================\n// Runtime essentials\n//========================================\n\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS;\n\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    abort('Assertion failed' + (text ? ': ' + text : ''));\n  }\n}\n\n// We used to include malloc/free by default in the past. Show a helpful error in\n// builds with assertions.\nfunction _malloc() {\n  abort(\"malloc() called but not included in the build - add '_malloc' to EXPORTED_FUNCTIONS\");\n}\nfunction _free() {\n  // Show a helpful error since we used to include free by default in the past.\n  abort(\"free() called but not included in the build - add '_free' to EXPORTED_FUNCTIONS\");\n}\n\n// Memory management\n\nvar HEAP,\n/** @type {!Int8Array} */\n  HEAP8,\n/** @type {!Uint8Array} */\n  HEAPU8,\n/** @type {!Int16Array} */\n  HEAP16,\n/** @type {!Uint16Array} */\n  HEAPU16,\n/** @type {!Int32Array} */\n  HEAP32,\n/** @type {!Uint32Array} */\n  HEAPU32,\n/** @type {!Float32Array} */\n  HEAPF32,\n/** @type {!Float64Array} */\n  HEAPF64;\n\nfunction updateMemoryViews() {\n  var b = wasmMemory.buffer;\n  Module['HEAP8'] = HEAP8 = new Int8Array(b);\n  Module['HEAP16'] = HEAP16 = new Int16Array(b);\n  Module['HEAP32'] = HEAP32 = new Int32Array(b);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n}\n\nassert(!Module['STACK_SIZE'], 'STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time')\n\nassert(typeof Int32Array != 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined,\n       'JS engine does not provide full typed array support');\n\n// If memory is defined in wasm, the user can't provide it, or set INITIAL_MEMORY\nassert(!Module['wasmMemory'], 'Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally');\nassert(!Module['INITIAL_MEMORY'], 'Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically');\n\n// include: runtime_init_table.js\n// In regular non-RELOCATABLE mode the table is exported\n// from the wasm module and this will be assigned once\n// the exports are available.\nvar wasmTable;\n\n// end include: runtime_init_table.js\n// include: runtime_stack_check.js\n// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\nfunction writeStackCookie() {\n  var max = _emscripten_stack_get_end();\n  assert((max & 3) == 0);\n  // If the stack ends at address zero we write our cookies 4 bytes into the\n  // stack.  This prevents interference with the (separate) address-zero check\n  // below.\n  if (max == 0) {\n    max += 4;\n  }\n  // The stack grow downwards towards _emscripten_stack_get_end.\n  // We write cookies to the final two words in the stack and detect if they are\n  // ever overwritten.\n  HEAPU32[((max)>>2)] = 0x02135467;\n  HEAPU32[(((max)+(4))>>2)] = 0x89BACDFE;\n  // Also test the global address 0 for integrity.\n  HEAPU32[0] = 0x63736d65; /* 'emsc' */\n}\n\nfunction checkStackCookie() {\n  if (ABORT) return;\n  var max = _emscripten_stack_get_end();\n  // See writeStackCookie().\n  if (max == 0) {\n    max += 4;\n  }\n  var cookie1 = HEAPU32[((max)>>2)];\n  var cookie2 = HEAPU32[(((max)+(4))>>2)];\n  if (cookie1 != 0x02135467 || cookie2 != 0x89BACDFE) {\n    abort('Stack overflow! Stack cookie has been overwritten at ' + ptrToString(max) + ', expected hex dwords 0x89BACDFE and 0x2135467, but received ' + ptrToString(cookie2) + ' ' + ptrToString(cookie1));\n  }\n  // Also test the global address 0 for integrity.\n  if (HEAPU32[0] !== 0x63736d65 /* 'emsc' */) {\n    abort('Runtime error: The application has corrupted its heap memory area (address zero)!');\n  }\n}\n\n// end include: runtime_stack_check.js\n// include: runtime_assertions.js\n// Endianness check\n(function() {\n  var h16 = new Int16Array(1);\n  var h8 = new Int8Array(h16.buffer);\n  h16[0] = 0x6373;\n  if (h8[0] !== 0x73 || h8[1] !== 0x63) throw 'Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)';\n})();\n\n// end include: runtime_assertions.js\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\nvar __ATINIT__    = []; // functions called during startup\nvar __ATEXIT__    = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\n\nvar runtimeInitialized = false;\n\nvar runtimeKeepaliveCounter = 0;\n\nfunction keepRuntimeAlive() {\n  return noExitRuntime || runtimeKeepaliveCounter > 0;\n}\n\nfunction preRun() {\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n  assert(!runtimeInitialized);\n  runtimeInitialized = true;\n\n  checkStackCookie();\n\n  \n  callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction postRun() {\n  checkStackCookie();\n\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\n\nfunction addOnExit(cb) {\n}\n\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\n\n// include: runtime_math.js\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\n\nassert(Math.imul, 'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.fround, 'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.clz32, 'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.trunc, 'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\n\n// end include: runtime_math.js\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\nvar runDependencyTracking = {};\n\nfunction getUniqueRunDependency(id) {\n  var orig = id;\n  while (1) {\n    if (!runDependencyTracking[id]) return id;\n    id = orig + Math.random();\n  }\n}\n\nfunction addRunDependency(id) {\n  runDependencies++;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n  if (id) {\n    assert(!runDependencyTracking[id]);\n    runDependencyTracking[id] = 1;\n    if (runDependencyWatcher === null && typeof setInterval != 'undefined') {\n      // Check for missing dependencies every few seconds\n      runDependencyWatcher = setInterval(function() {\n        if (ABORT) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n          return;\n        }\n        var shown = false;\n        for (var dep in runDependencyTracking) {\n          if (!shown) {\n            shown = true;\n            err('still waiting on run dependencies:');\n          }\n          err('dependency: ' + dep);\n        }\n        if (shown) {\n          err('(end of list)');\n        }\n      }, 10000);\n    }\n  } else {\n    err('warning: run dependency added without ID');\n  }\n}\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n  if (id) {\n    assert(runDependencyTracking[id]);\n    delete runDependencyTracking[id];\n  } else {\n    err('warning: run dependency removed without ID');\n  }\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\n\n/** @param {string|number=} what */\nfunction abort(what) {\n  if (Module['onAbort']) {\n    Module['onAbort'](what);\n  }\n\n  what = 'Aborted(' + what + ')';\n  // TODO(sbc): Should we remove printing and leave it up to whoever\n  // catches the exception?\n  err(what);\n\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\n  // exception, which means we'd run destructors on it. We need the error to\n  // simply make the program stop.\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\n  // a trap or not based on a hidden field within the object. So at the moment\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\n  // allows this in the wasm spec.\n\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\n  // defintion for WebAssembly.RuntimeError claims it takes no arguments even\n  // though it can.\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\n  /** @suppress {checkTypes} */\n  var e = new WebAssembly.RuntimeError(what);\n\n  // Throw the error whether or not MODULARIZE is set because abort is used\n  // in code paths apart from instantiation where an exception is expected\n  // to be thrown when abort is called.\n  throw e;\n}\n\n// include: memoryprofiler.js\n// end include: memoryprofiler.js\n// show errors on likely calls to FS when it was not included\nvar FS = {\n  error: function() {\n    abort('Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with -sFORCE_FILESYSTEM');\n  },\n  init: function() { FS.error() },\n  createDataFile: function() { FS.error() },\n  createPreloadedFile: function() { FS.error() },\n  createLazyFile: function() { FS.error() },\n  open: function() { FS.error() },\n  mkdev: function() { FS.error() },\n  registerDevice: function() { FS.error() },\n  analyzePath: function() { FS.error() },\n\n  ErrnoError: function ErrnoError() { FS.error() },\n};\nModule['FS_createDataFile'] = FS.createDataFile;\nModule['FS_createPreloadedFile'] = FS.createPreloadedFile;\n\n// include: URIUtils.js\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\n\n// Indicates whether filename is a base64 data URI.\nfunction isDataURI(filename) {\n  // Prefix of data URIs emitted by SINGLE_FILE and related options.\n  return filename.startsWith(dataURIPrefix);\n}\n\n// Indicates whether filename is delivered via file protocol (as opposed to http/https)\nfunction isFileURI(filename) {\n  return filename.startsWith('file://');\n}\n\n// end include: URIUtils.js\n/** @param {boolean=} fixedasm */\nfunction createExportWrapper(name, fixedasm) {\n  return function() {\n    var displayName = name;\n    var asm = fixedasm;\n    if (!fixedasm) {\n      asm = Module['asm'];\n    }\n    assert(runtimeInitialized, 'native function `' + displayName + '` called before runtime initialization');\n    if (!asm[name]) {\n      assert(asm[name], 'exported native function `' + displayName + '` not found');\n    }\n    return asm[name].apply(null, arguments);\n  };\n}\n\n// include: runtime_exceptions.js\n// end include: runtime_exceptions.js\nvar wasmBinaryFile;\n  wasmBinaryFile = 'add.wasm';\n  if (!isDataURI(wasmBinaryFile)) {\n    wasmBinaryFile = locateFile(wasmBinaryFile);\n  }\n\nfunction getBinary(file) {\n  try {\n    if (file == wasmBinaryFile && wasmBinary) {\n      return new Uint8Array(wasmBinary);\n    }\n    if (readBinary) {\n      return readBinary(file);\n    }\n    throw \"both async and sync fetching of the wasm failed\";\n  }\n  catch (err) {\n    abort(err);\n  }\n}\n\nfunction getBinaryPromise(binaryFile) {\n  // If we don't have the binary yet, try to load it asynchronously.\n  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\n  // See https://github.com/github/fetch/pull/92#issuecomment-140665932\n  // Cordova or Electron apps are typically loaded from a file:// url.\n  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\n  if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n    if (typeof fetch == 'function'\n      && !isFileURI(binaryFile)\n    ) {\n      return fetch(binaryFile, { credentials: 'same-origin' }).then(function(response) {\n        if (!response['ok']) {\n          throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\n        }\n        return response['arrayBuffer']();\n      }).catch(function () {\n          return getBinary(binaryFile);\n      });\n    }\n    else {\n      if (readAsync) {\n        // fetch is not available or url is file => try XHR (readAsync uses XHR internally)\n        return new Promise(function(resolve, reject) {\n          readAsync(binaryFile, function(response) { resolve(new Uint8Array(/** @type{!ArrayBuffer} */(response))) }, reject)\n        });\n      }\n    }\n  }\n\n  // Otherwise, getBinary should be able to get it synchronously\n  return Promise.resolve().then(function() { return getBinary(binaryFile); });\n}\n\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\n  return getBinaryPromise(binaryFile).then(function(binary) {\n    return WebAssembly.instantiate(binary, imports);\n  }).then(function (instance) {\n    return instance;\n  }).then(receiver, function(reason) {\n    err('failed to asynchronously prepare wasm: ' + reason);\n\n    // Warn on some common problems.\n    if (isFileURI(wasmBinaryFile)) {\n      err('warning: Loading from a file URI (' + wasmBinaryFile + ') is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing');\n    }\n    abort(reason);\n  });\n}\n\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\n  if (!binary &&\n      typeof WebAssembly.instantiateStreaming == 'function' &&\n      !isDataURI(binaryFile) &&\n      // Don't use streaming for file:// delivered objects in a webview, fetch them synchronously.\n      !isFileURI(binaryFile) &&\n      // Avoid instantiateStreaming() on Node.js environment for now, as while\n      // Node.js v18.1.0 implements it, it does not have a full fetch()\n      // implementation yet.\n      //\n      // Reference:\n      //   https://github.com/emscripten-core/emscripten/pull/16917\n      !ENVIRONMENT_IS_NODE &&\n      typeof fetch == 'function') {\n    return fetch(binaryFile, { credentials: 'same-origin' }).then(function(response) {\n      // Suppress closure warning here since the upstream definition for\n      // instantiateStreaming only allows Promise<Repsponse> rather than\n      // an actual Response.\n      // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\n      /** @suppress {checkTypes} */\n      var result = WebAssembly.instantiateStreaming(response, imports);\n\n      return result.then(\n        callback,\n        function(reason) {\n          // We expect the most common failure cause to be a bad MIME type for the binary,\n          // in which case falling back to ArrayBuffer instantiation should work.\n          err('wasm streaming compile failed: ' + reason);\n          err('falling back to ArrayBuffer instantiation');\n          return instantiateArrayBuffer(binaryFile, imports, callback);\n        });\n    });\n  } else {\n    return instantiateArrayBuffer(binaryFile, imports, callback);\n  }\n}\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nfunction createWasm() {\n  // prepare imports\n  var info = {\n    'env': wasmImports,\n    'wasi_snapshot_preview1': wasmImports,\n  };\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  /** @param {WebAssembly.Module=} module*/\n  function receiveInstance(instance, module) {\n    var exports = instance.exports;\n\n    Module['asm'] = exports;\n\n    wasmMemory = Module['asm']['memory'];\n    assert(wasmMemory, \"memory not found in wasm exports\");\n    // This assertion doesn't hold when emscripten is run in --post-link\n    // mode.\n    // TODO(sbc): Read INITIAL_MEMORY out of the wasm file in post-link mode.\n    //assert(wasmMemory.buffer.byteLength === 16777216);\n    updateMemoryViews();\n\n    wasmTable = Module['asm']['__indirect_function_table'];\n    assert(wasmTable, \"table not found in wasm exports\");\n\n    addOnInit(Module['asm']['__wasm_call_ctors']);\n\n    removeRunDependency('wasm-instantiate');\n\n    return exports;\n  }\n  // wait for the pthread pool (if any)\n  addRunDependency('wasm-instantiate');\n\n  // Prefer streaming instantiation if available.\n  // Async compilation can be confusing when an error on the page overwrites Module\n  // (for example, if the order of elements is wrong, and the one defining Module is\n  // later), so we save Module and check it later.\n  var trueModule = Module;\n  function receiveInstantiationResult(result) {\n    // 'result' is a ResultObject object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n    assert(Module === trueModule, 'the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?');\n    trueModule = null;\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n    // When the regression is fixed, can restore the above PTHREADS-enabled path.\n    receiveInstance(result['instance']);\n  }\n\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n  // to manually instantiate the Wasm module themselves. This allows pages to\n  // run the instantiation parallel to any other async startup actions they are\n  // performing.\n  // Also pthreads and wasm workers initialize the wasm instance through this\n  // path.\n  if (Module['instantiateWasm']) {\n\n    try {\n      return Module['instantiateWasm'](info, receiveInstance);\n    } catch(e) {\n      err('Module.instantiateWasm callback failed with error: ' + e);\n        return false;\n    }\n  }\n\n  instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult);\n  return {}; // no exports yet; we'll fill them in later\n}\n\n// Globals used by JS i64 conversions (see makeSetValue)\nvar tempDouble;\nvar tempI64;\n\n// include: runtime_debug.js\nfunction legacyModuleProp(prop, newName) {\n  if (!Object.getOwnPropertyDescriptor(Module, prop)) {\n    Object.defineProperty(Module, prop, {\n      configurable: true,\n      get: function() {\n        abort('Module.' + prop + ' has been replaced with plain ' + newName + ' (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)');\n      }\n    });\n  }\n}\n\nfunction ignoredModuleProp(prop) {\n  if (Object.getOwnPropertyDescriptor(Module, prop)) {\n    abort('`Module.' + prop + '` was supplied but `' + prop + '` not included in INCOMING_MODULE_JS_API');\n  }\n}\n\n// forcing the filesystem exports a few things by default\nfunction isExportedByForceFilesystem(name) {\n  return name === 'FS_createPath' ||\n         name === 'FS_createDataFile' ||\n         name === 'FS_createPreloadedFile' ||\n         name === 'FS_unlink' ||\n         name === 'addRunDependency' ||\n         // The old FS has some functionality that WasmFS lacks.\n         name === 'FS_createLazyFile' ||\n         name === 'FS_createDevice' ||\n         name === 'removeRunDependency';\n}\n\nfunction missingGlobal(sym, msg) {\n  if (typeof globalThis !== 'undefined') {\n    Object.defineProperty(globalThis, sym, {\n      configurable: true,\n      get: function() {\n        warnOnce('`' + sym + '` is not longer defined by emscripten. ' + msg);\n        return undefined;\n      }\n    });\n  }\n}\n\nmissingGlobal('buffer', 'Please use HEAP8.buffer or wasmMemory.buffer');\n\nfunction missingLibrarySymbol(sym) {\n  if (typeof globalThis !== 'undefined' && !Object.getOwnPropertyDescriptor(globalThis, sym)) {\n    Object.defineProperty(globalThis, sym, {\n      configurable: true,\n      get: function() {\n        // Can't `abort()` here because it would break code that does runtime\n        // checks.  e.g. `if (typeof SDL === 'undefined')`.\n        var msg = '`' + sym + '` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line';\n        // DEFAULT_LIBRARY_FUNCS_TO_INCLUDE requires the name as it appears in\n        // library.js, which means $name for a JS name with no prefix, or name\n        // for a JS name like _name.\n        var librarySymbol = sym;\n        if (!librarySymbol.startsWith('_')) {\n          librarySymbol = '$' + sym;\n        }\n        msg += \" (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE=\" + librarySymbol + \")\";\n        if (isExportedByForceFilesystem(sym)) {\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n        }\n        warnOnce(msg);\n        return undefined;\n      }\n    });\n  }\n  // Any symbol that is not included from the JS libary is also (by definition)\n  // not exported on the Module object.\n  unexportedRuntimeSymbol(sym);\n}\n\nfunction unexportedRuntimeSymbol(sym) {\n  if (!Object.getOwnPropertyDescriptor(Module, sym)) {\n    Object.defineProperty(Module, sym, {\n      configurable: true,\n      get: function() {\n        var msg = \"'\" + sym + \"' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\";\n        if (isExportedByForceFilesystem(sym)) {\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n        }\n        abort(msg);\n      }\n    });\n  }\n}\n\n// Used by XXXXX_DEBUG settings to output debug messages.\nfunction dbg(text) {\n  // TODO(sbc): Make this configurable somehow.  Its not always convenient for\n  // logging to show up as errors.\n  console.error(text);\n}\n\n// end include: runtime_debug.js\n// === Body ===\n\n\n// end include: preamble.js\n\n  /** @constructor */\n  function ExitStatus(status) {\n      this.name = 'ExitStatus';\n      this.message = 'Program terminated with exit(' + status + ')';\n      this.status = status;\n    }\n\n  function callRuntimeCallbacks(callbacks) {\n      while (callbacks.length > 0) {\n        // Pass the module as the first argument.\n        callbacks.shift()(Module);\n      }\n    }\n\n  \n    /**\n     * @param {number} ptr\n     * @param {string} type\n     */\n  function getValue(ptr, type = 'i8') {\n    if (type.endsWith('*')) type = '*';\n    switch (type) {\n      case 'i1': return HEAP8[((ptr)>>0)];\n      case 'i8': return HEAP8[((ptr)>>0)];\n      case 'i16': return HEAP16[((ptr)>>1)];\n      case 'i32': return HEAP32[((ptr)>>2)];\n      case 'i64': return HEAP32[((ptr)>>2)];\n      case 'float': return HEAPF32[((ptr)>>2)];\n      case 'double': return HEAPF64[((ptr)>>3)];\n      case '*': return HEAPU32[((ptr)>>2)];\n      default: abort('invalid type for getValue: ' + type);\n    }\n  }\n\n  function ptrToString(ptr) {\n      assert(typeof ptr === 'number');\n      return '0x' + ptr.toString(16).padStart(8, '0');\n    }\n\n  \n    /**\n     * @param {number} ptr\n     * @param {number} value\n     * @param {string} type\n     */\n  function setValue(ptr, value, type = 'i8') {\n    if (type.endsWith('*')) type = '*';\n    switch (type) {\n      case 'i1': HEAP8[((ptr)>>0)] = value; break;\n      case 'i8': HEAP8[((ptr)>>0)] = value; break;\n      case 'i16': HEAP16[((ptr)>>1)] = value; break;\n      case 'i32': HEAP32[((ptr)>>2)] = value; break;\n      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math.min((+(Math.floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)] = tempI64[0],HEAP32[(((ptr)+(4))>>2)] = tempI64[1]); break;\n      case 'float': HEAPF32[((ptr)>>2)] = value; break;\n      case 'double': HEAPF64[((ptr)>>3)] = value; break;\n      case '*': HEAPU32[((ptr)>>2)] = value; break;\n      default: abort('invalid type for setValue: ' + type);\n    }\n  }\n\n  function warnOnce(text) {\n      if (!warnOnce.shown) warnOnce.shown = {};\n      if (!warnOnce.shown[text]) {\n        warnOnce.shown[text] = 1;\n        if (ENVIRONMENT_IS_NODE) text = 'warning: ' + text;\n        err(text);\n      }\n    }\nfunction checkIncomingModuleAPI() {\n  ignoredModuleProp('fetchSettings');\n}\nvar wasmImports = {\n  \n};\nvar asm = createWasm();\n/** @type {function(...*):?} */\nvar ___wasm_call_ctors = createExportWrapper(\"__wasm_call_ctors\");\n/** @type {function(...*):?} */\nvar ___errno_location = createExportWrapper(\"__errno_location\");\n/** @type {function(...*):?} */\nvar _fflush = Module[\"_fflush\"] = createExportWrapper(\"fflush\");\n/** @type {function(...*):?} */\nvar _emscripten_stack_init = function() {\n  return (_emscripten_stack_init = Module[\"asm\"][\"emscripten_stack_init\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_free = function() {\n  return (_emscripten_stack_get_free = Module[\"asm\"][\"emscripten_stack_get_free\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_base = function() {\n  return (_emscripten_stack_get_base = Module[\"asm\"][\"emscripten_stack_get_base\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_end = function() {\n  return (_emscripten_stack_get_end = Module[\"asm\"][\"emscripten_stack_get_end\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar stackSave = createExportWrapper(\"stackSave\");\n/** @type {function(...*):?} */\nvar stackRestore = createExportWrapper(\"stackRestore\");\n/** @type {function(...*):?} */\nvar stackAlloc = createExportWrapper(\"stackAlloc\");\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_current = function() {\n  return (_emscripten_stack_get_current = Module[\"asm\"][\"emscripten_stack_get_current\"]).apply(null, arguments);\n};\n\n\n\n// include: postamble.js\n// === Auto-generated postamble setup entry stuff ===\n\nvar missingLibrarySymbols = [\n  'zeroMemory',\n  'exitJS',\n  'getHeapMax',\n  'abortOnCannotGrowMemory',\n  'emscripten_realloc_buffer',\n  'isLeapYear',\n  'ydayFromDate',\n  'arraySum',\n  'addDays',\n  'setErrNo',\n  'inetPton4',\n  'inetNtop4',\n  'inetPton6',\n  'inetNtop6',\n  'readSockaddr',\n  'writeSockaddr',\n  'getHostByName',\n  'initRandomFill',\n  'randomFill',\n  'traverseStack',\n  'getCallstack',\n  'emscriptenLog',\n  'convertPCtoSourceLocation',\n  'readEmAsmArgs',\n  'jstoi_q',\n  'jstoi_s',\n  'getExecutableName',\n  'listenOnce',\n  'autoResumeAudioContext',\n  'dynCallLegacy',\n  'getDynCaller',\n  'dynCall',\n  'handleException',\n  'runtimeKeepalivePush',\n  'runtimeKeepalivePop',\n  'callUserCallback',\n  'maybeExit',\n  'safeSetTimeout',\n  'asmjsMangle',\n  'asyncLoad',\n  'alignMemory',\n  'mmapAlloc',\n  'HandleAllocator',\n  'getNativeTypeSize',\n  'STACK_SIZE',\n  'STACK_ALIGN',\n  'POINTER_SIZE',\n  'ASSERTIONS',\n  'writeI53ToI64',\n  'writeI53ToI64Clamped',\n  'writeI53ToI64Signaling',\n  'writeI53ToU64Clamped',\n  'writeI53ToU64Signaling',\n  'readI53FromI64',\n  'readI53FromU64',\n  'convertI32PairToI53',\n  'convertI32PairToI53Checked',\n  'convertU32PairToI53',\n  'getCFunc',\n  'ccall',\n  'cwrap',\n  'uleb128Encode',\n  'sigToWasmTypes',\n  'generateFuncType',\n  'convertJsFunctionToWasm',\n  'getEmptyTableSlot',\n  'updateTableMap',\n  'getFunctionAddress',\n  'addFunction',\n  'removeFunction',\n  'reallyNegative',\n  'unSign',\n  'strLen',\n  'reSign',\n  'formatString',\n  'UTF8ArrayToString',\n  'UTF8ToString',\n  'stringToUTF8Array',\n  'stringToUTF8',\n  'lengthBytesUTF8',\n  'intArrayFromString',\n  'intArrayToString',\n  'AsciiToString',\n  'stringToAscii',\n  'UTF16ToString',\n  'stringToUTF16',\n  'lengthBytesUTF16',\n  'UTF32ToString',\n  'stringToUTF32',\n  'lengthBytesUTF32',\n  'stringToNewUTF8',\n  'stringToUTF8OnStack',\n  'writeArrayToMemory',\n  'getSocketFromFD',\n  'getSocketAddress',\n  'registerKeyEventCallback',\n  'maybeCStringToJsString',\n  'findEventTarget',\n  'findCanvasEventTarget',\n  'getBoundingClientRect',\n  'fillMouseEventData',\n  'registerMouseEventCallback',\n  'registerWheelEventCallback',\n  'registerUiEventCallback',\n  'registerFocusEventCallback',\n  'fillDeviceOrientationEventData',\n  'registerDeviceOrientationEventCallback',\n  'fillDeviceMotionEventData',\n  'registerDeviceMotionEventCallback',\n  'screenOrientation',\n  'fillOrientationChangeEventData',\n  'registerOrientationChangeEventCallback',\n  'fillFullscreenChangeEventData',\n  'registerFullscreenChangeEventCallback',\n  'JSEvents_requestFullscreen',\n  'JSEvents_resizeCanvasForFullscreen',\n  'registerRestoreOldStyle',\n  'hideEverythingExceptGivenElement',\n  'restoreHiddenElements',\n  'setLetterbox',\n  'softFullscreenResizeWebGLRenderTarget',\n  'doRequestFullscreen',\n  'fillPointerlockChangeEventData',\n  'registerPointerlockChangeEventCallback',\n  'registerPointerlockErrorEventCallback',\n  'requestPointerLock',\n  'fillVisibilityChangeEventData',\n  'registerVisibilityChangeEventCallback',\n  'registerTouchEventCallback',\n  'fillGamepadEventData',\n  'registerGamepadEventCallback',\n  'registerBeforeUnloadEventCallback',\n  'fillBatteryEventData',\n  'battery',\n  'registerBatteryEventCallback',\n  'setCanvasElementSize',\n  'getCanvasElementSize',\n  'demangle',\n  'demangleAll',\n  'jsStackTrace',\n  'stackTrace',\n  'getEnvStrings',\n  'checkWasiClock',\n  'flush_NO_FILESYSTEM',\n  'wasiRightsToMuslOFlags',\n  'wasiOFlagsToMuslOFlags',\n  'createDyncallWrapper',\n  'setImmediateWrapped',\n  'clearImmediateWrapped',\n  'polyfillSetImmediate',\n  'getPromise',\n  'makePromise',\n  'makePromiseCallback',\n  'ExceptionInfo',\n  'exception_addRef',\n  'exception_decRef',\n  'setMainLoop',\n  '_setNetworkCallback',\n  'heapObjectForWebGLType',\n  'heapAccessShiftForWebGLHeap',\n  'webgl_enable_ANGLE_instanced_arrays',\n  'webgl_enable_OES_vertex_array_object',\n  'webgl_enable_WEBGL_draw_buffers',\n  'webgl_enable_WEBGL_multi_draw',\n  'emscriptenWebGLGet',\n  'computeUnpackAlignedImageSize',\n  'colorChannelsInGlTextureFormat',\n  'emscriptenWebGLGetTexPixelData',\n  '__glGenObject',\n  'emscriptenWebGLGetUniform',\n  'webglGetUniformLocation',\n  'webglPrepareUniformLocationsBeforeFirstUse',\n  'webglGetLeftBracePos',\n  'emscriptenWebGLGetVertexAttrib',\n  '__glGetActiveAttribOrUniform',\n  'writeGLArray',\n  'registerWebGlEventCallback',\n  'runAndAbortIfError',\n  'SDL_unicode',\n  'SDL_ttfContext',\n  'SDL_audio',\n  'GLFW_Window',\n  'ALLOC_NORMAL',\n  'ALLOC_STACK',\n  'allocate',\n  'writeStringToMemory',\n  'writeAsciiToMemory',\n];\nmissingLibrarySymbols.forEach(missingLibrarySymbol)\n\nvar unexportedSymbols = [\n  'run',\n  'addOnPreRun',\n  'addOnInit',\n  'addOnPreMain',\n  'addOnExit',\n  'addOnPostRun',\n  'addRunDependency',\n  'removeRunDependency',\n  'FS_createFolder',\n  'FS_createPath',\n  'FS_createDataFile',\n  'FS_createPreloadedFile',\n  'FS_createLazyFile',\n  'FS_createLink',\n  'FS_createDevice',\n  'FS_unlink',\n  'out',\n  'err',\n  'callMain',\n  'abort',\n  'keepRuntimeAlive',\n  'wasmMemory',\n  'stackAlloc',\n  'stackSave',\n  'stackRestore',\n  'getTempRet0',\n  'setTempRet0',\n  'writeStackCookie',\n  'checkStackCookie',\n  'ptrToString',\n  'ENV',\n  'MONTH_DAYS_REGULAR',\n  'MONTH_DAYS_LEAP',\n  'MONTH_DAYS_REGULAR_CUMULATIVE',\n  'MONTH_DAYS_LEAP_CUMULATIVE',\n  'ERRNO_CODES',\n  'ERRNO_MESSAGES',\n  'DNS',\n  'Protocols',\n  'Sockets',\n  'timers',\n  'warnOnce',\n  'UNWIND_CACHE',\n  'readEmAsmArgsArray',\n  'freeTableIndexes',\n  'functionsInTableMap',\n  'setValue',\n  'getValue',\n  'PATH',\n  'PATH_FS',\n  'UTF8Decoder',\n  'UTF16Decoder',\n  'SYSCALLS',\n  'JSEvents',\n  'specialHTMLTargets',\n  'currentFullscreenStrategy',\n  'restoreOldWindowedStyle',\n  'ExitStatus',\n  'dlopenMissingError',\n  'promiseMap',\n  'uncaughtExceptionCount',\n  'exceptionLast',\n  'exceptionCaught',\n  'Browser',\n  'wget',\n  'FS',\n  'MEMFS',\n  'TTY',\n  'PIPEFS',\n  'SOCKFS',\n  'tempFixedLengthArray',\n  'miniTempWebGLFloatBuffers',\n  'miniTempWebGLIntBuffers',\n  'GL',\n  'emscripten_webgl_power_preferences',\n  'AL',\n  'GLUT',\n  'EGL',\n  'GLEW',\n  'IDBStore',\n  'SDL',\n  'SDL_gfx',\n  'GLFW',\n  'allocateUTF8',\n  'allocateUTF8OnStack',\n];\nunexportedSymbols.forEach(unexportedRuntimeSymbol);\n\n\n\nvar calledRun;\n\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!calledRun) run();\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n};\n\nfunction stackCheckInit() {\n  // This is normally called automatically during __wasm_call_ctors but need to\n  // get these values before even running any of the ctors so we call it redundantly\n  // here.\n  _emscripten_stack_init();\n  // TODO(sbc): Move writeStackCookie to native to to avoid this.\n  writeStackCookie();\n}\n\nfunction run() {\n\n  if (runDependencies > 0) {\n    return;\n  }\n\n    stackCheckInit();\n\n  preRun();\n\n  // a preRun added a dependency, run will be called later\n  if (runDependencies > 0) {\n    return;\n  }\n\n  function doRun() {\n    // run may have just been called through dependencies being fulfilled just in this very frame,\n    // or while the async setStatus time below was happening\n    if (calledRun) return;\n    calledRun = true;\n    Module['calledRun'] = true;\n\n    if (ABORT) return;\n\n    initRuntime();\n\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n    assert(!Module['_main'], 'compiled without a main, but one is present. if you added it from JS, use Module[\"onRuntimeInitialized\"]');\n\n    postRun();\n  }\n\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function() {\n      setTimeout(function() {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else\n  {\n    doRun();\n  }\n  checkStackCookie();\n}\n\nfunction checkUnflushedContent() {\n  // Compiler settings do not allow exiting the runtime, so flushing\n  // the streams is not possible. but in ASSERTIONS mode we check\n  // if there was something to flush, and if so tell the user they\n  // should request that the runtime be exitable.\n  // Normally we would not even include flush() at all, but in ASSERTIONS\n  // builds we do so just for this check, and here we see if there is any\n  // content to flush, that is, we check if there would have been\n  // something a non-ASSERTIONS build would have not seen.\n  // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0\n  // mode (which has its own special function for this; otherwise, all\n  // the code is inside libc)\n  var oldOut = out;\n  var oldErr = err;\n  var has = false;\n  out = err = (x) => {\n    has = true;\n  }\n  try { // it doesn't matter if it fails\n    _fflush(0);\n  } catch(e) {}\n  out = oldOut;\n  err = oldErr;\n  if (has) {\n    warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.');\n    warnOnce('(this may also be due to not including full filesystem support - try building with -sFORCE_FILESYSTEM)');\n  }\n}\n\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\n\nrun();\n\n\n// end include: postamble.js\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}