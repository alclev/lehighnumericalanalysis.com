{"ast":null,"code":"// include: shell.js\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = typeof Module != 'undefined' ? Module : {};\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = Object.assign({}, Module);\nvar arguments_ = [];\nvar thisProgram = './this.program';\nvar quit_ = (status, toThrow) => {\n  throw toThrow;\n};\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n\n// Attempt to auto-detect the environment\nvar ENVIRONMENT_IS_WEB = typeof window == 'object';\nvar ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';\n// N.b. Electron.js environment is simultaneously a NODE-environment, but\n// also a web environment.\nvar ENVIRONMENT_IS_NODE = typeof process == 'object' && typeof process.versions == 'object' && typeof process.versions.node == 'string';\nvar ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\nif (Module['ENVIRONMENT']) {\n  throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)');\n}\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = '';\nfunction locateFile(path) {\n  if (Module['locateFile']) {\n    return Module['locateFile'](path, scriptDirectory);\n  }\n  return scriptDirectory + path;\n}\n\n// Hooks that are implemented differently in different runtime environments.\nvar read_, readAsync, readBinary, setWindowTitle;\nif (ENVIRONMENT_IS_NODE) {\n  if (typeof process == 'undefined' || !process.release || process.release.name !== 'node') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n  var nodeVersion = process.versions.node;\n  var numericVersion = nodeVersion.split('.').slice(0, 3);\n  numericVersion = numericVersion[0] * 10000 + numericVersion[1] * 100 + numericVersion[2].split('-')[0] * 1;\n  var minVersion = 101900;\n  if (numericVersion < 101900) {\n    throw new Error('This emscripten-generated code requires node v10.19.19.0 (detected v' + nodeVersion + ')');\n  }\n\n  // `require()` is no-op in an ESM module, use `createRequire()` to construct\n  // the require()` function.  This is only necessary for multi-environment\n  // builds, `-sENVIRONMENT=node` emits a static import declaration instead.\n  // TODO: Swap all `require()`'s with `import()`'s?\n  // These modules will usually be used on Node.js. Load them eagerly to avoid\n  // the complexity of lazy-loading.\n  var fs = require('fs');\n  var nodePath = require('path');\n  if (ENVIRONMENT_IS_WORKER) {\n    scriptDirectory = nodePath.dirname(scriptDirectory) + '/';\n  } else {\n    scriptDirectory = __dirname + '/';\n  }\n\n  // include: node_shell_read.js\n  read_ = (filename, binary) => {\n    // We need to re-wrap `file://` strings to URLs. Normalizing isn't\n    // necessary in that case, the path should already be absolute.\n    filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n    return fs.readFileSync(filename, binary ? undefined : 'utf8');\n  };\n  readBinary = filename => {\n    var ret = read_(filename, true);\n    if (!ret.buffer) {\n      ret = new Uint8Array(ret);\n    }\n    assert(ret.buffer);\n    return ret;\n  };\n  readAsync = (filename, onload, onerror) => {\n    // See the comment in the `read_` function.\n    filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n    fs.readFile(filename, function (err, data) {\n      if (err) onerror(err);else onload(data.buffer);\n    });\n  };\n\n  // end include: node_shell_read.js\n  if (!Module['thisProgram'] && process.argv.length > 1) {\n    thisProgram = process.argv[1].replace(/\\\\/g, '/');\n  }\n  arguments_ = process.argv.slice(2);\n  if (typeof module != 'undefined') {\n    module['exports'] = Module;\n  }\n  process.on('uncaughtException', function (ex) {\n    // suppress ExitStatus exceptions from showing an error\n    if (ex !== 'unwind' && !(ex instanceof ExitStatus) && !(ex.context instanceof ExitStatus)) {\n      throw ex;\n    }\n  });\n\n  // Without this older versions of node (< v15) will log unhandled rejections\n  // but return 0, which is not normally the desired behaviour.  This is\n  // not be needed with node v15 and about because it is now the default\n  // behaviour:\n  // See https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode\n  var nodeMajor = process.versions.node.split(\".\")[0];\n  if (nodeMajor < 15) {\n    process.on('unhandledRejection', function (reason) {\n      throw reason;\n    });\n  }\n  quit_ = (status, toThrow) => {\n    process.exitCode = status;\n    throw toThrow;\n  };\n  Module['inspect'] = function () {\n    return '[Emscripten Module object]';\n  };\n} else if (ENVIRONMENT_IS_SHELL) {\n  if (typeof process == 'object' && typeof require === 'function' || typeof window == 'object' || typeof importScripts == 'function') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n  if (typeof read != 'undefined') {\n    read_ = function shell_read(f) {\n      return read(f);\n    };\n  }\n  readBinary = function readBinary(f) {\n    let data;\n    if (typeof readbuffer == 'function') {\n      return new Uint8Array(readbuffer(f));\n    }\n    data = read(f, 'binary');\n    assert(typeof data == 'object');\n    return data;\n  };\n  readAsync = function readAsync(f, onload, onerror) {\n    setTimeout(() => onload(readBinary(f)), 0);\n  };\n  if (typeof clearTimeout == 'undefined') {\n    globalThis.clearTimeout = id => {};\n  }\n  if (typeof scriptArgs != 'undefined') {\n    arguments_ = scriptArgs;\n  } else if (typeof arguments != 'undefined') {\n    arguments_ = arguments;\n  }\n  if (typeof quit == 'function') {\n    quit_ = (status, toThrow) => {\n      // Unlike node which has process.exitCode, d8 has no such mechanism. So we\n      // have no way to set the exit code and then let the program exit with\n      // that code when it naturally stops running (say, when all setTimeouts\n      // have completed). For that reason, we must call `quit` - the only way to\n      // set the exit code - but quit also halts immediately.  To increase\n      // consistency with node (and the web) we schedule the actual quit call\n      // using a setTimeout to give the current stack and any exception handlers\n      // a chance to run.  This enables features such as addOnPostRun (which\n      // expected to be able to run code after main returns).\n      setTimeout(() => {\n        if (!(toThrow instanceof ExitStatus)) {\n          let toLog = toThrow;\n          if (toThrow && typeof toThrow == 'object' && toThrow.stack) {\n            toLog = [toThrow, toThrow.stack];\n          }\n          err('exiting due to exception: ' + toLog);\n        }\n        quit(status);\n      });\n      throw toThrow;\n    };\n  }\n  if (typeof print != 'undefined') {\n    // Prefer to use print/printErr where they exist, as they usually work better.\n    if (typeof console == 'undefined') console = /** @type{!Console} */{};\n    console.log = /** @type{!function(this:Console, ...*): undefined} */print;\n    console.warn = console.error = /** @type{!function(this:Console, ...*): undefined} */typeof printErr != 'undefined' ? printErr : print;\n  }\n} else\n  // Note that this includes Node.js workers when relevant (pthreads is enabled).\n  // Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\n  // ENVIRONMENT_IS_NODE.\n  if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n    if (ENVIRONMENT_IS_WORKER) {\n      // Check worker, not web, since window could be polyfilled\n      scriptDirectory = self.location.href;\n    } else if (typeof document != 'undefined' && document.currentScript) {\n      // web\n      scriptDirectory = document.currentScript.src;\n    }\n    // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n    // otherwise, slice off the final part of the url to find the script directory.\n    // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n    // and scriptDirectory will correctly be replaced with an empty string.\n    // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\n    // they are removed because they could contain a slash.\n    if (scriptDirectory.indexOf('blob:') !== 0) {\n      scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf('/') + 1);\n    } else {\n      scriptDirectory = '';\n    }\n    if (!(typeof window == 'object' || typeof importScripts == 'function')) throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n    // Differentiate the Web Worker from the Node Worker case, as reading must\n    // be done differently.\n    {\n      // include: web_or_worker_shell_read.js\n      read_ = url => {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, false);\n        xhr.send(null);\n        return xhr.responseText;\n      };\n      if (ENVIRONMENT_IS_WORKER) {\n        readBinary = url => {\n          var xhr = new XMLHttpRequest();\n          xhr.open('GET', url, false);\n          xhr.responseType = 'arraybuffer';\n          xhr.send(null);\n          return new Uint8Array( /** @type{!ArrayBuffer} */xhr.response);\n        };\n      }\n      readAsync = (url, onload, onerror) => {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, true);\n        xhr.responseType = 'arraybuffer';\n        xhr.onload = () => {\n          if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n            // file URLs can return 0\n            onload(xhr.response);\n            return;\n          }\n          onerror();\n        };\n        xhr.onerror = onerror;\n        xhr.send(null);\n      };\n\n      // end include: web_or_worker_shell_read.js\n    }\n\n    setWindowTitle = title => document.title = title;\n  } else {\n    throw new Error('environment detection error');\n  }\nvar out = Module['print'] || console.log.bind(console);\nvar err = Module['printErr'] || console.warn.bind(console);\n\n// Merge back in the overrides\nObject.assign(Module, moduleOverrides);\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\nmoduleOverrides = null;\ncheckIncomingModuleAPI();\n\n// Emit code to handle expected values on the Module object. This applies Module.x\n// to the proper local x. This has two benefits: first, we only emit it if it is\n// expected to arrive, and second, by using a local everywhere else that can be\n// minified.\n\nif (Module['arguments']) arguments_ = Module['arguments'];\nlegacyModuleProp('arguments', 'arguments_');\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];\nlegacyModuleProp('thisProgram', 'thisProgram');\nif (Module['quit']) quit_ = Module['quit'];\nlegacyModuleProp('quit', 'quit_');\n\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\n// Assertions on removed incoming Module JS APIs.\nassert(typeof Module['memoryInitializerPrefixURL'] == 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['pthreadMainPrefixURL'] == 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['cdInitializerPrefixURL'] == 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['filePackagePrefixURL'] == 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['read'] == 'undefined', 'Module.read option was removed (modify read_ in JS)');\nassert(typeof Module['readAsync'] == 'undefined', 'Module.readAsync option was removed (modify readAsync in JS)');\nassert(typeof Module['readBinary'] == 'undefined', 'Module.readBinary option was removed (modify readBinary in JS)');\nassert(typeof Module['setWindowTitle'] == 'undefined', 'Module.setWindowTitle option was removed (modify setWindowTitle in JS)');\nassert(typeof Module['TOTAL_MEMORY'] == 'undefined', 'Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY');\nlegacyModuleProp('read', 'read_');\nlegacyModuleProp('readAsync', 'readAsync');\nlegacyModuleProp('readBinary', 'readBinary');\nlegacyModuleProp('setWindowTitle', 'setWindowTitle');\nvar IDBFS = 'IDBFS is no longer included by default; build with -lidbfs.js';\nvar PROXYFS = 'PROXYFS is no longer included by default; build with -lproxyfs.js';\nvar WORKERFS = 'WORKERFS is no longer included by default; build with -lworkerfs.js';\nvar NODEFS = 'NODEFS is no longer included by default; build with -lnodefs.js';\nassert(!ENVIRONMENT_IS_SHELL, \"shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable.\");\n\n// end include: shell.js\n// include: preamble.js\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\nvar wasmBinary;\nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\nlegacyModuleProp('wasmBinary', 'wasmBinary');\nvar noExitRuntime = Module['noExitRuntime'] || true;\nlegacyModuleProp('noExitRuntime', 'noExitRuntime');\nif (typeof WebAssembly != 'object') {\n  abort('no native wasm support detected');\n}\n\n// Wasm globals\n\nvar wasmMemory;\n\n//========================================\n// Runtime essentials\n//========================================\n\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS;\n\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    abort('Assertion failed' + (text ? ': ' + text : ''));\n  }\n}\n\n// We used to include malloc/free by default in the past. Show a helpful error in\n// builds with assertions.\n\n// Memory management\n\nvar HEAP, /** @type {!Int8Array} */\n  HEAP8, /** @type {!Uint8Array} */\n  HEAPU8, /** @type {!Int16Array} */\n  HEAP16, /** @type {!Uint16Array} */\n  HEAPU16, /** @type {!Int32Array} */\n  HEAP32, /** @type {!Uint32Array} */\n  HEAPU32, /** @type {!Float32Array} */\n  HEAPF32, /** @type {!Float64Array} */\n  HEAPF64;\nfunction updateMemoryViews() {\n  var b = wasmMemory.buffer;\n  Module['HEAP8'] = HEAP8 = new Int8Array(b);\n  Module['HEAP16'] = HEAP16 = new Int16Array(b);\n  Module['HEAP32'] = HEAP32 = new Int32Array(b);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n}\nassert(!Module['STACK_SIZE'], 'STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time');\nassert(typeof Int32Array != 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined, 'JS engine does not provide full typed array support');\n\n// If memory is defined in wasm, the user can't provide it, or set INITIAL_MEMORY\nassert(!Module['wasmMemory'], 'Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally');\nassert(!Module['INITIAL_MEMORY'], 'Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically');\n\n// include: runtime_init_table.js\n// In regular non-RELOCATABLE mode the table is exported\n// from the wasm module and this will be assigned once\n// the exports are available.\nvar wasmTable;\n\n// end include: runtime_init_table.js\n// include: runtime_stack_check.js\n// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\nfunction writeStackCookie() {\n  var max = _emscripten_stack_get_end();\n  assert((max & 3) == 0);\n  // If the stack ends at address zero we write our cookies 4 bytes into the\n  // stack.  This prevents interference with the (separate) address-zero check\n  // below.\n  if (max == 0) {\n    max += 4;\n  }\n  // The stack grow downwards towards _emscripten_stack_get_end.\n  // We write cookies to the final two words in the stack and detect if they are\n  // ever overwritten.\n  HEAPU32[max >> 2] = 0x02135467;\n  HEAPU32[max + 4 >> 2] = 0x89BACDFE;\n  // Also test the global address 0 for integrity.\n  HEAPU32[0] = 0x63736d65; /* 'emsc' */\n}\n\nfunction checkStackCookie() {\n  if (ABORT) return;\n  var max = _emscripten_stack_get_end();\n  // See writeStackCookie().\n  if (max == 0) {\n    max += 4;\n  }\n  var cookie1 = HEAPU32[max >> 2];\n  var cookie2 = HEAPU32[max + 4 >> 2];\n  if (cookie1 != 0x02135467 || cookie2 != 0x89BACDFE) {\n    abort('Stack overflow! Stack cookie has been overwritten at ' + ptrToString(max) + ', expected hex dwords 0x89BACDFE and 0x2135467, but received ' + ptrToString(cookie2) + ' ' + ptrToString(cookie1));\n  }\n  // Also test the global address 0 for integrity.\n  if (HEAPU32[0] !== 0x63736d65 /* 'emsc' */) {\n    abort('Runtime error: The application has corrupted its heap memory area (address zero)!');\n  }\n}\n\n// end include: runtime_stack_check.js\n// include: runtime_assertions.js\n// Endianness check\n(function () {\n  var h16 = new Int16Array(1);\n  var h8 = new Int8Array(h16.buffer);\n  h16[0] = 0x6373;\n  if (h8[0] !== 0x73 || h8[1] !== 0x63) throw 'Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)';\n})();\n\n// end include: runtime_assertions.js\nvar __ATPRERUN__ = []; // functions called before the runtime is initialized\nvar __ATINIT__ = []; // functions called during startup\nvar __ATEXIT__ = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\n\nvar runtimeInitialized = false;\nvar runtimeKeepaliveCounter = 0;\nfunction keepRuntimeAlive() {\n  return noExitRuntime || runtimeKeepaliveCounter > 0;\n}\nfunction preRun() {\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPRERUN__);\n}\nfunction initRuntime() {\n  assert(!runtimeInitialized);\n  runtimeInitialized = true;\n  checkStackCookie();\n  callRuntimeCallbacks(__ATINIT__);\n}\nfunction postRun() {\n  checkStackCookie();\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\nfunction addOnExit(cb) {}\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\n\n// include: runtime_math.js\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\n\nassert(Math.imul, 'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.fround, 'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.clz32, 'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.trunc, 'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\n\n// end include: runtime_math.js\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\nvar runDependencyTracking = {};\nfunction getUniqueRunDependency(id) {\n  var orig = id;\n  while (1) {\n    if (!runDependencyTracking[id]) return id;\n    id = orig + Math.random();\n  }\n}\nfunction addRunDependency(id) {\n  runDependencies++;\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n  if (id) {\n    assert(!runDependencyTracking[id]);\n    runDependencyTracking[id] = 1;\n    if (runDependencyWatcher === null && typeof setInterval != 'undefined') {\n      // Check for missing dependencies every few seconds\n      runDependencyWatcher = setInterval(function () {\n        if (ABORT) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n          return;\n        }\n        var shown = false;\n        for (var dep in runDependencyTracking) {\n          if (!shown) {\n            shown = true;\n            err('still waiting on run dependencies:');\n          }\n          err('dependency: ' + dep);\n        }\n        if (shown) {\n          err('(end of list)');\n        }\n      }, 10000);\n    }\n  } else {\n    err('warning: run dependency added without ID');\n  }\n}\nfunction removeRunDependency(id) {\n  runDependencies--;\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n  if (id) {\n    assert(runDependencyTracking[id]);\n    delete runDependencyTracking[id];\n  } else {\n    err('warning: run dependency removed without ID');\n  }\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\n\n/** @param {string|number=} what */\nfunction abort(what) {\n  if (Module['onAbort']) {\n    Module['onAbort'](what);\n  }\n  what = 'Aborted(' + what + ')';\n  // TODO(sbc): Should we remove printing and leave it up to whoever\n  // catches the exception?\n  err(what);\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\n  // exception, which means we'd run destructors on it. We need the error to\n  // simply make the program stop.\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\n  // a trap or not based on a hidden field within the object. So at the moment\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\n  // allows this in the wasm spec.\n\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\n  // defintion for WebAssembly.RuntimeError claims it takes no arguments even\n  // though it can.\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\n  /** @suppress {checkTypes} */\n  var e = new WebAssembly.RuntimeError(what);\n\n  // Throw the error whether or not MODULARIZE is set because abort is used\n  // in code paths apart from instantiation where an exception is expected\n  // to be thrown when abort is called.\n  throw e;\n}\n\n// include: memoryprofiler.js\n// end include: memoryprofiler.js\n// show errors on likely calls to FS when it was not included\nvar FS = {\n  error: function () {\n    abort('Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with -sFORCE_FILESYSTEM');\n  },\n  init: function () {\n    FS.error();\n  },\n  createDataFile: function () {\n    FS.error();\n  },\n  createPreloadedFile: function () {\n    FS.error();\n  },\n  createLazyFile: function () {\n    FS.error();\n  },\n  open: function () {\n    FS.error();\n  },\n  mkdev: function () {\n    FS.error();\n  },\n  registerDevice: function () {\n    FS.error();\n  },\n  analyzePath: function () {\n    FS.error();\n  },\n  ErrnoError: function ErrnoError() {\n    FS.error();\n  }\n};\nModule['FS_createDataFile'] = FS.createDataFile;\nModule['FS_createPreloadedFile'] = FS.createPreloadedFile;\n\n// include: URIUtils.js\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\n\n// Indicates whether filename is a base64 data URI.\nfunction isDataURI(filename) {\n  // Prefix of data URIs emitted by SINGLE_FILE and related options.\n  return filename.startsWith(dataURIPrefix);\n}\n\n// Indicates whether filename is delivered via file protocol (as opposed to http/https)\nfunction isFileURI(filename) {\n  return filename.startsWith('file://');\n}\n\n// end include: URIUtils.js\n/** @param {boolean=} fixedasm */\nfunction createExportWrapper(name, fixedasm) {\n  return function () {\n    var displayName = name;\n    var asm = fixedasm;\n    if (!fixedasm) {\n      asm = Module['asm'];\n    }\n    assert(runtimeInitialized, 'native function `' + displayName + '` called before runtime initialization');\n    if (!asm[name]) {\n      assert(asm[name], 'exported native function `' + displayName + '` not found');\n    }\n    return asm[name].apply(null, arguments);\n  };\n}\n\n// include: runtime_exceptions.js\n// end include: runtime_exceptions.js\nvar wasmBinaryFile;\nwasmBinaryFile = 'add.wasm';\nif (!isDataURI(wasmBinaryFile)) {\n  wasmBinaryFile = locateFile(wasmBinaryFile);\n}\nfunction getBinary(file) {\n  try {\n    if (file == wasmBinaryFile && wasmBinary) {\n      return new Uint8Array(wasmBinary);\n    }\n    if (readBinary) {\n      return readBinary(file);\n    }\n    throw \"both async and sync fetching of the wasm failed\";\n  } catch (err) {\n    abort(err);\n  }\n}\nfunction getBinaryPromise(binaryFile) {\n  // If we don't have the binary yet, try to load it asynchronously.\n  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\n  // See https://github.com/github/fetch/pull/92#issuecomment-140665932\n  // Cordova or Electron apps are typically loaded from a file:// url.\n  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\n  if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n    if (typeof fetch == 'function' && !isFileURI(binaryFile)) {\n      return fetch(binaryFile, {\n        credentials: 'same-origin'\n      }).then(function (response) {\n        if (!response['ok']) {\n          throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\n        }\n        return response['arrayBuffer']();\n      }).catch(function () {\n        return getBinary(binaryFile);\n      });\n    } else {\n      if (readAsync) {\n        // fetch is not available or url is file => try XHR (readAsync uses XHR internally)\n        return new Promise(function (resolve, reject) {\n          readAsync(binaryFile, function (response) {\n            resolve(new Uint8Array( /** @type{!ArrayBuffer} */response));\n          }, reject);\n        });\n      }\n    }\n  }\n\n  // Otherwise, getBinary should be able to get it synchronously\n  return Promise.resolve().then(function () {\n    return getBinary(binaryFile);\n  });\n}\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\n  return getBinaryPromise(binaryFile).then(function (binary) {\n    return WebAssembly.instantiate(binary, imports);\n  }).then(function (instance) {\n    return instance;\n  }).then(receiver, function (reason) {\n    err('failed to asynchronously prepare wasm: ' + reason);\n\n    // Warn on some common problems.\n    if (isFileURI(wasmBinaryFile)) {\n      err('warning: Loading from a file URI (' + wasmBinaryFile + ') is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing');\n    }\n    abort(reason);\n  });\n}\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\n  if (!binary && typeof WebAssembly.instantiateStreaming == 'function' && !isDataURI(binaryFile) &&\n  // Don't use streaming for file:// delivered objects in a webview, fetch them synchronously.\n  !isFileURI(binaryFile) &&\n  // Avoid instantiateStreaming() on Node.js environment for now, as while\n  // Node.js v18.1.0 implements it, it does not have a full fetch()\n  // implementation yet.\n  //\n  // Reference:\n  //   https://github.com/emscripten-core/emscripten/pull/16917\n  !ENVIRONMENT_IS_NODE && typeof fetch == 'function') {\n    return fetch(binaryFile, {\n      credentials: 'same-origin'\n    }).then(function (response) {\n      // Suppress closure warning here since the upstream definition for\n      // instantiateStreaming only allows Promise<Repsponse> rather than\n      // an actual Response.\n      // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\n      /** @suppress {checkTypes} */\n      var result = WebAssembly.instantiateStreaming(response, imports);\n      return result.then(callback, function (reason) {\n        // We expect the most common failure cause to be a bad MIME type for the binary,\n        // in which case falling back to ArrayBuffer instantiation should work.\n        err('wasm streaming compile failed: ' + reason);\n        err('falling back to ArrayBuffer instantiation');\n        return instantiateArrayBuffer(binaryFile, imports, callback);\n      });\n    });\n  } else {\n    return instantiateArrayBuffer(binaryFile, imports, callback);\n  }\n}\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nfunction createWasm() {\n  // prepare imports\n  var info = {\n    'env': wasmImports,\n    'wasi_snapshot_preview1': wasmImports\n  };\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  /** @param {WebAssembly.Module=} module*/\n  function receiveInstance(instance, module) {\n    var exports = instance.exports;\n    Module['asm'] = exports;\n    wasmMemory = Module['asm']['memory'];\n    assert(wasmMemory, \"memory not found in wasm exports\");\n    // This assertion doesn't hold when emscripten is run in --post-link\n    // mode.\n    // TODO(sbc): Read INITIAL_MEMORY out of the wasm file in post-link mode.\n    //assert(wasmMemory.buffer.byteLength === 16777216);\n    updateMemoryViews();\n    wasmTable = Module['asm']['__indirect_function_table'];\n    assert(wasmTable, \"table not found in wasm exports\");\n    addOnInit(Module['asm']['__wasm_call_ctors']);\n    removeRunDependency('wasm-instantiate');\n    return exports;\n  }\n  // wait for the pthread pool (if any)\n  addRunDependency('wasm-instantiate');\n\n  // Prefer streaming instantiation if available.\n  // Async compilation can be confusing when an error on the page overwrites Module\n  // (for example, if the order of elements is wrong, and the one defining Module is\n  // later), so we save Module and check it later.\n  var trueModule = Module;\n  function receiveInstantiationResult(result) {\n    // 'result' is a ResultObject object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n    assert(Module === trueModule, 'the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?');\n    trueModule = null;\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n    // When the regression is fixed, can restore the above PTHREADS-enabled path.\n    receiveInstance(result['instance']);\n  }\n\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n  // to manually instantiate the Wasm module themselves. This allows pages to\n  // run the instantiation parallel to any other async startup actions they are\n  // performing.\n  // Also pthreads and wasm workers initialize the wasm instance through this\n  // path.\n  if (Module['instantiateWasm']) {\n    try {\n      return Module['instantiateWasm'](info, receiveInstance);\n    } catch (e) {\n      err('Module.instantiateWasm callback failed with error: ' + e);\n      return false;\n    }\n  }\n  instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult);\n  return {}; // no exports yet; we'll fill them in later\n}\n\n// Globals used by JS i64 conversions (see makeSetValue)\nvar tempDouble;\nvar tempI64;\n\n// include: runtime_debug.js\nfunction legacyModuleProp(prop, newName) {\n  if (!Object.getOwnPropertyDescriptor(Module, prop)) {\n    Object.defineProperty(Module, prop, {\n      configurable: true,\n      get: function () {\n        abort('Module.' + prop + ' has been replaced with plain ' + newName + ' (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)');\n      }\n    });\n  }\n}\nfunction ignoredModuleProp(prop) {\n  if (Object.getOwnPropertyDescriptor(Module, prop)) {\n    abort('`Module.' + prop + '` was supplied but `' + prop + '` not included in INCOMING_MODULE_JS_API');\n  }\n}\n\n// forcing the filesystem exports a few things by default\nfunction isExportedByForceFilesystem(name) {\n  return name === 'FS_createPath' || name === 'FS_createDataFile' || name === 'FS_createPreloadedFile' || name === 'FS_unlink' || name === 'addRunDependency' ||\n  // The old FS has some functionality that WasmFS lacks.\n  name === 'FS_createLazyFile' || name === 'FS_createDevice' || name === 'removeRunDependency';\n}\nfunction missingGlobal(sym, msg) {\n  if (typeof globalThis !== 'undefined') {\n    Object.defineProperty(globalThis, sym, {\n      configurable: true,\n      get: function () {\n        warnOnce('`' + sym + '` is not longer defined by emscripten. ' + msg);\n        return undefined;\n      }\n    });\n  }\n}\nmissingGlobal('buffer', 'Please use HEAP8.buffer or wasmMemory.buffer');\nfunction missingLibrarySymbol(sym) {\n  if (typeof globalThis !== 'undefined' && !Object.getOwnPropertyDescriptor(globalThis, sym)) {\n    Object.defineProperty(globalThis, sym, {\n      configurable: true,\n      get: function () {\n        // Can't `abort()` here because it would break code that does runtime\n        // checks.  e.g. `if (typeof SDL === 'undefined')`.\n        var msg = '`' + sym + '` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line';\n        // DEFAULT_LIBRARY_FUNCS_TO_INCLUDE requires the name as it appears in\n        // library.js, which means $name for a JS name with no prefix, or name\n        // for a JS name like _name.\n        var librarySymbol = sym;\n        if (!librarySymbol.startsWith('_')) {\n          librarySymbol = '$' + sym;\n        }\n        msg += \" (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE=\" + librarySymbol + \")\";\n        if (isExportedByForceFilesystem(sym)) {\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n        }\n        warnOnce(msg);\n        return undefined;\n      }\n    });\n  }\n  // Any symbol that is not included from the JS libary is also (by definition)\n  // not exported on the Module object.\n  unexportedRuntimeSymbol(sym);\n}\nfunction unexportedRuntimeSymbol(sym) {\n  if (!Object.getOwnPropertyDescriptor(Module, sym)) {\n    Object.defineProperty(Module, sym, {\n      configurable: true,\n      get: function () {\n        var msg = \"'\" + sym + \"' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\";\n        if (isExportedByForceFilesystem(sym)) {\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n        }\n        abort(msg);\n      }\n    });\n  }\n}\n\n// Used by XXXXX_DEBUG settings to output debug messages.\nfunction dbg(text) {\n  // TODO(sbc): Make this configurable somehow.  Its not always convenient for\n  // logging to show up as errors.\n  console.error(text);\n}\n\n// end include: runtime_debug.js\n// === Body ===\n\n// end include: preamble.js\n\n/** @constructor */\nfunction ExitStatus(status) {\n  this.name = 'ExitStatus';\n  this.message = 'Program terminated with exit(' + status + ')';\n  this.status = status;\n}\n_c = ExitStatus;\nfunction callRuntimeCallbacks(callbacks) {\n  while (callbacks.length > 0) {\n    // Pass the module as the first argument.\n    callbacks.shift()(Module);\n  }\n}\n\n/**\n * @param {number} ptr\n * @param {string} type\n */\nfunction getValue(ptr) {\n  let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'i8';\n  if (type.endsWith('*')) type = '*';\n  switch (type) {\n    case 'i1':\n      return HEAP8[ptr >> 0];\n    case 'i8':\n      return HEAP8[ptr >> 0];\n    case 'i16':\n      return HEAP16[ptr >> 1];\n    case 'i32':\n      return HEAP32[ptr >> 2];\n    case 'i64':\n      return HEAP32[ptr >> 2];\n    case 'float':\n      return HEAPF32[ptr >> 2];\n    case 'double':\n      return HEAPF64[ptr >> 3];\n    case '*':\n      return HEAPU32[ptr >> 2];\n    default:\n      abort('invalid type for getValue: ' + type);\n  }\n}\nfunction ptrToString(ptr) {\n  assert(typeof ptr === 'number');\n  return '0x' + ptr.toString(16).padStart(8, '0');\n}\n\n/**\n * @param {number} ptr\n * @param {number} value\n * @param {string} type\n */\nfunction setValue(ptr, value) {\n  let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'i8';\n  if (type.endsWith('*')) type = '*';\n  switch (type) {\n    case 'i1':\n      HEAP8[ptr >> 0] = value;\n      break;\n    case 'i8':\n      HEAP8[ptr >> 0] = value;\n      break;\n    case 'i16':\n      HEAP16[ptr >> 1] = value;\n      break;\n    case 'i32':\n      HEAP32[ptr >> 2] = value;\n      break;\n    case 'i64':\n      tempI64 = [value >>> 0, (tempDouble = value, +Math.abs(tempDouble) >= 1.0 ? tempDouble > 0.0 ? (Math.min(+Math.floor(tempDouble / 4294967296.0), 4294967295.0) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0) >>> 0 : 0)], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];\n      break;\n    case 'float':\n      HEAPF32[ptr >> 2] = value;\n      break;\n    case 'double':\n      HEAPF64[ptr >> 3] = value;\n      break;\n    case '*':\n      HEAPU32[ptr >> 2] = value;\n      break;\n    default:\n      abort('invalid type for setValue: ' + type);\n  }\n}\nfunction warnOnce(text) {\n  if (!warnOnce.shown) warnOnce.shown = {};\n  if (!warnOnce.shown[text]) {\n    warnOnce.shown[text] = 1;\n    if (ENVIRONMENT_IS_NODE) text = 'warning: ' + text;\n    err(text);\n  }\n}\nfunction __embind_register_bigint(primitiveType, name, size, minRange, maxRange) {}\nfunction getShiftFromSize(size) {\n  switch (size) {\n    case 1:\n      return 0;\n    case 2:\n      return 1;\n    case 4:\n      return 2;\n    case 8:\n      return 3;\n    default:\n      throw new TypeError('Unknown type size: ' + size);\n  }\n}\nfunction embind_init_charCodes() {\n  var codes = new Array(256);\n  for (var i = 0; i < 256; ++i) {\n    codes[i] = String.fromCharCode(i);\n  }\n  embind_charCodes = codes;\n}\nvar embind_charCodes = undefined;\nfunction readLatin1String(ptr) {\n  var ret = \"\";\n  var c = ptr;\n  while (HEAPU8[c]) {\n    ret += embind_charCodes[HEAPU8[c++]];\n  }\n  return ret;\n}\nvar awaitingDependencies = {};\nvar registeredTypes = {};\nvar typeDependencies = {};\nvar char_0 = 48;\nvar char_9 = 57;\nfunction makeLegalFunctionName(name) {\n  if (undefined === name) {\n    return '_unknown';\n  }\n  name = name.replace(/[^a-zA-Z0-9_]/g, '$');\n  var f = name.charCodeAt(0);\n  if (f >= char_0 && f <= char_9) {\n    return '_' + name;\n  }\n  return name;\n}\nfunction createNamedFunction(name, body) {\n  name = makeLegalFunctionName(name);\n  // Use an abject with a computed property name to create a new function with\n  // a name specified at runtime, but without using `new Function` or `eval`.\n  return {\n    [name]: function () {\n      return body.apply(this, arguments);\n    }\n  }[name];\n}\nfunction extendError(baseErrorType, errorName) {\n  var errorClass = createNamedFunction(errorName, function (message) {\n    this.name = errorName;\n    this.message = message;\n    var stack = new Error(message).stack;\n    if (stack !== undefined) {\n      this.stack = this.toString() + '\\n' + stack.replace(/^Error(:[^\\n]*)?\\n/, '');\n    }\n  });\n  errorClass.prototype = Object.create(baseErrorType.prototype);\n  errorClass.prototype.constructor = errorClass;\n  errorClass.prototype.toString = function () {\n    if (this.message === undefined) {\n      return this.name;\n    } else {\n      return this.name + ': ' + this.message;\n    }\n  };\n  return errorClass;\n}\nvar BindingError = undefined;\nfunction throwBindingError(message) {\n  throw new BindingError(message);\n}\nvar InternalError = undefined;\nfunction throwInternalError(message) {\n  throw new InternalError(message);\n}\nfunction whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n  myTypes.forEach(function (type) {\n    typeDependencies[type] = dependentTypes;\n  });\n  function onComplete(typeConverters) {\n    var myTypeConverters = getTypeConverters(typeConverters);\n    if (myTypeConverters.length !== myTypes.length) {\n      throwInternalError('Mismatched type converter count');\n    }\n    for (var i = 0; i < myTypes.length; ++i) {\n      registerType(myTypes[i], myTypeConverters[i]);\n    }\n  }\n  var typeConverters = new Array(dependentTypes.length);\n  var unregisteredTypes = [];\n  var registered = 0;\n  dependentTypes.forEach((dt, i) => {\n    if (registeredTypes.hasOwnProperty(dt)) {\n      typeConverters[i] = registeredTypes[dt];\n    } else {\n      unregisteredTypes.push(dt);\n      if (!awaitingDependencies.hasOwnProperty(dt)) {\n        awaitingDependencies[dt] = [];\n      }\n      awaitingDependencies[dt].push(() => {\n        typeConverters[i] = registeredTypes[dt];\n        ++registered;\n        if (registered === unregisteredTypes.length) {\n          onComplete(typeConverters);\n        }\n      });\n    }\n  });\n  if (0 === unregisteredTypes.length) {\n    onComplete(typeConverters);\n  }\n}\n/** @param {Object=} options */\nfunction registerType(rawType, registeredInstance) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (!('argPackAdvance' in registeredInstance)) {\n    throw new TypeError('registerType registeredInstance requires argPackAdvance');\n  }\n  var name = registeredInstance.name;\n  if (!rawType) {\n    throwBindingError('type \"' + name + '\" must have a positive integer typeid pointer');\n  }\n  if (registeredTypes.hasOwnProperty(rawType)) {\n    if (options.ignoreDuplicateRegistrations) {\n      return;\n    } else {\n      throwBindingError(\"Cannot register type '\" + name + \"' twice\");\n    }\n  }\n  registeredTypes[rawType] = registeredInstance;\n  delete typeDependencies[rawType];\n  if (awaitingDependencies.hasOwnProperty(rawType)) {\n    var callbacks = awaitingDependencies[rawType];\n    delete awaitingDependencies[rawType];\n    callbacks.forEach(cb => cb());\n  }\n}\nfunction __embind_register_bool(rawType, name, size, trueValue, falseValue) {\n  var shift = getShiftFromSize(size);\n  name = readLatin1String(name);\n  registerType(rawType, {\n    name: name,\n    'fromWireType': function (wt) {\n      // ambiguous emscripten ABI: sometimes return values are\n      // true or false, and sometimes integers (0 or 1)\n      return !!wt;\n    },\n    'toWireType': function (destructors, o) {\n      return o ? trueValue : falseValue;\n    },\n    'argPackAdvance': 8,\n    'readValueFromPointer': function (pointer) {\n      // TODO: if heap is fixed (like in asm.js) this could be executed outside\n      var heap;\n      if (size === 1) {\n        heap = HEAP8;\n      } else if (size === 2) {\n        heap = HEAP16;\n      } else if (size === 4) {\n        heap = HEAP32;\n      } else {\n        throw new TypeError(\"Unknown boolean type size: \" + name);\n      }\n      return this['fromWireType'](heap[pointer >> shift]);\n    },\n    destructorFunction: null // This type does not need a destructor\n  });\n}\n\n/** @constructor */\nfunction HandleAllocator() {\n  // Reserve slot 0 so that 0 is always an invalid handle\n  this.allocated = [undefined];\n  this.freelist = [];\n  this.get = function (id) {\n    assert(this.allocated[id] !== undefined, 'invalid handle: ' + id);\n    return this.allocated[id];\n  };\n  this.allocate = function (handle) {\n    let id = this.freelist.pop() || this.allocated.length;\n    this.allocated[id] = handle;\n    return id;\n  };\n  this.free = function (id) {\n    assert(this.allocated[id] !== undefined);\n    // Set the slot to `undefined` rather than using `delete` here since\n    // apparently arrays with holes in them can be less efficient.\n    this.allocated[id] = undefined;\n    this.freelist.push(id);\n  };\n}\n_c2 = HandleAllocator;\nvar emval_handles = new HandleAllocator();\n;\nfunction __emval_decref(handle) {\n  if (handle >= emval_handles.reserved && 0 === --emval_handles.get(handle).refcount) {\n    emval_handles.free(handle);\n  }\n}\nfunction count_emval_handles() {\n  var count = 0;\n  for (var i = emval_handles.reserved; i < emval_handles.allocated.length; ++i) {\n    if (emval_handles.allocated[i] !== undefined) {\n      ++count;\n    }\n  }\n  return count;\n}\nfunction init_emval() {\n  // reserve some special values. These never get de-allocated.\n  // The HandleAllocator takes care of reserving zero.\n  emval_handles.allocated.push({\n    value: undefined\n  }, {\n    value: null\n  }, {\n    value: true\n  }, {\n    value: false\n  });\n  emval_handles.reserved = emval_handles.allocated.length;\n  Module['count_emval_handles'] = count_emval_handles;\n}\nvar Emval = {\n  toValue: handle => {\n    if (!handle) {\n      throwBindingError('Cannot use deleted val. handle = ' + handle);\n    }\n    return emval_handles.get(handle).value;\n  },\n  toHandle: value => {\n    switch (value) {\n      case undefined:\n        return 1;\n      case null:\n        return 2;\n      case true:\n        return 3;\n      case false:\n        return 4;\n      default:\n        {\n          return emval_handles.allocate({\n            refcount: 1,\n            value: value\n          });\n        }\n    }\n  }\n};\nfunction simpleReadValueFromPointer(pointer) {\n  return this['fromWireType'](HEAP32[pointer >> 2]);\n}\nfunction __embind_register_emval(rawType, name) {\n  name = readLatin1String(name);\n  registerType(rawType, {\n    name: name,\n    'fromWireType': function (handle) {\n      var rv = Emval.toValue(handle);\n      __emval_decref(handle);\n      return rv;\n    },\n    'toWireType': function (destructors, value) {\n      return Emval.toHandle(value);\n    },\n    'argPackAdvance': 8,\n    'readValueFromPointer': simpleReadValueFromPointer,\n    destructorFunction: null // This type does not need a destructor\n\n    // TODO: do we need a deleteObject here?  write a test where\n    // emval is passed into JS via an interface\n  });\n}\n\nfunction embindRepr(v) {\n  if (v === null) {\n    return 'null';\n  }\n  var t = typeof v;\n  if (t === 'object' || t === 'array' || t === 'function') {\n    return v.toString();\n  } else {\n    return '' + v;\n  }\n}\nfunction floatReadValueFromPointer(name, shift) {\n  switch (shift) {\n    case 2:\n      return function (pointer) {\n        return this['fromWireType'](HEAPF32[pointer >> 2]);\n      };\n    case 3:\n      return function (pointer) {\n        return this['fromWireType'](HEAPF64[pointer >> 3]);\n      };\n    default:\n      throw new TypeError(\"Unknown float type: \" + name);\n  }\n}\nfunction __embind_register_float(rawType, name, size) {\n  var shift = getShiftFromSize(size);\n  name = readLatin1String(name);\n  registerType(rawType, {\n    name: name,\n    'fromWireType': function (value) {\n      return value;\n    },\n    'toWireType': function (destructors, value) {\n      if (typeof value != \"number\" && typeof value != \"boolean\") {\n        throw new TypeError('Cannot convert \"' + embindRepr(value) + '\" to ' + this.name);\n      }\n      // The VM will perform JS to Wasm value conversion, according to the spec:\n      // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\n      return value;\n    },\n    'argPackAdvance': 8,\n    'readValueFromPointer': floatReadValueFromPointer(name, shift),\n    destructorFunction: null // This type does not need a destructor\n  });\n}\n\nfunction runDestructors(destructors) {\n  while (destructors.length) {\n    var ptr = destructors.pop();\n    var del = destructors.pop();\n    del(ptr);\n  }\n}\nfunction newFunc(constructor, argumentList) {\n  if (!(constructor instanceof Function)) {\n    throw new TypeError('new_ called with constructor type ' + typeof constructor + \" which is not a function\");\n  }\n  /*\n   * Previously, the following line was just:\n   *   function dummy() {};\n   * Unfortunately, Chrome was preserving 'dummy' as the object's name, even\n   * though at creation, the 'dummy' has the correct constructor name.  Thus,\n   * objects created with IMVU.new would show up in the debugger as 'dummy',\n   * which isn't very helpful.  Using IMVU.createNamedFunction addresses the\n   * issue.  Doublely-unfortunately, there's no way to write a test for this\n   * behavior.  -NRD 2013.02.22\n   */\n  var dummy = createNamedFunction(constructor.name || 'unknownFunctionName', function () {});\n  dummy.prototype = constructor.prototype;\n  var obj = new dummy();\n  var r = constructor.apply(obj, argumentList);\n  return r instanceof Object ? r : obj;\n}\nfunction craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc, isAsync) {\n  // humanName: a human-readable string name for the function to be generated.\n  // argTypes: An array that contains the embind type objects for all types in the function signature.\n  //    argTypes[0] is the type object for the function return value.\n  //    argTypes[1] is the type object for function this object/class type, or null if not crafting an invoker for a class method.\n  //    argTypes[2...] are the actual function parameters.\n  // classType: The embind type object for the class to be bound, or null if this is not a method of a class.\n  // cppInvokerFunc: JS Function object to the C++-side function that interops into C++ code.\n  // cppTargetFunc: Function pointer (an integer to FUNCTION_TABLE) to the target C++ function the cppInvokerFunc will end up calling.\n  var argCount = argTypes.length;\n  if (argCount < 2) {\n    throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n  }\n  assert(!isAsync, 'Async bindings are only supported with JSPI.');\n  var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n\n  // Free functions with signature \"void function()\" do not need an invoker that marshalls between wire types.\n  // TODO: This omits argument count check - enable only at -O3 or similar.\n  //    if (ENABLE_UNSAFE_OPTS && argCount == 2 && argTypes[0].name == \"void\" && !isClassMethodFunc) {\n  //       return FUNCTION_TABLE[fn];\n  //    }\n\n  // Determine if we need to use a dynamic stack to store the destructors for the function parameters.\n  // TODO: Remove this completely once all function invokers are being dynamically generated.\n  var needsDestructorStack = false;\n  for (var i = 1; i < argTypes.length; ++i) {\n    // Skip return value at index 0 - it's not deleted here.\n    if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\n      // The type does not define a destructor function - must use dynamic stack\n      needsDestructorStack = true;\n      break;\n    }\n  }\n  var returns = argTypes[0].name !== \"void\";\n  var argsList = \"\";\n  var argsListWired = \"\";\n  for (var i = 0; i < argCount - 2; ++i) {\n    argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n    argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n  }\n  var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\n\" + \"if (arguments.length !== \" + (argCount - 2) + \") {\\n\" + \"throwBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n\" + \"}\\n\";\n  if (needsDestructorStack) {\n    invokerFnBody += \"var destructors = [];\\n\";\n  }\n  var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n  var args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n  var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n  if (isClassMethodFunc) {\n    invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n  }\n  for (var i = 0; i < argCount - 2; ++i) {\n    invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n    args1.push(\"argType\" + i);\n    args2.push(argTypes[i + 2]);\n  }\n  if (isClassMethodFunc) {\n    argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n  }\n  invokerFnBody += (returns || isAsync ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n  if (needsDestructorStack) {\n    invokerFnBody += \"runDestructors(destructors);\\n\";\n  } else {\n    for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n      // Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.\n      var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n      if (argTypes[i].destructorFunction !== null) {\n        invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n        args1.push(paramName + \"_dtor\");\n        args2.push(argTypes[i].destructorFunction);\n      }\n    }\n  }\n  if (returns) {\n    invokerFnBody += \"var ret = retType.fromWireType(rv);\\n\" + \"return ret;\\n\";\n  } else {}\n  invokerFnBody += \"}\\n\";\n  args1.push(invokerFnBody);\n  return newFunc(Function, args1).apply(null, args2);\n}\nfunction ensureOverloadTable(proto, methodName, humanName) {\n  if (undefined === proto[methodName].overloadTable) {\n    var prevFunc = proto[methodName];\n    // Inject an overload resolver function that routes to the appropriate overload based on the number of arguments.\n    proto[methodName] = function () {\n      // TODO This check can be removed in -O3 level \"unsafe\" optimizations.\n      if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n        throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n      }\n      return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n    };\n    // Move the previous function into the overload table.\n    proto[methodName].overloadTable = [];\n    proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n  }\n}\n\n/** @param {number=} numArguments */\nfunction exposePublicSymbol(name, value, numArguments) {\n  if (Module.hasOwnProperty(name)) {\n    if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) {\n      throwBindingError(\"Cannot register public name '\" + name + \"' twice\");\n    }\n\n    // We are exposing a function with the same name as an existing function. Create an overload table and a function selector\n    // that routes between the two.\n    ensureOverloadTable(Module, name, name);\n    if (Module.hasOwnProperty(numArguments)) {\n      throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n    }\n    // Add the new function into the overload table.\n    Module[name].overloadTable[numArguments] = value;\n  } else {\n    Module[name] = value;\n    if (undefined !== numArguments) {\n      Module[name].numArguments = numArguments;\n    }\n  }\n}\nfunction heap32VectorToArray(count, firstElement) {\n  var array = [];\n  for (var i = 0; i < count; i++) {\n    // TODO(https://github.com/emscripten-core/emscripten/issues/17310):\n    // Find a way to hoist the `>> 2` or `>> 3` out of this loop.\n    array.push(HEAPU32[firstElement + i * 4 >> 2]);\n  }\n  return array;\n}\n\n/** @param {number=} numArguments */\nfunction replacePublicSymbol(name, value, numArguments) {\n  if (!Module.hasOwnProperty(name)) {\n    throwInternalError('Replacing nonexistant public symbol');\n  }\n  // If there's an overload table for this symbol, replace the symbol in the overload table instead.\n  if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n    Module[name].overloadTable[numArguments] = value;\n  } else {\n    Module[name] = value;\n    Module[name].argCount = numArguments;\n  }\n}\nfunction dynCallLegacy(sig, ptr, args) {\n  assert('dynCall_' + sig in Module, 'bad function pointer type - dynCall function not found for sig \\'' + sig + '\\'');\n  if (args && args.length) {\n    // j (64-bit integer) must be passed in as two numbers [low 32, high 32].\n    assert(args.length === sig.substring(1).replace(/j/g, '--').length);\n  } else {\n    assert(sig.length == 1);\n  }\n  var f = Module['dynCall_' + sig];\n  return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\n}\nvar wasmTableMirror = [];\nfunction getWasmTableEntry(funcPtr) {\n  var func = wasmTableMirror[funcPtr];\n  if (!func) {\n    if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n    wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n  }\n  assert(wasmTable.get(funcPtr) == func, \"JavaScript-side Wasm function table mirror is out of date!\");\n  return func;\n}\n\n/** @param {Object=} args */\nfunction dynCall(sig, ptr, args) {\n  // Without WASM_BIGINT support we cannot directly call function with i64 as\n  // part of thier signature, so we rely the dynCall functions generated by\n  // wasm-emscripten-finalize\n  if (sig.includes('j')) {\n    return dynCallLegacy(sig, ptr, args);\n  }\n  assert(getWasmTableEntry(ptr), 'missing table entry in dynCall: ' + ptr);\n  var rtn = getWasmTableEntry(ptr).apply(null, args);\n  return rtn;\n}\nfunction getDynCaller(sig, ptr) {\n  assert(sig.includes('j') || sig.includes('p'), 'getDynCaller should only be called with i64 sigs');\n  var argCache = [];\n  return function () {\n    argCache.length = 0;\n    Object.assign(argCache, arguments);\n    return dynCall(sig, ptr, argCache);\n  };\n}\nfunction embind__requireFunction(signature, rawFunction) {\n  signature = readLatin1String(signature);\n  function makeDynCaller() {\n    if (signature.includes('j')) {\n      return getDynCaller(signature, rawFunction);\n    }\n    return getWasmTableEntry(rawFunction);\n  }\n  var fp = makeDynCaller();\n  if (typeof fp != \"function\") {\n    throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n  }\n  return fp;\n}\nvar UnboundTypeError = undefined;\nfunction getTypeName(type) {\n  var ptr = ___getTypeName(type);\n  var rv = readLatin1String(ptr);\n  _free(ptr);\n  return rv;\n}\nfunction throwUnboundTypeError(message, types) {\n  var unboundTypes = [];\n  var seen = {};\n  function visit(type) {\n    if (seen[type]) {\n      return;\n    }\n    if (registeredTypes[type]) {\n      return;\n    }\n    if (typeDependencies[type]) {\n      typeDependencies[type].forEach(visit);\n      return;\n    }\n    unboundTypes.push(type);\n    seen[type] = true;\n  }\n  types.forEach(visit);\n  throw new UnboundTypeError(message + ': ' + unboundTypes.map(getTypeName).join([', ']));\n}\nfunction __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn, isAsync) {\n  var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n  name = readLatin1String(name);\n  rawInvoker = embind__requireFunction(signature, rawInvoker);\n  exposePublicSymbol(name, function () {\n    throwUnboundTypeError('Cannot call ' + name + ' due to unbound types', argTypes);\n  }, argCount - 1);\n  whenDependentTypesAreResolved([], argTypes, function (argTypes) {\n    var invokerArgsArray = [argTypes[0] /* return value */, null /* no class 'this'*/].concat(argTypes.slice(1) /* actual params */);\n    replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null /* no class 'this'*/, rawInvoker, fn, isAsync), argCount - 1);\n    return [];\n  });\n}\nfunction integerReadValueFromPointer(name, shift, signed) {\n  // integers are quite common, so generate very specialized functions\n  switch (shift) {\n    case 0:\n      return signed ? function readS8FromPointer(pointer) {\n        return HEAP8[pointer];\n      } : function readU8FromPointer(pointer) {\n        return HEAPU8[pointer];\n      };\n    case 1:\n      return signed ? function readS16FromPointer(pointer) {\n        return HEAP16[pointer >> 1];\n      } : function readU16FromPointer(pointer) {\n        return HEAPU16[pointer >> 1];\n      };\n    case 2:\n      return signed ? function readS32FromPointer(pointer) {\n        return HEAP32[pointer >> 2];\n      } : function readU32FromPointer(pointer) {\n        return HEAPU32[pointer >> 2];\n      };\n    default:\n      throw new TypeError(\"Unknown integer type: \" + name);\n  }\n}\nfunction __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\n  name = readLatin1String(name);\n  // LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come\n  // out as 'i32 -1'. Always treat those as max u32.\n  if (maxRange === -1) {\n    maxRange = 4294967295;\n  }\n  var shift = getShiftFromSize(size);\n  var fromWireType = value => value;\n  if (minRange === 0) {\n    var bitshift = 32 - 8 * size;\n    fromWireType = value => value << bitshift >>> bitshift;\n  }\n  var isUnsignedType = name.includes('unsigned');\n  var checkAssertions = (value, toTypeName) => {\n    if (typeof value != \"number\" && typeof value != \"boolean\") {\n      throw new TypeError('Cannot convert \"' + embindRepr(value) + '\" to ' + toTypeName);\n    }\n    if (value < minRange || value > maxRange) {\n      throw new TypeError('Passing a number \"' + embindRepr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name + '\", which is outside the valid range [' + minRange + ', ' + maxRange + ']!');\n    }\n  };\n  var toWireType;\n  if (isUnsignedType) {\n    toWireType = function (destructors, value) {\n      checkAssertions(value, this.name);\n      return value >>> 0;\n    };\n  } else {\n    toWireType = function (destructors, value) {\n      checkAssertions(value, this.name);\n      // The VM will perform JS to Wasm value conversion, according to the spec:\n      // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\n      return value;\n    };\n  }\n  registerType(primitiveType, {\n    name: name,\n    'fromWireType': fromWireType,\n    'toWireType': toWireType,\n    'argPackAdvance': 8,\n    'readValueFromPointer': integerReadValueFromPointer(name, shift, minRange !== 0),\n    destructorFunction: null // This type does not need a destructor\n  });\n}\n\nfunction __embind_register_memory_view(rawType, dataTypeIndex, name) {\n  var typeMapping = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];\n  var TA = typeMapping[dataTypeIndex];\n  function decodeMemoryView(handle) {\n    handle = handle >> 2;\n    var heap = HEAPU32;\n    var size = heap[handle]; // in elements\n    var data = heap[handle + 1]; // byte offset into emscripten heap\n    return new TA(heap.buffer, data, size);\n  }\n  name = readLatin1String(name);\n  registerType(rawType, {\n    name: name,\n    'fromWireType': decodeMemoryView,\n    'argPackAdvance': 8,\n    'readValueFromPointer': decodeMemoryView\n  }, {\n    ignoreDuplicateRegistrations: true\n  });\n}\nfunction stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n  // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\n  // undefined and false each don't write out any bytes.\n  if (!(maxBytesToWrite > 0)) return 0;\n  var startIdx = outIdx;\n  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n    // unit, not a Unicode code point of the character! So decode\n    // UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\n    // and https://www.ietf.org/rfc/rfc2279.txt\n    // and https://tools.ietf.org/html/rfc3629\n    var u = str.charCodeAt(i); // possibly a lead surrogate\n    if (u >= 0xD800 && u <= 0xDFFF) {\n      var u1 = str.charCodeAt(++i);\n      u = 0x10000 + ((u & 0x3FF) << 10) | u1 & 0x3FF;\n    }\n    if (u <= 0x7F) {\n      if (outIdx >= endIdx) break;\n      heap[outIdx++] = u;\n    } else if (u <= 0x7FF) {\n      if (outIdx + 1 >= endIdx) break;\n      heap[outIdx++] = 0xC0 | u >> 6;\n      heap[outIdx++] = 0x80 | u & 63;\n    } else if (u <= 0xFFFF) {\n      if (outIdx + 2 >= endIdx) break;\n      heap[outIdx++] = 0xE0 | u >> 12;\n      heap[outIdx++] = 0x80 | u >> 6 & 63;\n      heap[outIdx++] = 0x80 | u & 63;\n    } else {\n      if (outIdx + 3 >= endIdx) break;\n      if (u > 0x10FFFF) warnOnce('Invalid Unicode code point ' + ptrToString(u) + ' encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).');\n      heap[outIdx++] = 0xF0 | u >> 18;\n      heap[outIdx++] = 0x80 | u >> 12 & 63;\n      heap[outIdx++] = 0x80 | u >> 6 & 63;\n      heap[outIdx++] = 0x80 | u & 63;\n    }\n  }\n  // Null-terminate the pointer to the buffer.\n  heap[outIdx] = 0;\n  return outIdx - startIdx;\n}\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n}\nfunction lengthBytesUTF8(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n    // unit, not a Unicode code point of the character! So decode\n    // UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var c = str.charCodeAt(i); // possibly a lead surrogate\n    if (c <= 0x7F) {\n      len++;\n    } else if (c <= 0x7FF) {\n      len += 2;\n    } else if (c >= 0xD800 && c <= 0xDFFF) {\n      len += 4;\n      ++i;\n    } else {\n      len += 3;\n    }\n  }\n  return len;\n}\nvar UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n\n/**\n * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\n * array that contains uint8 values, returns a copy of that string as a\n * Javascript String object.\n * heapOrArray is either a regular array, or a JavaScript typed array view.\n * @param {number} idx\n * @param {number=} maxBytesToRead\n * @return {string}\n */\nfunction UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n  var endIdx = idx + maxBytesToRead;\n  var endPtr = idx;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on\n  // null terminator by itself.  Also, use the length info to avoid running tiny\n  // strings through TextDecoder, since .subarray() allocates garbage.\n  // (As a tiny code save trick, compare endPtr against endIdx using a negation,\n  // so that undefined means Infinity)\n  while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n  if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n    return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n  }\n  var str = '';\n  // If building with TextDecoder, we have already computed the string length\n  // above, so test loop end condition against that\n  while (idx < endPtr) {\n    // For UTF8 byte structure, see:\n    // http://en.wikipedia.org/wiki/UTF-8#Description\n    // https://www.ietf.org/rfc/rfc2279.txt\n    // https://tools.ietf.org/html/rfc3629\n    var u0 = heapOrArray[idx++];\n    if (!(u0 & 0x80)) {\n      str += String.fromCharCode(u0);\n      continue;\n    }\n    var u1 = heapOrArray[idx++] & 63;\n    if ((u0 & 0xE0) == 0xC0) {\n      str += String.fromCharCode((u0 & 31) << 6 | u1);\n      continue;\n    }\n    var u2 = heapOrArray[idx++] & 63;\n    if ((u0 & 0xF0) == 0xE0) {\n      u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n    } else {\n      if ((u0 & 0xF8) != 0xF0) warnOnce('Invalid UTF-8 leading byte ' + ptrToString(u0) + ' encountered when deserializing a UTF-8 string in wasm memory to a JS string!');\n      u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;\n    }\n    if (u0 < 0x10000) {\n      str += String.fromCharCode(u0);\n    } else {\n      var ch = u0 - 0x10000;\n      str += String.fromCharCode(0xD800 | ch >> 10, 0xDC00 | ch & 0x3FF);\n    }\n  }\n  return str;\n}\n\n/**\n * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\n * emscripten HEAP, returns a copy of that string as a Javascript String object.\n *\n * @param {number} ptr\n * @param {number=} maxBytesToRead - An optional length that specifies the\n *   maximum number of bytes to read. You can omit this parameter to scan the\n *   string until the first \u0000 byte. If maxBytesToRead is passed, and the string\n *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\n *   string will cut short at that byte index (i.e. maxBytesToRead will not\n *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\n *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\n *   JS JIT optimizations off, so it is worth to consider consistently using one\n * @return {string}\n */\n_c3 = UTF8ArrayToString;\nfunction UTF8ToString(ptr, maxBytesToRead) {\n  assert(typeof ptr == 'number');\n  return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n}\n_c4 = UTF8ToString;\nfunction __embind_register_std_string(rawType, name) {\n  name = readLatin1String(name);\n  var stdStringIsUTF8\n  //process only std::string bindings with UTF8 support, in contrast to e.g. std::basic_string<unsigned char>\n  = name === \"std::string\";\n  registerType(rawType, {\n    name: name,\n    'fromWireType': function (value) {\n      var length = HEAPU32[value >> 2];\n      var payload = value + 4;\n      var str;\n      if (stdStringIsUTF8) {\n        var decodeStartPtr = payload;\n        // Looping here to support possible embedded '0' bytes\n        for (var i = 0; i <= length; ++i) {\n          var currentBytePtr = payload + i;\n          if (i == length || HEAPU8[currentBytePtr] == 0) {\n            var maxRead = currentBytePtr - decodeStartPtr;\n            var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n            if (str === undefined) {\n              str = stringSegment;\n            } else {\n              str += String.fromCharCode(0);\n              str += stringSegment;\n            }\n            decodeStartPtr = currentBytePtr + 1;\n          }\n        }\n      } else {\n        var a = new Array(length);\n        for (var i = 0; i < length; ++i) {\n          a[i] = String.fromCharCode(HEAPU8[payload + i]);\n        }\n        str = a.join('');\n      }\n      _free(value);\n      return str;\n    },\n    'toWireType': function (destructors, value) {\n      if (value instanceof ArrayBuffer) {\n        value = new Uint8Array(value);\n      }\n      var length;\n      var valueIsOfTypeString = typeof value == 'string';\n      if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n        throwBindingError('Cannot pass non-string to std::string');\n      }\n      if (stdStringIsUTF8 && valueIsOfTypeString) {\n        length = lengthBytesUTF8(value);\n      } else {\n        length = value.length;\n      }\n\n      // assumes 4-byte alignment\n      var base = _malloc(4 + length + 1);\n      var ptr = base + 4;\n      HEAPU32[base >> 2] = length;\n      if (stdStringIsUTF8 && valueIsOfTypeString) {\n        stringToUTF8(value, ptr, length + 1);\n      } else {\n        if (valueIsOfTypeString) {\n          for (var i = 0; i < length; ++i) {\n            var charCode = value.charCodeAt(i);\n            if (charCode > 255) {\n              _free(ptr);\n              throwBindingError('String has UTF-16 code units that do not fit in 8 bits');\n            }\n            HEAPU8[ptr + i] = charCode;\n          }\n        } else {\n          for (var i = 0; i < length; ++i) {\n            HEAPU8[ptr + i] = value[i];\n          }\n        }\n      }\n      if (destructors !== null) {\n        destructors.push(_free, base);\n      }\n      return base;\n    },\n    'argPackAdvance': 8,\n    'readValueFromPointer': simpleReadValueFromPointer,\n    destructorFunction: function (ptr) {\n      _free(ptr);\n    }\n  });\n}\nvar UTF16Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf-16le') : undefined;\n;\nfunction UTF16ToString(ptr, maxBytesToRead) {\n  assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');\n  var endPtr = ptr;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on\n  // null terminator by itself.\n  // Also, use the length info to avoid running tiny strings through\n  // TextDecoder, since .subarray() allocates garbage.\n  var idx = endPtr >> 1;\n  var maxIdx = idx + maxBytesToRead / 2;\n  // If maxBytesToRead is not passed explicitly, it will be undefined, and this\n  // will always evaluate to true. This saves on code size.\n  while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;\n  endPtr = idx << 1;\n  if (endPtr - ptr > 32 && UTF16Decoder) return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n\n  // Fallback: decode without UTF16Decoder\n  var str = '';\n\n  // If maxBytesToRead is not passed explicitly, it will be undefined, and the\n  // for-loop's condition will always evaluate to true. The loop is then\n  // terminated on the first null char.\n  for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n    var codeUnit = HEAP16[ptr + i * 2 >> 1];\n    if (codeUnit == 0) break;\n    // fromCharCode constructs a character from a UTF-16 code unit, so we can\n    // pass the UTF16 string right through.\n    str += String.fromCharCode(codeUnit);\n  }\n  return str;\n}\n_c5 = UTF16ToString;\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\n  assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n  if (maxBytesToWrite === undefined) {\n    maxBytesToWrite = 0x7FFFFFFF;\n  }\n  if (maxBytesToWrite < 2) return 0;\n  maxBytesToWrite -= 2; // Null terminator.\n  var startPtr = outPtr;\n  var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n  for (var i = 0; i < numCharsToWrite; ++i) {\n    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n    HEAP16[outPtr >> 1] = codeUnit;\n    outPtr += 2;\n  }\n  // Null-terminate the pointer to the HEAP.\n  HEAP16[outPtr >> 1] = 0;\n  return outPtr - startPtr;\n}\nfunction lengthBytesUTF16(str) {\n  return str.length * 2;\n}\nfunction UTF32ToString(ptr, maxBytesToRead) {\n  assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');\n  var i = 0;\n  var str = '';\n  // If maxBytesToRead is not passed explicitly, it will be undefined, and this\n  // will always evaluate to true. This saves on code size.\n  while (!(i >= maxBytesToRead / 4)) {\n    var utf32 = HEAP32[ptr + i * 4 >> 2];\n    if (utf32 == 0) break;\n    ++i;\n    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    if (utf32 >= 0x10000) {\n      var ch = utf32 - 0x10000;\n      str += String.fromCharCode(0xD800 | ch >> 10, 0xDC00 | ch & 0x3FF);\n    } else {\n      str += String.fromCharCode(utf32);\n    }\n  }\n  return str;\n}\n_c6 = UTF32ToString;\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\n  assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n  if (maxBytesToWrite === undefined) {\n    maxBytesToWrite = 0x7FFFFFFF;\n  }\n  if (maxBytesToWrite < 4) return 0;\n  var startPtr = outPtr;\n  var endPtr = startPtr + maxBytesToWrite - 4;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {\n      var trailSurrogate = str.charCodeAt(++i);\n      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | trailSurrogate & 0x3FF;\n    }\n    HEAP32[outPtr >> 2] = codeUnit;\n    outPtr += 4;\n    if (outPtr + 4 > endPtr) break;\n  }\n  // Null-terminate the pointer to the HEAP.\n  HEAP32[outPtr >> 2] = 0;\n  return outPtr - startPtr;\n}\nfunction lengthBytesUTF32(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var codeUnit = str.charCodeAt(i);\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.\n    len += 4;\n  }\n  return len;\n}\nfunction __embind_register_std_wstring(rawType, charSize, name) {\n  name = readLatin1String(name);\n  var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n  if (charSize === 2) {\n    decodeString = UTF16ToString;\n    encodeString = stringToUTF16;\n    lengthBytesUTF = lengthBytesUTF16;\n    getHeap = () => HEAPU16;\n    shift = 1;\n  } else if (charSize === 4) {\n    decodeString = UTF32ToString;\n    encodeString = stringToUTF32;\n    lengthBytesUTF = lengthBytesUTF32;\n    getHeap = () => HEAPU32;\n    shift = 2;\n  }\n  registerType(rawType, {\n    name: name,\n    'fromWireType': function (value) {\n      // Code mostly taken from _embind_register_std_string fromWireType\n      var length = HEAPU32[value >> 2];\n      var HEAP = getHeap();\n      var str;\n      var decodeStartPtr = value + 4;\n      // Looping here to support possible embedded '0' bytes\n      for (var i = 0; i <= length; ++i) {\n        var currentBytePtr = value + 4 + i * charSize;\n        if (i == length || HEAP[currentBytePtr >> shift] == 0) {\n          var maxReadBytes = currentBytePtr - decodeStartPtr;\n          var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n          if (str === undefined) {\n            str = stringSegment;\n          } else {\n            str += String.fromCharCode(0);\n            str += stringSegment;\n          }\n          decodeStartPtr = currentBytePtr + charSize;\n        }\n      }\n      _free(value);\n      return str;\n    },\n    'toWireType': function (destructors, value) {\n      if (!(typeof value == 'string')) {\n        throwBindingError('Cannot pass non-string to C++ string type ' + name);\n      }\n\n      // assumes 4-byte alignment\n      var length = lengthBytesUTF(value);\n      var ptr = _malloc(4 + length + charSize);\n      HEAPU32[ptr >> 2] = length >> shift;\n      encodeString(value, ptr + 4, length + charSize);\n      if (destructors !== null) {\n        destructors.push(_free, ptr);\n      }\n      return ptr;\n    },\n    'argPackAdvance': 8,\n    'readValueFromPointer': simpleReadValueFromPointer,\n    destructorFunction: function (ptr) {\n      _free(ptr);\n    }\n  });\n}\nfunction __embind_register_void(rawType, name) {\n  name = readLatin1String(name);\n  registerType(rawType, {\n    isVoid: true,\n    // void return values can be optimized out sometimes\n    name: name,\n    'argPackAdvance': 0,\n    'fromWireType': function () {\n      return undefined;\n    },\n    'toWireType': function (destructors, o) {\n      // TODO: assert if anything else is given?\n      return undefined;\n    }\n  });\n}\nfunction _emscripten_memcpy_big(dest, src, num) {\n  HEAPU8.copyWithin(dest, src, src + num);\n}\nfunction getHeapMax() {\n  return HEAPU8.length;\n}\nfunction abortOnCannotGrowMemory(requestedSize) {\n  abort('Cannot enlarge memory arrays to size ' + requestedSize + ' bytes (OOM). Either (1) compile with -sINITIAL_MEMORY=X with X higher than the current value ' + HEAP8.length + ', (2) compile with -sALLOW_MEMORY_GROWTH which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with -sABORTING_MALLOC=0');\n}\nfunction _emscripten_resize_heap(requestedSize) {\n  var oldSize = HEAPU8.length;\n  requestedSize = requestedSize >>> 0;\n  abortOnCannotGrowMemory(requestedSize);\n}\nvar SYSCALLS = {\n  varargs: undefined,\n  get: function () {\n    assert(SYSCALLS.varargs != undefined);\n    SYSCALLS.varargs += 4;\n    var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];\n    return ret;\n  },\n  getStr: function (ptr) {\n    var ret = UTF8ToString(ptr);\n    return ret;\n  }\n};\nfunction _fd_close(fd) {\n  abort('fd_close called without SYSCALLS_REQUIRE_FILESYSTEM');\n}\nfunction convertI32PairToI53Checked(lo, hi) {\n  assert(lo == lo >>> 0 || lo == (lo | 0)); // lo should either be a i32 or a u32\n  assert(hi === (hi | 0)); // hi should be a i32\n  return hi + 0x200000 >>> 0 < 0x400001 - !!lo ? (lo >>> 0) + hi * 4294967296 : NaN;\n}\nfunction _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n  return 70;\n}\nvar printCharBuffers = [null, [], []];\nfunction printChar(stream, curr) {\n  var buffer = printCharBuffers[stream];\n  assert(buffer);\n  if (curr === 0 || curr === 10) {\n    (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n    buffer.length = 0;\n  } else {\n    buffer.push(curr);\n  }\n}\nfunction flush_NO_FILESYSTEM() {\n  // flush anything remaining in the buffers during shutdown\n  _fflush(0);\n  if (printCharBuffers[1].length) printChar(1, 10);\n  if (printCharBuffers[2].length) printChar(2, 10);\n}\nfunction _fd_write(fd, iov, iovcnt, pnum) {\n  // hack to support printf in SYSCALLS_REQUIRE_FILESYSTEM=0\n  var num = 0;\n  for (var i = 0; i < iovcnt; i++) {\n    var ptr = HEAPU32[iov >> 2];\n    var len = HEAPU32[iov + 4 >> 2];\n    iov += 8;\n    for (var j = 0; j < len; j++) {\n      printChar(fd, HEAPU8[ptr + j]);\n    }\n    num += len;\n  }\n  HEAPU32[pnum >> 2] = num;\n  return 0;\n}\nfunction getCFunc(ident) {\n  var func = Module['_' + ident]; // closure exported function\n  assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');\n  return func;\n}\nfunction writeArrayToMemory(array, buffer) {\n  assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)');\n  HEAP8.set(array, buffer);\n}\nfunction stringToUTF8OnStack(str) {\n  var size = lengthBytesUTF8(str) + 1;\n  var ret = stackAlloc(size);\n  stringToUTF8(str, ret, size);\n  return ret;\n}\n\n/**\n * @param {string|null=} returnType\n * @param {Array=} argTypes\n * @param {Arguments|Array=} args\n * @param {Object=} opts\n */\nfunction ccall(ident, returnType, argTypes, args, opts) {\n  // For fast lookup of conversion functions\n  var toC = {\n    'string': str => {\n      var ret = 0;\n      if (str !== null && str !== undefined && str !== 0) {\n        // null string\n        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\\0'\n        ret = stringToUTF8OnStack(str);\n      }\n      return ret;\n    },\n    'array': arr => {\n      var ret = stackAlloc(arr.length);\n      writeArrayToMemory(arr, ret);\n      return ret;\n    }\n  };\n  function convertReturnValue(ret) {\n    if (returnType === 'string') {\n      return UTF8ToString(ret);\n    }\n    if (returnType === 'boolean') return Boolean(ret);\n    return ret;\n  }\n  var func = getCFunc(ident);\n  var cArgs = [];\n  var stack = 0;\n  assert(returnType !== 'array', 'Return type should not be \"array\".');\n  if (args) {\n    for (var i = 0; i < args.length; i++) {\n      var converter = toC[argTypes[i]];\n      if (converter) {\n        if (stack === 0) stack = stackSave();\n        cArgs[i] = converter(args[i]);\n      } else {\n        cArgs[i] = args[i];\n      }\n    }\n  }\n  var ret = func.apply(null, cArgs);\n  function onDone(ret) {\n    if (stack !== 0) stackRestore(stack);\n    return convertReturnValue(ret);\n  }\n  ret = onDone(ret);\n  return ret;\n}\n\n/**\n * @param {string=} returnType\n * @param {Array=} argTypes\n * @param {Object=} opts\n */\nfunction cwrap(ident, returnType, argTypes, opts) {\n  return function () {\n    return ccall(ident, returnType, argTypes, arguments, opts);\n  };\n}\nembind_init_charCodes();\nBindingError = Module['BindingError'] = extendError(Error, 'BindingError');\n;\nInternalError = Module['InternalError'] = extendError(Error, 'InternalError');\n;\ninit_emval();\n;\nUnboundTypeError = Module['UnboundTypeError'] = extendError(Error, 'UnboundTypeError');\n;\nfunction checkIncomingModuleAPI() {\n  ignoredModuleProp('fetchSettings');\n}\nvar wasmImports = {\n  \"_embind_register_bigint\": __embind_register_bigint,\n  \"_embind_register_bool\": __embind_register_bool,\n  \"_embind_register_emval\": __embind_register_emval,\n  \"_embind_register_float\": __embind_register_float,\n  \"_embind_register_function\": __embind_register_function,\n  \"_embind_register_integer\": __embind_register_integer,\n  \"_embind_register_memory_view\": __embind_register_memory_view,\n  \"_embind_register_std_string\": __embind_register_std_string,\n  \"_embind_register_std_wstring\": __embind_register_std_wstring,\n  \"_embind_register_void\": __embind_register_void,\n  \"emscripten_memcpy_big\": _emscripten_memcpy_big,\n  \"emscripten_resize_heap\": _emscripten_resize_heap,\n  \"fd_close\": _fd_close,\n  \"fd_seek\": _fd_seek,\n  \"fd_write\": _fd_write\n};\nvar asm = createWasm();\n/** @type {function(...*):?} */\nvar ___wasm_call_ctors = createExportWrapper(\"__wasm_call_ctors\");\n/** @type {function(...*):?} */\nvar ___getTypeName = Module[\"___getTypeName\"] = createExportWrapper(\"__getTypeName\");\n/** @type {function(...*):?} */\nvar __embind_initialize_bindings = Module[\"__embind_initialize_bindings\"] = createExportWrapper(\"_embind_initialize_bindings\");\n/** @type {function(...*):?} */\nvar ___errno_location = createExportWrapper(\"__errno_location\");\n/** @type {function(...*):?} */\nvar _fflush = Module[\"_fflush\"] = createExportWrapper(\"fflush\");\n/** @type {function(...*):?} */\nvar _malloc = createExportWrapper(\"malloc\");\n/** @type {function(...*):?} */\nvar _free = createExportWrapper(\"free\");\n/** @type {function(...*):?} */\nvar _emscripten_stack_init = function () {\n  return (_emscripten_stack_init = Module[\"asm\"][\"emscripten_stack_init\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_free = function () {\n  return (_emscripten_stack_get_free = Module[\"asm\"][\"emscripten_stack_get_free\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_base = function () {\n  return (_emscripten_stack_get_base = Module[\"asm\"][\"emscripten_stack_get_base\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_end = function () {\n  return (_emscripten_stack_get_end = Module[\"asm\"][\"emscripten_stack_get_end\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar stackSave = createExportWrapper(\"stackSave\");\n/** @type {function(...*):?} */\nvar stackRestore = createExportWrapper(\"stackRestore\");\n/** @type {function(...*):?} */\nvar stackAlloc = createExportWrapper(\"stackAlloc\");\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_current = function () {\n  return (_emscripten_stack_get_current = Module[\"asm\"][\"emscripten_stack_get_current\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = createExportWrapper(\"dynCall_jiji\");\n\n// include: postamble.js\n// === Auto-generated postamble setup entry stuff ===\n\nModule[\"ccall\"] = ccall;\nModule[\"cwrap\"] = cwrap;\nvar missingLibrarySymbols = ['zeroMemory', 'exitJS', 'emscripten_realloc_buffer', 'isLeapYear', 'ydayFromDate', 'arraySum', 'addDays', 'setErrNo', 'inetPton4', 'inetNtop4', 'inetPton6', 'inetNtop6', 'readSockaddr', 'writeSockaddr', 'getHostByName', 'initRandomFill', 'randomFill', 'traverseStack', 'getCallstack', 'emscriptenLog', 'convertPCtoSourceLocation', 'readEmAsmArgs', 'jstoi_q', 'jstoi_s', 'getExecutableName', 'listenOnce', 'autoResumeAudioContext', 'handleException', 'runtimeKeepalivePush', 'runtimeKeepalivePop', 'callUserCallback', 'maybeExit', 'safeSetTimeout', 'asmjsMangle', 'asyncLoad', 'alignMemory', 'mmapAlloc', 'getNativeTypeSize', 'STACK_SIZE', 'STACK_ALIGN', 'POINTER_SIZE', 'ASSERTIONS', 'writeI53ToI64', 'writeI53ToI64Clamped', 'writeI53ToI64Signaling', 'writeI53ToU64Clamped', 'writeI53ToU64Signaling', 'readI53FromI64', 'readI53FromU64', 'convertI32PairToI53', 'convertU32PairToI53', 'uleb128Encode', 'sigToWasmTypes', 'generateFuncType', 'convertJsFunctionToWasm', 'getEmptyTableSlot', 'updateTableMap', 'getFunctionAddress', 'addFunction', 'removeFunction', 'reallyNegative', 'unSign', 'strLen', 'reSign', 'formatString', 'intArrayFromString', 'intArrayToString', 'AsciiToString', 'stringToAscii', 'stringToNewUTF8', 'getSocketFromFD', 'getSocketAddress', 'registerKeyEventCallback', 'maybeCStringToJsString', 'findEventTarget', 'findCanvasEventTarget', 'getBoundingClientRect', 'fillMouseEventData', 'registerMouseEventCallback', 'registerWheelEventCallback', 'registerUiEventCallback', 'registerFocusEventCallback', 'fillDeviceOrientationEventData', 'registerDeviceOrientationEventCallback', 'fillDeviceMotionEventData', 'registerDeviceMotionEventCallback', 'screenOrientation', 'fillOrientationChangeEventData', 'registerOrientationChangeEventCallback', 'fillFullscreenChangeEventData', 'registerFullscreenChangeEventCallback', 'JSEvents_requestFullscreen', 'JSEvents_resizeCanvasForFullscreen', 'registerRestoreOldStyle', 'hideEverythingExceptGivenElement', 'restoreHiddenElements', 'setLetterbox', 'softFullscreenResizeWebGLRenderTarget', 'doRequestFullscreen', 'fillPointerlockChangeEventData', 'registerPointerlockChangeEventCallback', 'registerPointerlockErrorEventCallback', 'requestPointerLock', 'fillVisibilityChangeEventData', 'registerVisibilityChangeEventCallback', 'registerTouchEventCallback', 'fillGamepadEventData', 'registerGamepadEventCallback', 'registerBeforeUnloadEventCallback', 'fillBatteryEventData', 'battery', 'registerBatteryEventCallback', 'setCanvasElementSize', 'getCanvasElementSize', 'demangle', 'demangleAll', 'jsStackTrace', 'stackTrace', 'getEnvStrings', 'checkWasiClock', 'wasiRightsToMuslOFlags', 'wasiOFlagsToMuslOFlags', 'createDyncallWrapper', 'setImmediateWrapped', 'clearImmediateWrapped', 'polyfillSetImmediate', 'getPromise', 'makePromise', 'makePromiseCallback', 'ExceptionInfo', 'exception_addRef', 'exception_decRef', 'setMainLoop', '_setNetworkCallback', 'heapObjectForWebGLType', 'heapAccessShiftForWebGLHeap', 'webgl_enable_ANGLE_instanced_arrays', 'webgl_enable_OES_vertex_array_object', 'webgl_enable_WEBGL_draw_buffers', 'webgl_enable_WEBGL_multi_draw', 'emscriptenWebGLGet', 'computeUnpackAlignedImageSize', 'colorChannelsInGlTextureFormat', 'emscriptenWebGLGetTexPixelData', '__glGenObject', 'emscriptenWebGLGetUniform', 'webglGetUniformLocation', 'webglPrepareUniformLocationsBeforeFirstUse', 'webglGetLeftBracePos', 'emscriptenWebGLGetVertexAttrib', '__glGetActiveAttribOrUniform', 'writeGLArray', 'registerWebGlEventCallback', 'runAndAbortIfError', 'SDL_unicode', 'SDL_ttfContext', 'SDL_audio', 'GLFW_Window', 'ALLOC_NORMAL', 'ALLOC_STACK', 'allocate', 'writeStringToMemory', 'writeAsciiToMemory', 'init_embind', 'getBasestPointer', 'registerInheritedInstance', 'unregisterInheritedInstance', 'getInheritedInstance', 'getInheritedInstanceCount', 'getLiveInheritedInstances', 'requireRegisteredType', 'enumReadValueFromPointer', 'genericPointerToWireType', 'constNoSmartPtrRawPointerToWireType', 'nonConstNoSmartPtrRawPointerToWireType', 'init_RegisteredPointer', 'RegisteredPointer', 'RegisteredPointer_getPointee', 'RegisteredPointer_destructor', 'RegisteredPointer_deleteObject', 'RegisteredPointer_fromWireType', 'runDestructor', 'releaseClassHandle', 'detachFinalizer', 'attachFinalizer', 'makeClassHandle', 'init_ClassHandle', 'ClassHandle', 'ClassHandle_isAliasOf', 'throwInstanceAlreadyDeleted', 'ClassHandle_clone', 'ClassHandle_delete', 'ClassHandle_isDeleted', 'ClassHandle_deleteLater', 'flushPendingDeletes', 'setDelayFunction', 'RegisteredClass', 'shallowCopyInternalPointer', 'downcastPointer', 'upcastPointer', 'validateThis', 'getStringOrSymbol', 'craftEmvalAllocator', 'emval_get_global', 'emval_lookupTypes', 'emval_allocateDestructors', 'emval_addMethodCaller'];\nmissingLibrarySymbols.forEach(missingLibrarySymbol);\nvar unexportedSymbols = ['run', 'addOnPreRun', 'addOnInit', 'addOnPreMain', 'addOnExit', 'addOnPostRun', 'addRunDependency', 'removeRunDependency', 'FS_createFolder', 'FS_createPath', 'FS_createDataFile', 'FS_createPreloadedFile', 'FS_createLazyFile', 'FS_createLink', 'FS_createDevice', 'FS_unlink', 'out', 'err', 'callMain', 'abort', 'keepRuntimeAlive', 'wasmMemory', 'stackAlloc', 'stackSave', 'stackRestore', 'getTempRet0', 'setTempRet0', 'writeStackCookie', 'checkStackCookie', 'ptrToString', 'getHeapMax', 'abortOnCannotGrowMemory', 'ENV', 'MONTH_DAYS_REGULAR', 'MONTH_DAYS_LEAP', 'MONTH_DAYS_REGULAR_CUMULATIVE', 'MONTH_DAYS_LEAP_CUMULATIVE', 'ERRNO_CODES', 'ERRNO_MESSAGES', 'DNS', 'Protocols', 'Sockets', 'timers', 'warnOnce', 'UNWIND_CACHE', 'readEmAsmArgsArray', 'dynCallLegacy', 'getDynCaller', 'dynCall', 'HandleAllocator', 'convertI32PairToI53Checked', 'getCFunc', 'freeTableIndexes', 'functionsInTableMap', 'setValue', 'getValue', 'PATH', 'PATH_FS', 'UTF8Decoder', 'UTF8ArrayToString', 'UTF8ToString', 'stringToUTF8Array', 'stringToUTF8', 'lengthBytesUTF8', 'UTF16Decoder', 'UTF16ToString', 'stringToUTF16', 'lengthBytesUTF16', 'UTF32ToString', 'stringToUTF32', 'lengthBytesUTF32', 'stringToUTF8OnStack', 'writeArrayToMemory', 'SYSCALLS', 'JSEvents', 'specialHTMLTargets', 'currentFullscreenStrategy', 'restoreOldWindowedStyle', 'ExitStatus', 'flush_NO_FILESYSTEM', 'dlopenMissingError', 'promiseMap', 'uncaughtExceptionCount', 'exceptionLast', 'exceptionCaught', 'Browser', 'wget', 'FS', 'MEMFS', 'TTY', 'PIPEFS', 'SOCKFS', 'tempFixedLengthArray', 'miniTempWebGLFloatBuffers', 'miniTempWebGLIntBuffers', 'GL', 'emscripten_webgl_power_preferences', 'AL', 'GLUT', 'EGL', 'GLEW', 'IDBStore', 'SDL', 'SDL_gfx', 'GLFW', 'allocateUTF8', 'allocateUTF8OnStack', 'InternalError', 'BindingError', 'UnboundTypeError', 'PureVirtualError', 'throwInternalError', 'throwBindingError', 'throwUnboundTypeError', 'ensureOverloadTable', 'exposePublicSymbol', 'replacePublicSymbol', 'extendError', 'createNamedFunction', 'embindRepr', 'registeredInstances', 'registeredTypes', 'awaitingDependencies', 'typeDependencies', 'registeredPointers', 'registerType', 'whenDependentTypesAreResolved', 'embind_charCodes', 'embind_init_charCodes', 'readLatin1String', 'getTypeName', 'heap32VectorToArray', 'getShiftFromSize', 'integerReadValueFromPointer', 'floatReadValueFromPointer', 'simpleReadValueFromPointer', 'runDestructors', 'newFunc', 'craftInvokerFunction', 'embind__requireFunction', 'tupleRegistrations', 'structRegistrations', 'finalizationRegistry', 'detachFinalizer_deps', 'deletionQueue', 'delayFunction', 'char_0', 'char_9', 'makeLegalFunctionName', 'emval_handles', 'emval_symbols', 'init_emval', 'count_emval_handles', 'Emval', 'emval_newers', 'emval_methodCallers', 'emval_registeredMethods'];\nunexportedSymbols.forEach(unexportedRuntimeSymbol);\nvar calledRun;\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!calledRun) run();\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n};\n\nfunction stackCheckInit() {\n  // This is normally called automatically during __wasm_call_ctors but need to\n  // get these values before even running any of the ctors so we call it redundantly\n  // here.\n  _emscripten_stack_init();\n  // TODO(sbc): Move writeStackCookie to native to to avoid this.\n  writeStackCookie();\n}\nfunction run() {\n  if (runDependencies > 0) {\n    return;\n  }\n  stackCheckInit();\n  preRun();\n\n  // a preRun added a dependency, run will be called later\n  if (runDependencies > 0) {\n    return;\n  }\n  function doRun() {\n    // run may have just been called through dependencies being fulfilled just in this very frame,\n    // or while the async setStatus time below was happening\n    if (calledRun) return;\n    calledRun = true;\n    Module['calledRun'] = true;\n    if (ABORT) return;\n    initRuntime();\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n    assert(!Module['_main'], 'compiled without a main, but one is present. if you added it from JS, use Module[\"onRuntimeInitialized\"]');\n    postRun();\n  }\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function () {\n      setTimeout(function () {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else {\n    doRun();\n  }\n  checkStackCookie();\n}\nfunction checkUnflushedContent() {\n  // Compiler settings do not allow exiting the runtime, so flushing\n  // the streams is not possible. but in ASSERTIONS mode we check\n  // if there was something to flush, and if so tell the user they\n  // should request that the runtime be exitable.\n  // Normally we would not even include flush() at all, but in ASSERTIONS\n  // builds we do so just for this check, and here we see if there is any\n  // content to flush, that is, we check if there would have been\n  // something a non-ASSERTIONS build would have not seen.\n  // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0\n  // mode (which has its own special function for this; otherwise, all\n  // the code is inside libc)\n  var oldOut = out;\n  var oldErr = err;\n  var has = false;\n  out = err = x => {\n    has = true;\n  };\n  try {\n    // it doesn't matter if it fails\n    flush_NO_FILESYSTEM();\n  } catch (e) {}\n  out = oldOut;\n  err = oldErr;\n  if (has) {\n    warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.');\n    warnOnce('(this may also be due to not including full filesystem support - try building with -sFORCE_FILESYSTEM)');\n  }\n}\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\nrun();\n\n// end include: postamble.js\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ExitStatus\");\n$RefreshReg$(_c2, \"HandleAllocator\");\n$RefreshReg$(_c3, \"UTF8ArrayToString\");\n$RefreshReg$(_c4, \"UTF8ToString\");\n$RefreshReg$(_c5, \"UTF16ToString\");\n$RefreshReg$(_c6, \"UTF32ToString\");","map":{"version":3,"names":["Module","moduleOverrides","Object","assign","arguments_","thisProgram","quit_","status","toThrow","ENVIRONMENT_IS_WEB","window","ENVIRONMENT_IS_WORKER","importScripts","ENVIRONMENT_IS_NODE","process","versions","node","ENVIRONMENT_IS_SHELL","Error","scriptDirectory","locateFile","path","read_","readAsync","readBinary","setWindowTitle","release","name","nodeVersion","numericVersion","split","slice","minVersion","fs","require","nodePath","dirname","__dirname","filename","binary","isFileURI","URL","normalize","readFileSync","undefined","ret","buffer","Uint8Array","assert","onload","onerror","readFile","err","data","argv","length","replace","module","on","ex","ExitStatus","context","nodeMajor","reason","exitCode","read","shell_read","f","readbuffer","setTimeout","clearTimeout","globalThis","id","scriptArgs","arguments","quit","toLog","stack","print","console","log","warn","error","printErr","self","location","href","document","currentScript","src","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","title","out","bind","checkIncomingModuleAPI","legacyModuleProp","IDBFS","PROXYFS","WORKERFS","NODEFS","wasmBinary","noExitRuntime","WebAssembly","abort","wasmMemory","ABORT","EXITSTATUS","condition","text","HEAP","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","updateMemoryViews","b","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","prototype","subarray","set","wasmTable","writeStackCookie","max","_emscripten_stack_get_end","checkStackCookie","cookie1","cookie2","ptrToString","h16","h8","__ATPRERUN__","__ATINIT__","__ATEXIT__","__ATPOSTRUN__","runtimeInitialized","runtimeKeepaliveCounter","keepRuntimeAlive","preRun","addOnPreRun","shift","callRuntimeCallbacks","initRuntime","postRun","addOnPostRun","cb","unshift","addOnInit","addOnExit","Math","imul","fround","clz32","trunc","runDependencies","runDependencyWatcher","dependenciesFulfilled","runDependencyTracking","getUniqueRunDependency","orig","random","addRunDependency","setInterval","clearInterval","shown","dep","removeRunDependency","callback","what","e","RuntimeError","FS","init","createDataFile","createPreloadedFile","createLazyFile","mkdev","registerDevice","analyzePath","ErrnoError","dataURIPrefix","isDataURI","startsWith","createExportWrapper","fixedasm","displayName","asm","apply","wasmBinaryFile","getBinary","file","getBinaryPromise","binaryFile","fetch","credentials","then","catch","Promise","resolve","reject","instantiateArrayBuffer","imports","receiver","instantiate","instance","instantiateAsync","instantiateStreaming","result","createWasm","info","wasmImports","receiveInstance","exports","trueModule","receiveInstantiationResult","tempDouble","tempI64","prop","newName","getOwnPropertyDescriptor","defineProperty","configurable","get","ignoredModuleProp","isExportedByForceFilesystem","missingGlobal","sym","msg","warnOnce","missingLibrarySymbol","librarySymbol","unexportedRuntimeSymbol","dbg","message","_c","callbacks","getValue","ptr","type","endsWith","toString","padStart","setValue","value","abs","min","floor","ceil","__embind_register_bigint","primitiveType","size","minRange","maxRange","getShiftFromSize","TypeError","embind_init_charCodes","codes","Array","i","String","fromCharCode","embind_charCodes","readLatin1String","c","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","charCodeAt","createNamedFunction","body","extendError","baseErrorType","errorName","errorClass","create","constructor","BindingError","throwBindingError","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","forEach","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","hasOwnProperty","push","rawType","registeredInstance","options","ignoreDuplicateRegistrations","__embind_register_bool","trueValue","falseValue","fromWireType","wt","toWireType","destructors","o","readValueFromPointer","pointer","heap","destructorFunction","HandleAllocator","allocated","freelist","allocate","handle","pop","free","_c2","emval_handles","__emval_decref","reserved","refcount","count_emval_handles","count","init_emval","Emval","toValue","toHandle","simpleReadValueFromPointer","__embind_register_emval","rv","embindRepr","v","t","floatReadValueFromPointer","__embind_register_float","runDestructors","del","newFunc","argumentList","Function","dummy","obj","r","craftInvokerFunction","humanName","argTypes","classType","cppInvokerFunc","cppTargetFunc","isAsync","argCount","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","ensureOverloadTable","proto","methodName","overloadTable","prevFunc","exposePublicSymbol","numArguments","heap32VectorToArray","firstElement","array","replacePublicSymbol","dynCallLegacy","sig","args","substring","concat","call","wasmTableMirror","getWasmTableEntry","funcPtr","func","dynCall","includes","rtn","getDynCaller","argCache","embind__requireFunction","signature","rawFunction","makeDynCaller","fp","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","visit","map","join","__embind_register_function","rawArgTypesAddr","rawInvoker","fn","invokerArgsArray","integerReadValueFromPointer","signed","readS8FromPointer","readU8FromPointer","readS16FromPointer","readU16FromPointer","readS32FromPointer","readU32FromPointer","__embind_register_integer","bitshift","isUnsignedType","checkAssertions","toTypeName","__embind_register_memory_view","dataTypeIndex","typeMapping","TA","decodeMemoryView","stringToUTF8Array","str","outIdx","maxBytesToWrite","startIdx","endIdx","u","u1","stringToUTF8","outPtr","lengthBytesUTF8","len","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endPtr","decode","u0","u2","ch","_c3","UTF8ToString","_c4","__embind_register_std_string","stdStringIsUTF8","payload","decodeStartPtr","currentBytePtr","maxRead","stringSegment","a","ArrayBuffer","valueIsOfTypeString","Uint8ClampedArray","base","_malloc","charCode","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","_c5","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","_c6","stringToUTF32","trailSurrogate","lengthBytesUTF32","__embind_register_std_wstring","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","maxReadBytes","__embind_register_void","isVoid","_emscripten_memcpy_big","dest","num","copyWithin","getHeapMax","abortOnCannotGrowMemory","requestedSize","_emscripten_resize_heap","oldSize","SYSCALLS","varargs","getStr","_fd_close","fd","convertI32PairToI53Checked","lo","hi","NaN","_fd_seek","offset_low","offset_high","whence","newOffset","printCharBuffers","printChar","stream","curr","flush_NO_FILESYSTEM","_fflush","_fd_write","iov","iovcnt","pnum","j","getCFunc","ident","writeArrayToMemory","stringToUTF8OnStack","stackAlloc","ccall","returnType","opts","toC","arr","convertReturnValue","Boolean","cArgs","converter","stackSave","onDone","stackRestore","cwrap","___wasm_call_ctors","__embind_initialize_bindings","___errno_location","_emscripten_stack_init","_emscripten_stack_get_free","_emscripten_stack_get_base","_emscripten_stack_get_current","dynCall_jiji","missingLibrarySymbols","unexportedSymbols","calledRun","runCaller","run","stackCheckInit","doRun","checkUnflushedContent","oldOut","oldErr","has","x","$RefreshReg$"],"sources":["/Users/alexclevenger/lehighnumericalanalysis.com/src/add.js"],"sourcesContent":["// include: shell.js\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = typeof Module != 'undefined' ? Module : {};\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n\n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = Object.assign({}, Module);\n\nvar arguments_ = [];\nvar thisProgram = './this.program';\nvar quit_ = (status, toThrow) => {\n  throw toThrow;\n};\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n\n// Attempt to auto-detect the environment\nvar ENVIRONMENT_IS_WEB = typeof window == 'object';\nvar ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';\n// N.b. Electron.js environment is simultaneously a NODE-environment, but\n// also a web environment.\nvar ENVIRONMENT_IS_NODE = typeof process == 'object' && typeof process.versions == 'object' && typeof process.versions.node == 'string';\nvar ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\nif (Module['ENVIRONMENT']) {\n  throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)');\n}\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = '';\nfunction locateFile(path) {\n  if (Module['locateFile']) {\n    return Module['locateFile'](path, scriptDirectory);\n  }\n  return scriptDirectory + path;\n}\n\n// Hooks that are implemented differently in different runtime environments.\nvar read_,\n    readAsync,\n    readBinary,\n    setWindowTitle;\n\nif (ENVIRONMENT_IS_NODE) {\n  if (typeof process == 'undefined' || !process.release || process.release.name !== 'node') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n  var nodeVersion = process.versions.node;\n  var numericVersion = nodeVersion.split('.').slice(0, 3);\n  numericVersion = (numericVersion[0] * 10000) + (numericVersion[1] * 100) + (numericVersion[2].split('-')[0] * 1);\n  var minVersion = 101900;\n  if (numericVersion < 101900) {\n    throw new Error('This emscripten-generated code requires node v10.19.19.0 (detected v' + nodeVersion + ')');\n  }\n\n  // `require()` is no-op in an ESM module, use `createRequire()` to construct\n  // the require()` function.  This is only necessary for multi-environment\n  // builds, `-sENVIRONMENT=node` emits a static import declaration instead.\n  // TODO: Swap all `require()`'s with `import()`'s?\n  // These modules will usually be used on Node.js. Load them eagerly to avoid\n  // the complexity of lazy-loading.\n  var fs = require('fs');\n  var nodePath = require('path');\n\n  if (ENVIRONMENT_IS_WORKER) {\n    scriptDirectory = nodePath.dirname(scriptDirectory) + '/';\n  } else {\n    scriptDirectory = __dirname + '/';\n  }\n\n// include: node_shell_read.js\nread_ = (filename, binary) => {\n  // We need to re-wrap `file://` strings to URLs. Normalizing isn't\n  // necessary in that case, the path should already be absolute.\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  return fs.readFileSync(filename, binary ? undefined : 'utf8');\n};\n\nreadBinary = (filename) => {\n  var ret = read_(filename, true);\n  if (!ret.buffer) {\n    ret = new Uint8Array(ret);\n  }\n  assert(ret.buffer);\n  return ret;\n};\n\nreadAsync = (filename, onload, onerror) => {\n  // See the comment in the `read_` function.\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  fs.readFile(filename, function(err, data) {\n    if (err) onerror(err);\n    else onload(data.buffer);\n  });\n};\n\n// end include: node_shell_read.js\n  if (!Module['thisProgram'] && process.argv.length > 1) {\n    thisProgram = process.argv[1].replace(/\\\\/g, '/');\n  }\n\n  arguments_ = process.argv.slice(2);\n\n  if (typeof module != 'undefined') {\n    module['exports'] = Module;\n  }\n\n  process.on('uncaughtException', function(ex) {\n    // suppress ExitStatus exceptions from showing an error\n    if (ex !== 'unwind' && !(ex instanceof ExitStatus) && !(ex.context instanceof ExitStatus)) {\n      throw ex;\n    }\n  });\n\n  // Without this older versions of node (< v15) will log unhandled rejections\n  // but return 0, which is not normally the desired behaviour.  This is\n  // not be needed with node v15 and about because it is now the default\n  // behaviour:\n  // See https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode\n  var nodeMajor = process.versions.node.split(\".\")[0];\n  if (nodeMajor < 15) {\n    process.on('unhandledRejection', function(reason) { throw reason; });\n  }\n\n  quit_ = (status, toThrow) => {\n    process.exitCode = status;\n    throw toThrow;\n  };\n\n  Module['inspect'] = function () { return '[Emscripten Module object]'; };\n\n} else\nif (ENVIRONMENT_IS_SHELL) {\n\n  if ((typeof process == 'object' && typeof require === 'function') || typeof window == 'object' || typeof importScripts == 'function') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n  if (typeof read != 'undefined') {\n    read_ = function shell_read(f) {\n      return read(f);\n    };\n  }\n\n  readBinary = function readBinary(f) {\n    let data;\n    if (typeof readbuffer == 'function') {\n      return new Uint8Array(readbuffer(f));\n    }\n    data = read(f, 'binary');\n    assert(typeof data == 'object');\n    return data;\n  };\n\n  readAsync = function readAsync(f, onload, onerror) {\n    setTimeout(() => onload(readBinary(f)), 0);\n  };\n\n  if (typeof clearTimeout == 'undefined') {\n    globalThis.clearTimeout = (id) => {};\n  }\n\n  if (typeof scriptArgs != 'undefined') {\n    arguments_ = scriptArgs;\n  } else if (typeof arguments != 'undefined') {\n    arguments_ = arguments;\n  }\n\n  if (typeof quit == 'function') {\n    quit_ = (status, toThrow) => {\n      // Unlike node which has process.exitCode, d8 has no such mechanism. So we\n      // have no way to set the exit code and then let the program exit with\n      // that code when it naturally stops running (say, when all setTimeouts\n      // have completed). For that reason, we must call `quit` - the only way to\n      // set the exit code - but quit also halts immediately.  To increase\n      // consistency with node (and the web) we schedule the actual quit call\n      // using a setTimeout to give the current stack and any exception handlers\n      // a chance to run.  This enables features such as addOnPostRun (which\n      // expected to be able to run code after main returns).\n      setTimeout(() => {\n        if (!(toThrow instanceof ExitStatus)) {\n          let toLog = toThrow;\n          if (toThrow && typeof toThrow == 'object' && toThrow.stack) {\n            toLog = [toThrow, toThrow.stack];\n          }\n          err('exiting due to exception: ' + toLog);\n        }\n        quit(status);\n      });\n      throw toThrow;\n    };\n  }\n\n  if (typeof print != 'undefined') {\n    // Prefer to use print/printErr where they exist, as they usually work better.\n    if (typeof console == 'undefined') console = /** @type{!Console} */({});\n    console.log = /** @type{!function(this:Console, ...*): undefined} */ (print);\n    console.warn = console.error = /** @type{!function(this:Console, ...*): undefined} */ (typeof printErr != 'undefined' ? printErr : print);\n  }\n\n} else\n\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\n// ENVIRONMENT_IS_NODE.\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\n    scriptDirectory = self.location.href;\n  } else if (typeof document != 'undefined' && document.currentScript) { // web\n    scriptDirectory = document.currentScript.src;\n  }\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n  // otherwise, slice off the final part of the url to find the script directory.\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n  // and scriptDirectory will correctly be replaced with an empty string.\n  // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\n  // they are removed because they could contain a slash.\n  if (scriptDirectory.indexOf('blob:') !== 0) {\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf('/')+1);\n  } else {\n    scriptDirectory = '';\n  }\n\n  if (!(typeof window == 'object' || typeof importScripts == 'function')) throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n  // Differentiate the Web Worker from the Node Worker case, as reading must\n  // be done differently.\n  {\n// include: web_or_worker_shell_read.js\nread_ = (url) => {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, false);\n      xhr.send(null);\n      return xhr.responseText;\n  }\n\n  if (ENVIRONMENT_IS_WORKER) {\n    readBinary = (url) => {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, false);\n        xhr.responseType = 'arraybuffer';\n        xhr.send(null);\n        return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));\n    };\n  }\n\n  readAsync = (url, onload, onerror) => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onload = () => {\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n        onload(xhr.response);\n        return;\n      }\n      onerror();\n    };\n    xhr.onerror = onerror;\n    xhr.send(null);\n  }\n\n// end include: web_or_worker_shell_read.js\n  }\n\n  setWindowTitle = (title) => document.title = title;\n} else\n{\n  throw new Error('environment detection error');\n}\n\nvar out = Module['print'] || console.log.bind(console);\nvar err = Module['printErr'] || console.warn.bind(console);\n\n// Merge back in the overrides\nObject.assign(Module, moduleOverrides);\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\nmoduleOverrides = null;\ncheckIncomingModuleAPI();\n\n// Emit code to handle expected values on the Module object. This applies Module.x\n// to the proper local x. This has two benefits: first, we only emit it if it is\n// expected to arrive, and second, by using a local everywhere else that can be\n// minified.\n\nif (Module['arguments']) arguments_ = Module['arguments'];legacyModuleProp('arguments', 'arguments_');\n\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];legacyModuleProp('thisProgram', 'thisProgram');\n\nif (Module['quit']) quit_ = Module['quit'];legacyModuleProp('quit', 'quit_');\n\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\n// Assertions on removed incoming Module JS APIs.\nassert(typeof Module['memoryInitializerPrefixURL'] == 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['pthreadMainPrefixURL'] == 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['cdInitializerPrefixURL'] == 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['filePackagePrefixURL'] == 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['read'] == 'undefined', 'Module.read option was removed (modify read_ in JS)');\nassert(typeof Module['readAsync'] == 'undefined', 'Module.readAsync option was removed (modify readAsync in JS)');\nassert(typeof Module['readBinary'] == 'undefined', 'Module.readBinary option was removed (modify readBinary in JS)');\nassert(typeof Module['setWindowTitle'] == 'undefined', 'Module.setWindowTitle option was removed (modify setWindowTitle in JS)');\nassert(typeof Module['TOTAL_MEMORY'] == 'undefined', 'Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY');\nlegacyModuleProp('read', 'read_');\nlegacyModuleProp('readAsync', 'readAsync');\nlegacyModuleProp('readBinary', 'readBinary');\nlegacyModuleProp('setWindowTitle', 'setWindowTitle');\nvar IDBFS = 'IDBFS is no longer included by default; build with -lidbfs.js';\nvar PROXYFS = 'PROXYFS is no longer included by default; build with -lproxyfs.js';\nvar WORKERFS = 'WORKERFS is no longer included by default; build with -lworkerfs.js';\nvar NODEFS = 'NODEFS is no longer included by default; build with -lnodefs.js';\n\nassert(!ENVIRONMENT_IS_SHELL, \"shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable.\");\n\n\n// end include: shell.js\n// include: preamble.js\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\nvar wasmBinary;\nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];legacyModuleProp('wasmBinary', 'wasmBinary');\nvar noExitRuntime = Module['noExitRuntime'] || true;legacyModuleProp('noExitRuntime', 'noExitRuntime');\n\nif (typeof WebAssembly != 'object') {\n  abort('no native wasm support detected');\n}\n\n// Wasm globals\n\nvar wasmMemory;\n\n//========================================\n// Runtime essentials\n//========================================\n\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS;\n\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    abort('Assertion failed' + (text ? ': ' + text : ''));\n  }\n}\n\n// We used to include malloc/free by default in the past. Show a helpful error in\n// builds with assertions.\n\n// Memory management\n\nvar HEAP,\n/** @type {!Int8Array} */\n  HEAP8,\n/** @type {!Uint8Array} */\n  HEAPU8,\n/** @type {!Int16Array} */\n  HEAP16,\n/** @type {!Uint16Array} */\n  HEAPU16,\n/** @type {!Int32Array} */\n  HEAP32,\n/** @type {!Uint32Array} */\n  HEAPU32,\n/** @type {!Float32Array} */\n  HEAPF32,\n/** @type {!Float64Array} */\n  HEAPF64;\n\nfunction updateMemoryViews() {\n  var b = wasmMemory.buffer;\n  Module['HEAP8'] = HEAP8 = new Int8Array(b);\n  Module['HEAP16'] = HEAP16 = new Int16Array(b);\n  Module['HEAP32'] = HEAP32 = new Int32Array(b);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n}\n\nassert(!Module['STACK_SIZE'], 'STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time')\n\nassert(typeof Int32Array != 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined,\n       'JS engine does not provide full typed array support');\n\n// If memory is defined in wasm, the user can't provide it, or set INITIAL_MEMORY\nassert(!Module['wasmMemory'], 'Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally');\nassert(!Module['INITIAL_MEMORY'], 'Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically');\n\n// include: runtime_init_table.js\n// In regular non-RELOCATABLE mode the table is exported\n// from the wasm module and this will be assigned once\n// the exports are available.\nvar wasmTable;\n\n// end include: runtime_init_table.js\n// include: runtime_stack_check.js\n// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\nfunction writeStackCookie() {\n  var max = _emscripten_stack_get_end();\n  assert((max & 3) == 0);\n  // If the stack ends at address zero we write our cookies 4 bytes into the\n  // stack.  This prevents interference with the (separate) address-zero check\n  // below.\n  if (max == 0) {\n    max += 4;\n  }\n  // The stack grow downwards towards _emscripten_stack_get_end.\n  // We write cookies to the final two words in the stack and detect if they are\n  // ever overwritten.\n  HEAPU32[((max)>>2)] = 0x02135467;\n  HEAPU32[(((max)+(4))>>2)] = 0x89BACDFE;\n  // Also test the global address 0 for integrity.\n  HEAPU32[0] = 0x63736d65; /* 'emsc' */\n}\n\nfunction checkStackCookie() {\n  if (ABORT) return;\n  var max = _emscripten_stack_get_end();\n  // See writeStackCookie().\n  if (max == 0) {\n    max += 4;\n  }\n  var cookie1 = HEAPU32[((max)>>2)];\n  var cookie2 = HEAPU32[(((max)+(4))>>2)];\n  if (cookie1 != 0x02135467 || cookie2 != 0x89BACDFE) {\n    abort('Stack overflow! Stack cookie has been overwritten at ' + ptrToString(max) + ', expected hex dwords 0x89BACDFE and 0x2135467, but received ' + ptrToString(cookie2) + ' ' + ptrToString(cookie1));\n  }\n  // Also test the global address 0 for integrity.\n  if (HEAPU32[0] !== 0x63736d65 /* 'emsc' */) {\n    abort('Runtime error: The application has corrupted its heap memory area (address zero)!');\n  }\n}\n\n// end include: runtime_stack_check.js\n// include: runtime_assertions.js\n// Endianness check\n(function() {\n  var h16 = new Int16Array(1);\n  var h8 = new Int8Array(h16.buffer);\n  h16[0] = 0x6373;\n  if (h8[0] !== 0x73 || h8[1] !== 0x63) throw 'Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)';\n})();\n\n// end include: runtime_assertions.js\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\nvar __ATINIT__    = []; // functions called during startup\nvar __ATEXIT__    = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\n\nvar runtimeInitialized = false;\n\nvar runtimeKeepaliveCounter = 0;\n\nfunction keepRuntimeAlive() {\n  return noExitRuntime || runtimeKeepaliveCounter > 0;\n}\n\nfunction preRun() {\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n  assert(!runtimeInitialized);\n  runtimeInitialized = true;\n\n  checkStackCookie();\n\n  \n  callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction postRun() {\n  checkStackCookie();\n\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\n\nfunction addOnExit(cb) {\n}\n\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\n\n// include: runtime_math.js\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\n\nassert(Math.imul, 'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.fround, 'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.clz32, 'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.trunc, 'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\n\n// end include: runtime_math.js\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\nvar runDependencyTracking = {};\n\nfunction getUniqueRunDependency(id) {\n  var orig = id;\n  while (1) {\n    if (!runDependencyTracking[id]) return id;\n    id = orig + Math.random();\n  }\n}\n\nfunction addRunDependency(id) {\n  runDependencies++;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n  if (id) {\n    assert(!runDependencyTracking[id]);\n    runDependencyTracking[id] = 1;\n    if (runDependencyWatcher === null && typeof setInterval != 'undefined') {\n      // Check for missing dependencies every few seconds\n      runDependencyWatcher = setInterval(function() {\n        if (ABORT) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n          return;\n        }\n        var shown = false;\n        for (var dep in runDependencyTracking) {\n          if (!shown) {\n            shown = true;\n            err('still waiting on run dependencies:');\n          }\n          err('dependency: ' + dep);\n        }\n        if (shown) {\n          err('(end of list)');\n        }\n      }, 10000);\n    }\n  } else {\n    err('warning: run dependency added without ID');\n  }\n}\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n  if (id) {\n    assert(runDependencyTracking[id]);\n    delete runDependencyTracking[id];\n  } else {\n    err('warning: run dependency removed without ID');\n  }\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\n\n/** @param {string|number=} what */\nfunction abort(what) {\n  if (Module['onAbort']) {\n    Module['onAbort'](what);\n  }\n\n  what = 'Aborted(' + what + ')';\n  // TODO(sbc): Should we remove printing and leave it up to whoever\n  // catches the exception?\n  err(what);\n\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\n  // exception, which means we'd run destructors on it. We need the error to\n  // simply make the program stop.\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\n  // a trap or not based on a hidden field within the object. So at the moment\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\n  // allows this in the wasm spec.\n\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\n  // defintion for WebAssembly.RuntimeError claims it takes no arguments even\n  // though it can.\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\n  /** @suppress {checkTypes} */\n  var e = new WebAssembly.RuntimeError(what);\n\n  // Throw the error whether or not MODULARIZE is set because abort is used\n  // in code paths apart from instantiation where an exception is expected\n  // to be thrown when abort is called.\n  throw e;\n}\n\n// include: memoryprofiler.js\n// end include: memoryprofiler.js\n// show errors on likely calls to FS when it was not included\nvar FS = {\n  error: function() {\n    abort('Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with -sFORCE_FILESYSTEM');\n  },\n  init: function() { FS.error() },\n  createDataFile: function() { FS.error() },\n  createPreloadedFile: function() { FS.error() },\n  createLazyFile: function() { FS.error() },\n  open: function() { FS.error() },\n  mkdev: function() { FS.error() },\n  registerDevice: function() { FS.error() },\n  analyzePath: function() { FS.error() },\n\n  ErrnoError: function ErrnoError() { FS.error() },\n};\nModule['FS_createDataFile'] = FS.createDataFile;\nModule['FS_createPreloadedFile'] = FS.createPreloadedFile;\n\n// include: URIUtils.js\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\n\n// Indicates whether filename is a base64 data URI.\nfunction isDataURI(filename) {\n  // Prefix of data URIs emitted by SINGLE_FILE and related options.\n  return filename.startsWith(dataURIPrefix);\n}\n\n// Indicates whether filename is delivered via file protocol (as opposed to http/https)\nfunction isFileURI(filename) {\n  return filename.startsWith('file://');\n}\n\n// end include: URIUtils.js\n/** @param {boolean=} fixedasm */\nfunction createExportWrapper(name, fixedasm) {\n  return function() {\n    var displayName = name;\n    var asm = fixedasm;\n    if (!fixedasm) {\n      asm = Module['asm'];\n    }\n    assert(runtimeInitialized, 'native function `' + displayName + '` called before runtime initialization');\n    if (!asm[name]) {\n      assert(asm[name], 'exported native function `' + displayName + '` not found');\n    }\n    return asm[name].apply(null, arguments);\n  };\n}\n\n// include: runtime_exceptions.js\n// end include: runtime_exceptions.js\nvar wasmBinaryFile;\n  wasmBinaryFile = 'add.wasm';\n  if (!isDataURI(wasmBinaryFile)) {\n    wasmBinaryFile = locateFile(wasmBinaryFile);\n  }\n\nfunction getBinary(file) {\n  try {\n    if (file == wasmBinaryFile && wasmBinary) {\n      return new Uint8Array(wasmBinary);\n    }\n    if (readBinary) {\n      return readBinary(file);\n    }\n    throw \"both async and sync fetching of the wasm failed\";\n  }\n  catch (err) {\n    abort(err);\n  }\n}\n\nfunction getBinaryPromise(binaryFile) {\n  // If we don't have the binary yet, try to load it asynchronously.\n  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\n  // See https://github.com/github/fetch/pull/92#issuecomment-140665932\n  // Cordova or Electron apps are typically loaded from a file:// url.\n  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\n  if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n    if (typeof fetch == 'function'\n      && !isFileURI(binaryFile)\n    ) {\n      return fetch(binaryFile, { credentials: 'same-origin' }).then(function(response) {\n        if (!response['ok']) {\n          throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\n        }\n        return response['arrayBuffer']();\n      }).catch(function () {\n          return getBinary(binaryFile);\n      });\n    }\n    else {\n      if (readAsync) {\n        // fetch is not available or url is file => try XHR (readAsync uses XHR internally)\n        return new Promise(function(resolve, reject) {\n          readAsync(binaryFile, function(response) { resolve(new Uint8Array(/** @type{!ArrayBuffer} */(response))) }, reject)\n        });\n      }\n    }\n  }\n\n  // Otherwise, getBinary should be able to get it synchronously\n  return Promise.resolve().then(function() { return getBinary(binaryFile); });\n}\n\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\n  return getBinaryPromise(binaryFile).then(function(binary) {\n    return WebAssembly.instantiate(binary, imports);\n  }).then(function (instance) {\n    return instance;\n  }).then(receiver, function(reason) {\n    err('failed to asynchronously prepare wasm: ' + reason);\n\n    // Warn on some common problems.\n    if (isFileURI(wasmBinaryFile)) {\n      err('warning: Loading from a file URI (' + wasmBinaryFile + ') is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing');\n    }\n    abort(reason);\n  });\n}\n\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\n  if (!binary &&\n      typeof WebAssembly.instantiateStreaming == 'function' &&\n      !isDataURI(binaryFile) &&\n      // Don't use streaming for file:// delivered objects in a webview, fetch them synchronously.\n      !isFileURI(binaryFile) &&\n      // Avoid instantiateStreaming() on Node.js environment for now, as while\n      // Node.js v18.1.0 implements it, it does not have a full fetch()\n      // implementation yet.\n      //\n      // Reference:\n      //   https://github.com/emscripten-core/emscripten/pull/16917\n      !ENVIRONMENT_IS_NODE &&\n      typeof fetch == 'function') {\n    return fetch(binaryFile, { credentials: 'same-origin' }).then(function(response) {\n      // Suppress closure warning here since the upstream definition for\n      // instantiateStreaming only allows Promise<Repsponse> rather than\n      // an actual Response.\n      // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\n      /** @suppress {checkTypes} */\n      var result = WebAssembly.instantiateStreaming(response, imports);\n\n      return result.then(\n        callback,\n        function(reason) {\n          // We expect the most common failure cause to be a bad MIME type for the binary,\n          // in which case falling back to ArrayBuffer instantiation should work.\n          err('wasm streaming compile failed: ' + reason);\n          err('falling back to ArrayBuffer instantiation');\n          return instantiateArrayBuffer(binaryFile, imports, callback);\n        });\n    });\n  } else {\n    return instantiateArrayBuffer(binaryFile, imports, callback);\n  }\n}\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nfunction createWasm() {\n  // prepare imports\n  var info = {\n    'env': wasmImports,\n    'wasi_snapshot_preview1': wasmImports,\n  };\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  /** @param {WebAssembly.Module=} module*/\n  function receiveInstance(instance, module) {\n    var exports = instance.exports;\n\n    Module['asm'] = exports;\n\n    wasmMemory = Module['asm']['memory'];\n    assert(wasmMemory, \"memory not found in wasm exports\");\n    // This assertion doesn't hold when emscripten is run in --post-link\n    // mode.\n    // TODO(sbc): Read INITIAL_MEMORY out of the wasm file in post-link mode.\n    //assert(wasmMemory.buffer.byteLength === 16777216);\n    updateMemoryViews();\n\n    wasmTable = Module['asm']['__indirect_function_table'];\n    assert(wasmTable, \"table not found in wasm exports\");\n\n    addOnInit(Module['asm']['__wasm_call_ctors']);\n\n    removeRunDependency('wasm-instantiate');\n\n    return exports;\n  }\n  // wait for the pthread pool (if any)\n  addRunDependency('wasm-instantiate');\n\n  // Prefer streaming instantiation if available.\n  // Async compilation can be confusing when an error on the page overwrites Module\n  // (for example, if the order of elements is wrong, and the one defining Module is\n  // later), so we save Module and check it later.\n  var trueModule = Module;\n  function receiveInstantiationResult(result) {\n    // 'result' is a ResultObject object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n    assert(Module === trueModule, 'the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?');\n    trueModule = null;\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n    // When the regression is fixed, can restore the above PTHREADS-enabled path.\n    receiveInstance(result['instance']);\n  }\n\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n  // to manually instantiate the Wasm module themselves. This allows pages to\n  // run the instantiation parallel to any other async startup actions they are\n  // performing.\n  // Also pthreads and wasm workers initialize the wasm instance through this\n  // path.\n  if (Module['instantiateWasm']) {\n\n    try {\n      return Module['instantiateWasm'](info, receiveInstance);\n    } catch(e) {\n      err('Module.instantiateWasm callback failed with error: ' + e);\n        return false;\n    }\n  }\n\n  instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult);\n  return {}; // no exports yet; we'll fill them in later\n}\n\n// Globals used by JS i64 conversions (see makeSetValue)\nvar tempDouble;\nvar tempI64;\n\n// include: runtime_debug.js\nfunction legacyModuleProp(prop, newName) {\n  if (!Object.getOwnPropertyDescriptor(Module, prop)) {\n    Object.defineProperty(Module, prop, {\n      configurable: true,\n      get: function() {\n        abort('Module.' + prop + ' has been replaced with plain ' + newName + ' (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)');\n      }\n    });\n  }\n}\n\nfunction ignoredModuleProp(prop) {\n  if (Object.getOwnPropertyDescriptor(Module, prop)) {\n    abort('`Module.' + prop + '` was supplied but `' + prop + '` not included in INCOMING_MODULE_JS_API');\n  }\n}\n\n// forcing the filesystem exports a few things by default\nfunction isExportedByForceFilesystem(name) {\n  return name === 'FS_createPath' ||\n         name === 'FS_createDataFile' ||\n         name === 'FS_createPreloadedFile' ||\n         name === 'FS_unlink' ||\n         name === 'addRunDependency' ||\n         // The old FS has some functionality that WasmFS lacks.\n         name === 'FS_createLazyFile' ||\n         name === 'FS_createDevice' ||\n         name === 'removeRunDependency';\n}\n\nfunction missingGlobal(sym, msg) {\n  if (typeof globalThis !== 'undefined') {\n    Object.defineProperty(globalThis, sym, {\n      configurable: true,\n      get: function() {\n        warnOnce('`' + sym + '` is not longer defined by emscripten. ' + msg);\n        return undefined;\n      }\n    });\n  }\n}\n\nmissingGlobal('buffer', 'Please use HEAP8.buffer or wasmMemory.buffer');\n\nfunction missingLibrarySymbol(sym) {\n  if (typeof globalThis !== 'undefined' && !Object.getOwnPropertyDescriptor(globalThis, sym)) {\n    Object.defineProperty(globalThis, sym, {\n      configurable: true,\n      get: function() {\n        // Can't `abort()` here because it would break code that does runtime\n        // checks.  e.g. `if (typeof SDL === 'undefined')`.\n        var msg = '`' + sym + '` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line';\n        // DEFAULT_LIBRARY_FUNCS_TO_INCLUDE requires the name as it appears in\n        // library.js, which means $name for a JS name with no prefix, or name\n        // for a JS name like _name.\n        var librarySymbol = sym;\n        if (!librarySymbol.startsWith('_')) {\n          librarySymbol = '$' + sym;\n        }\n        msg += \" (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE=\" + librarySymbol + \")\";\n        if (isExportedByForceFilesystem(sym)) {\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n        }\n        warnOnce(msg);\n        return undefined;\n      }\n    });\n  }\n  // Any symbol that is not included from the JS libary is also (by definition)\n  // not exported on the Module object.\n  unexportedRuntimeSymbol(sym);\n}\n\nfunction unexportedRuntimeSymbol(sym) {\n  if (!Object.getOwnPropertyDescriptor(Module, sym)) {\n    Object.defineProperty(Module, sym, {\n      configurable: true,\n      get: function() {\n        var msg = \"'\" + sym + \"' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\";\n        if (isExportedByForceFilesystem(sym)) {\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n        }\n        abort(msg);\n      }\n    });\n  }\n}\n\n// Used by XXXXX_DEBUG settings to output debug messages.\nfunction dbg(text) {\n  // TODO(sbc): Make this configurable somehow.  Its not always convenient for\n  // logging to show up as errors.\n  console.error(text);\n}\n\n// end include: runtime_debug.js\n// === Body ===\n\n\n// end include: preamble.js\n\n  /** @constructor */\n  function ExitStatus(status) {\n      this.name = 'ExitStatus';\n      this.message = 'Program terminated with exit(' + status + ')';\n      this.status = status;\n    }\n\n  function callRuntimeCallbacks(callbacks) {\n      while (callbacks.length > 0) {\n        // Pass the module as the first argument.\n        callbacks.shift()(Module);\n      }\n    }\n\n  \n    /**\n     * @param {number} ptr\n     * @param {string} type\n     */\n  function getValue(ptr, type = 'i8') {\n    if (type.endsWith('*')) type = '*';\n    switch (type) {\n      case 'i1': return HEAP8[((ptr)>>0)];\n      case 'i8': return HEAP8[((ptr)>>0)];\n      case 'i16': return HEAP16[((ptr)>>1)];\n      case 'i32': return HEAP32[((ptr)>>2)];\n      case 'i64': return HEAP32[((ptr)>>2)];\n      case 'float': return HEAPF32[((ptr)>>2)];\n      case 'double': return HEAPF64[((ptr)>>3)];\n      case '*': return HEAPU32[((ptr)>>2)];\n      default: abort('invalid type for getValue: ' + type);\n    }\n  }\n\n  function ptrToString(ptr) {\n      assert(typeof ptr === 'number');\n      return '0x' + ptr.toString(16).padStart(8, '0');\n    }\n\n  \n    /**\n     * @param {number} ptr\n     * @param {number} value\n     * @param {string} type\n     */\n  function setValue(ptr, value, type = 'i8') {\n    if (type.endsWith('*')) type = '*';\n    switch (type) {\n      case 'i1': HEAP8[((ptr)>>0)] = value; break;\n      case 'i8': HEAP8[((ptr)>>0)] = value; break;\n      case 'i16': HEAP16[((ptr)>>1)] = value; break;\n      case 'i32': HEAP32[((ptr)>>2)] = value; break;\n      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math.min((+(Math.floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)] = tempI64[0],HEAP32[(((ptr)+(4))>>2)] = tempI64[1]); break;\n      case 'float': HEAPF32[((ptr)>>2)] = value; break;\n      case 'double': HEAPF64[((ptr)>>3)] = value; break;\n      case '*': HEAPU32[((ptr)>>2)] = value; break;\n      default: abort('invalid type for setValue: ' + type);\n    }\n  }\n\n  function warnOnce(text) {\n      if (!warnOnce.shown) warnOnce.shown = {};\n      if (!warnOnce.shown[text]) {\n        warnOnce.shown[text] = 1;\n        if (ENVIRONMENT_IS_NODE) text = 'warning: ' + text;\n        err(text);\n      }\n    }\n\n  function __embind_register_bigint(primitiveType, name, size, minRange, maxRange) {}\n\n  function getShiftFromSize(size) {\n      switch (size) {\n          case 1: return 0;\n          case 2: return 1;\n          case 4: return 2;\n          case 8: return 3;\n          default:\n              throw new TypeError('Unknown type size: ' + size);\n      }\n    }\n  \n  function embind_init_charCodes() {\n      var codes = new Array(256);\n      for (var i = 0; i < 256; ++i) {\n          codes[i] = String.fromCharCode(i);\n      }\n      embind_charCodes = codes;\n    }\n  var embind_charCodes = undefined;\n  function readLatin1String(ptr) {\n      var ret = \"\";\n      var c = ptr;\n      while (HEAPU8[c]) {\n          ret += embind_charCodes[HEAPU8[c++]];\n      }\n      return ret;\n    }\n  \n  var awaitingDependencies = {};\n  \n  var registeredTypes = {};\n  \n  var typeDependencies = {};\n  \n  var char_0 = 48;\n  \n  var char_9 = 57;\n  function makeLegalFunctionName(name) {\n      if (undefined === name) {\n        return '_unknown';\n      }\n      name = name.replace(/[^a-zA-Z0-9_]/g, '$');\n      var f = name.charCodeAt(0);\n      if (f >= char_0 && f <= char_9) {\n        return '_' + name;\n      }\n      return name;\n    }\n  function createNamedFunction(name, body) {\n      name = makeLegalFunctionName(name);\n      // Use an abject with a computed property name to create a new function with\n      // a name specified at runtime, but without using `new Function` or `eval`.\n      return {\n        [name]: function() {\n          return body.apply(this, arguments);\n        }\n      }[name];\n    }\n  function extendError(baseErrorType, errorName) {\n      var errorClass = createNamedFunction(errorName, function(message) {\n        this.name = errorName;\n        this.message = message;\n  \n        var stack = (new Error(message)).stack;\n        if (stack !== undefined) {\n          this.stack = this.toString() + '\\n' +\n              stack.replace(/^Error(:[^\\n]*)?\\n/, '');\n        }\n      });\n      errorClass.prototype = Object.create(baseErrorType.prototype);\n      errorClass.prototype.constructor = errorClass;\n      errorClass.prototype.toString = function() {\n        if (this.message === undefined) {\n          return this.name;\n        } else {\n          return this.name + ': ' + this.message;\n        }\n      };\n  \n      return errorClass;\n    }\n  var BindingError = undefined;\n  function throwBindingError(message) {\n      throw new BindingError(message);\n    }\n  \n  \n  \n  \n  var InternalError = undefined;\n  function throwInternalError(message) {\n      throw new InternalError(message);\n    }\n  function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n      myTypes.forEach(function(type) {\n          typeDependencies[type] = dependentTypes;\n      });\n  \n      function onComplete(typeConverters) {\n          var myTypeConverters = getTypeConverters(typeConverters);\n          if (myTypeConverters.length !== myTypes.length) {\n              throwInternalError('Mismatched type converter count');\n          }\n          for (var i = 0; i < myTypes.length; ++i) {\n              registerType(myTypes[i], myTypeConverters[i]);\n          }\n      }\n  \n      var typeConverters = new Array(dependentTypes.length);\n      var unregisteredTypes = [];\n      var registered = 0;\n      dependentTypes.forEach((dt, i) => {\n        if (registeredTypes.hasOwnProperty(dt)) {\n          typeConverters[i] = registeredTypes[dt];\n        } else {\n          unregisteredTypes.push(dt);\n          if (!awaitingDependencies.hasOwnProperty(dt)) {\n            awaitingDependencies[dt] = [];\n          }\n          awaitingDependencies[dt].push(() => {\n            typeConverters[i] = registeredTypes[dt];\n            ++registered;\n            if (registered === unregisteredTypes.length) {\n              onComplete(typeConverters);\n            }\n          });\n        }\n      });\n      if (0 === unregisteredTypes.length) {\n        onComplete(typeConverters);\n      }\n    }\n  /** @param {Object=} options */\n  function registerType(rawType, registeredInstance, options = {}) {\n      if (!('argPackAdvance' in registeredInstance)) {\n          throw new TypeError('registerType registeredInstance requires argPackAdvance');\n      }\n  \n      var name = registeredInstance.name;\n      if (!rawType) {\n          throwBindingError('type \"' + name + '\" must have a positive integer typeid pointer');\n      }\n      if (registeredTypes.hasOwnProperty(rawType)) {\n          if (options.ignoreDuplicateRegistrations) {\n              return;\n          } else {\n              throwBindingError(\"Cannot register type '\" + name + \"' twice\");\n          }\n      }\n  \n      registeredTypes[rawType] = registeredInstance;\n      delete typeDependencies[rawType];\n  \n      if (awaitingDependencies.hasOwnProperty(rawType)) {\n        var callbacks = awaitingDependencies[rawType];\n        delete awaitingDependencies[rawType];\n        callbacks.forEach((cb) => cb());\n      }\n    }\n  function __embind_register_bool(rawType, name, size, trueValue, falseValue) {\n      var shift = getShiftFromSize(size);\n  \n      name = readLatin1String(name);\n      registerType(rawType, {\n          name: name,\n          'fromWireType': function(wt) {\n              // ambiguous emscripten ABI: sometimes return values are\n              // true or false, and sometimes integers (0 or 1)\n              return !!wt;\n          },\n          'toWireType': function(destructors, o) {\n              return o ? trueValue : falseValue;\n          },\n          'argPackAdvance': 8,\n          'readValueFromPointer': function(pointer) {\n              // TODO: if heap is fixed (like in asm.js) this could be executed outside\n              var heap;\n              if (size === 1) {\n                  heap = HEAP8;\n              } else if (size === 2) {\n                  heap = HEAP16;\n              } else if (size === 4) {\n                  heap = HEAP32;\n              } else {\n                  throw new TypeError(\"Unknown boolean type size: \" + name);\n              }\n              return this['fromWireType'](heap[pointer >> shift]);\n          },\n          destructorFunction: null, // This type does not need a destructor\n      });\n    }\n\n  /** @constructor */\n  function HandleAllocator() {\n      // Reserve slot 0 so that 0 is always an invalid handle\n      this.allocated = [undefined];\n      this.freelist = [];\n      this.get = function(id) {\n        assert(this.allocated[id] !== undefined, 'invalid handle: ' + id);\n        return this.allocated[id];\n      };\n      this.allocate = function(handle) {\n        let id = this.freelist.pop() || this.allocated.length;\n        this.allocated[id] = handle;\n        return id;\n      };\n      this.free = function(id) {\n        assert(this.allocated[id] !== undefined);\n        // Set the slot to `undefined` rather than using `delete` here since\n        // apparently arrays with holes in them can be less efficient.\n        this.allocated[id] = undefined;\n        this.freelist.push(id);\n      };\n    }\n  var emval_handles = new HandleAllocator();;\n  function __emval_decref(handle) {\n      if (handle >= emval_handles.reserved && 0 === --emval_handles.get(handle).refcount) {\n        emval_handles.free(handle);\n      }\n    }\n  \n  \n  \n  function count_emval_handles() {\n      var count = 0;\n      for (var i = emval_handles.reserved; i < emval_handles.allocated.length; ++i) {\n        if (emval_handles.allocated[i] !== undefined) {\n          ++count;\n        }\n      }\n      return count;\n    }\n  \n  function init_emval() {\n      // reserve some special values. These never get de-allocated.\n      // The HandleAllocator takes care of reserving zero.\n      emval_handles.allocated.push(\n        {value: undefined},\n        {value: null},\n        {value: true},\n        {value: false},\n      );\n      emval_handles.reserved = emval_handles.allocated.length\n      Module['count_emval_handles'] = count_emval_handles;\n    }\n  var Emval = {toValue:(handle) => {\n        if (!handle) {\n            throwBindingError('Cannot use deleted val. handle = ' + handle);\n        }\n        return emval_handles.get(handle).value;\n      },toHandle:(value) => {\n        switch (value) {\n          case undefined: return 1;\n          case null: return 2;\n          case true: return 3;\n          case false: return 4;\n          default:{\n            return emval_handles.allocate({refcount: 1, value: value});\n          }\n        }\n      }};\n  \n  \n  \n  function simpleReadValueFromPointer(pointer) {\n      return this['fromWireType'](HEAP32[((pointer)>>2)]);\n    }\n  function __embind_register_emval(rawType, name) {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        'fromWireType': function(handle) {\n          var rv = Emval.toValue(handle);\n          __emval_decref(handle);\n          return rv;\n        },\n        'toWireType': function(destructors, value) {\n          return Emval.toHandle(value);\n        },\n        'argPackAdvance': 8,\n        'readValueFromPointer': simpleReadValueFromPointer,\n        destructorFunction: null, // This type does not need a destructor\n  \n        // TODO: do we need a deleteObject here?  write a test where\n        // emval is passed into JS via an interface\n      });\n    }\n\n  function embindRepr(v) {\n      if (v === null) {\n          return 'null';\n      }\n      var t = typeof v;\n      if (t === 'object' || t === 'array' || t === 'function') {\n          return v.toString();\n      } else {\n          return '' + v;\n      }\n    }\n  \n  function floatReadValueFromPointer(name, shift) {\n      switch (shift) {\n          case 2: return function(pointer) {\n              return this['fromWireType'](HEAPF32[pointer >> 2]);\n          };\n          case 3: return function(pointer) {\n              return this['fromWireType'](HEAPF64[pointer >> 3]);\n          };\n          default:\n              throw new TypeError(\"Unknown float type: \" + name);\n      }\n    }\n  \n  \n  \n  function __embind_register_float(rawType, name, size) {\n      var shift = getShiftFromSize(size);\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        'fromWireType': function(value) {\n           return value;\n        },\n        'toWireType': function(destructors, value) {\n          if (typeof value != \"number\" && typeof value != \"boolean\") {\n            throw new TypeError('Cannot convert \"' + embindRepr(value) + '\" to ' + this.name);\n          }\n          // The VM will perform JS to Wasm value conversion, according to the spec:\n          // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\n          return value;\n        },\n        'argPackAdvance': 8,\n        'readValueFromPointer': floatReadValueFromPointer(name, shift),\n        destructorFunction: null, // This type does not need a destructor\n      });\n    }\n\n  \n  function runDestructors(destructors) {\n      while (destructors.length) {\n        var ptr = destructors.pop();\n        var del = destructors.pop();\n        del(ptr);\n      }\n    }\n  \n  \n  function newFunc(constructor, argumentList) {\n      if (!(constructor instanceof Function)) {\n        throw new TypeError('new_ called with constructor type ' + typeof(constructor) + \" which is not a function\");\n      }\n      /*\n       * Previously, the following line was just:\n       *   function dummy() {};\n       * Unfortunately, Chrome was preserving 'dummy' as the object's name, even\n       * though at creation, the 'dummy' has the correct constructor name.  Thus,\n       * objects created with IMVU.new would show up in the debugger as 'dummy',\n       * which isn't very helpful.  Using IMVU.createNamedFunction addresses the\n       * issue.  Doublely-unfortunately, there's no way to write a test for this\n       * behavior.  -NRD 2013.02.22\n       */\n      var dummy = createNamedFunction(constructor.name || 'unknownFunctionName', function(){});\n      dummy.prototype = constructor.prototype;\n      var obj = new dummy;\n  \n      var r = constructor.apply(obj, argumentList);\n      return (r instanceof Object) ? r : obj;\n    }\n  function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc, isAsync) {\n      // humanName: a human-readable string name for the function to be generated.\n      // argTypes: An array that contains the embind type objects for all types in the function signature.\n      //    argTypes[0] is the type object for the function return value.\n      //    argTypes[1] is the type object for function this object/class type, or null if not crafting an invoker for a class method.\n      //    argTypes[2...] are the actual function parameters.\n      // classType: The embind type object for the class to be bound, or null if this is not a method of a class.\n      // cppInvokerFunc: JS Function object to the C++-side function that interops into C++ code.\n      // cppTargetFunc: Function pointer (an integer to FUNCTION_TABLE) to the target C++ function the cppInvokerFunc will end up calling.\n      var argCount = argTypes.length;\n  \n      if (argCount < 2) {\n        throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n      }\n  \n      assert(!isAsync, 'Async bindings are only supported with JSPI.');\n  \n      var isClassMethodFunc = (argTypes[1] !== null && classType !== null);\n  \n      // Free functions with signature \"void function()\" do not need an invoker that marshalls between wire types.\n  // TODO: This omits argument count check - enable only at -O3 or similar.\n  //    if (ENABLE_UNSAFE_OPTS && argCount == 2 && argTypes[0].name == \"void\" && !isClassMethodFunc) {\n  //       return FUNCTION_TABLE[fn];\n  //    }\n  \n      // Determine if we need to use a dynamic stack to store the destructors for the function parameters.\n      // TODO: Remove this completely once all function invokers are being dynamically generated.\n      var needsDestructorStack = false;\n  \n      for (var i = 1; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here.\n        if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) { // The type does not define a destructor function - must use dynamic stack\n          needsDestructorStack = true;\n          break;\n        }\n      }\n  \n      var returns = (argTypes[0].name !== \"void\");\n  \n      var argsList = \"\";\n      var argsListWired = \"\";\n      for (var i = 0; i < argCount - 2; ++i) {\n        argsList += (i!==0?\", \":\"\")+\"arg\"+i;\n        argsListWired += (i!==0?\", \":\"\")+\"arg\"+i+\"Wired\";\n      }\n  \n      var invokerFnBody =\n          \"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\" +\n          \"if (arguments.length !== \"+(argCount - 2)+\") {\\n\" +\n              \"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount - 2)+\" args!');\\n\" +\n          \"}\\n\";\n  \n      if (needsDestructorStack) {\n        invokerFnBody += \"var destructors = [];\\n\";\n      }\n  \n      var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n      var args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n      var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n  \n      if (isClassMethodFunc) {\n        invokerFnBody += \"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\";\n      }\n  \n      for (var i = 0; i < argCount - 2; ++i) {\n        invokerFnBody += \"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";\n        args1.push(\"argType\"+i);\n        args2.push(argTypes[i+2]);\n      }\n  \n      if (isClassMethodFunc) {\n        argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n      }\n  \n      invokerFnBody +=\n          (returns || isAsync ? \"var rv = \":\"\") + \"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";\n  \n      if (needsDestructorStack) {\n        invokerFnBody += \"runDestructors(destructors);\\n\";\n      } else {\n        for (var i = isClassMethodFunc?1:2; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.\n          var paramName = (i === 1 ? \"thisWired\" : (\"arg\"+(i - 2)+\"Wired\"));\n          if (argTypes[i].destructorFunction !== null) {\n            invokerFnBody += paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";\n            args1.push(paramName+\"_dtor\");\n            args2.push(argTypes[i].destructorFunction);\n          }\n        }\n      }\n  \n      if (returns) {\n        invokerFnBody += \"var ret = retType.fromWireType(rv);\\n\" +\n                         \"return ret;\\n\";\n      } else {\n      }\n  \n      invokerFnBody += \"}\\n\";\n  \n      args1.push(invokerFnBody);\n  \n      return newFunc(Function, args1).apply(null, args2);\n    }\n  \n  function ensureOverloadTable(proto, methodName, humanName) {\n      if (undefined === proto[methodName].overloadTable) {\n        var prevFunc = proto[methodName];\n        // Inject an overload resolver function that routes to the appropriate overload based on the number of arguments.\n        proto[methodName] = function() {\n          // TODO This check can be removed in -O3 level \"unsafe\" optimizations.\n          if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n              throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n          }\n          return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n        };\n        // Move the previous function into the overload table.\n        proto[methodName].overloadTable = [];\n        proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n      }\n    }\n  \n  /** @param {number=} numArguments */\n  function exposePublicSymbol(name, value, numArguments) {\n      if (Module.hasOwnProperty(name)) {\n        if (undefined === numArguments || (undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments])) {\n          throwBindingError(\"Cannot register public name '\" + name + \"' twice\");\n        }\n  \n        // We are exposing a function with the same name as an existing function. Create an overload table and a function selector\n        // that routes between the two.\n        ensureOverloadTable(Module, name, name);\n        if (Module.hasOwnProperty(numArguments)) {\n            throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n        }\n        // Add the new function into the overload table.\n        Module[name].overloadTable[numArguments] = value;\n      }\n      else {\n        Module[name] = value;\n        if (undefined !== numArguments) {\n          Module[name].numArguments = numArguments;\n        }\n      }\n    }\n  \n  function heap32VectorToArray(count, firstElement) {\n      var array = [];\n      for (var i = 0; i < count; i++) {\n          // TODO(https://github.com/emscripten-core/emscripten/issues/17310):\n          // Find a way to hoist the `>> 2` or `>> 3` out of this loop.\n          array.push(HEAPU32[(((firstElement)+(i * 4))>>2)]);\n      }\n      return array;\n    }\n  \n  \n  /** @param {number=} numArguments */\n  function replacePublicSymbol(name, value, numArguments) {\n      if (!Module.hasOwnProperty(name)) {\n        throwInternalError('Replacing nonexistant public symbol');\n      }\n      // If there's an overload table for this symbol, replace the symbol in the overload table instead.\n      if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n        Module[name].overloadTable[numArguments] = value;\n      }\n      else {\n        Module[name] = value;\n        Module[name].argCount = numArguments;\n      }\n    }\n  \n  \n  \n  function dynCallLegacy(sig, ptr, args) {\n      assert(('dynCall_' + sig) in Module, 'bad function pointer type - dynCall function not found for sig \\'' + sig + '\\'');\n      if (args && args.length) {\n        // j (64-bit integer) must be passed in as two numbers [low 32, high 32].\n        assert(args.length === sig.substring(1).replace(/j/g, '--').length);\n      } else {\n        assert(sig.length == 1);\n      }\n      var f = Module['dynCall_' + sig];\n      return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\n    }\n  \n  var wasmTableMirror = [];\n  \n  function getWasmTableEntry(funcPtr) {\n      var func = wasmTableMirror[funcPtr];\n      if (!func) {\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n      }\n      assert(wasmTable.get(funcPtr) == func, \"JavaScript-side Wasm function table mirror is out of date!\");\n      return func;\n    }\n  \n  /** @param {Object=} args */\n  function dynCall(sig, ptr, args) {\n      // Without WASM_BIGINT support we cannot directly call function with i64 as\n      // part of thier signature, so we rely the dynCall functions generated by\n      // wasm-emscripten-finalize\n      if (sig.includes('j')) {\n        return dynCallLegacy(sig, ptr, args);\n      }\n      assert(getWasmTableEntry(ptr), 'missing table entry in dynCall: ' + ptr);\n      var rtn = getWasmTableEntry(ptr).apply(null, args);\n      return rtn;\n    }\n  \n  function getDynCaller(sig, ptr) {\n      assert(sig.includes('j') || sig.includes('p'), 'getDynCaller should only be called with i64 sigs')\n      var argCache = [];\n      return function() {\n        argCache.length = 0;\n        Object.assign(argCache, arguments);\n        return dynCall(sig, ptr, argCache);\n      };\n    }\n  \n  \n  function embind__requireFunction(signature, rawFunction) {\n      signature = readLatin1String(signature);\n  \n      function makeDynCaller() {\n        if (signature.includes('j')) {\n          return getDynCaller(signature, rawFunction);\n        }\n        return getWasmTableEntry(rawFunction);\n      }\n  \n      var fp = makeDynCaller();\n      if (typeof fp != \"function\") {\n          throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n      }\n      return fp;\n    }\n  \n  \n  \n  var UnboundTypeError = undefined;\n  \n  \n  function getTypeName(type) {\n      var ptr = ___getTypeName(type);\n      var rv = readLatin1String(ptr);\n      _free(ptr);\n      return rv;\n    }\n  function throwUnboundTypeError(message, types) {\n      var unboundTypes = [];\n      var seen = {};\n      function visit(type) {\n        if (seen[type]) {\n          return;\n        }\n        if (registeredTypes[type]) {\n          return;\n        }\n        if (typeDependencies[type]) {\n          typeDependencies[type].forEach(visit);\n          return;\n        }\n        unboundTypes.push(type);\n        seen[type] = true;\n      }\n      types.forEach(visit);\n  \n      throw new UnboundTypeError(message + ': ' + unboundTypes.map(getTypeName).join([', ']));\n    }\n  \n  function __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn, isAsync) {\n      var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      name = readLatin1String(name);\n  \n      rawInvoker = embind__requireFunction(signature, rawInvoker);\n  \n      exposePublicSymbol(name, function() {\n        throwUnboundTypeError('Cannot call ' + name + ' due to unbound types', argTypes);\n      }, argCount - 1);\n  \n      whenDependentTypesAreResolved([], argTypes, function(argTypes) {\n        var invokerArgsArray = [argTypes[0] /* return value */, null /* no class 'this'*/].concat(argTypes.slice(1) /* actual params */);\n        replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null /* no class 'this'*/, rawInvoker, fn, isAsync), argCount - 1);\n        return [];\n      });\n    }\n\n  \n  \n  function integerReadValueFromPointer(name, shift, signed) {\n      // integers are quite common, so generate very specialized functions\n      switch (shift) {\n          case 0: return signed ?\n              function readS8FromPointer(pointer) { return HEAP8[pointer]; } :\n              function readU8FromPointer(pointer) { return HEAPU8[pointer]; };\n          case 1: return signed ?\n              function readS16FromPointer(pointer) { return HEAP16[pointer >> 1]; } :\n              function readU16FromPointer(pointer) { return HEAPU16[pointer >> 1]; };\n          case 2: return signed ?\n              function readS32FromPointer(pointer) { return HEAP32[pointer >> 2]; } :\n              function readU32FromPointer(pointer) { return HEAPU32[pointer >> 2]; };\n          default:\n              throw new TypeError(\"Unknown integer type: \" + name);\n      }\n    }\n  \n  \n  function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\n      name = readLatin1String(name);\n      // LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come\n      // out as 'i32 -1'. Always treat those as max u32.\n      if (maxRange === -1) {\n          maxRange = 4294967295;\n      }\n  \n      var shift = getShiftFromSize(size);\n  \n      var fromWireType = (value) => value;\n  \n      if (minRange === 0) {\n          var bitshift = 32 - 8*size;\n          fromWireType = (value) => (value << bitshift) >>> bitshift;\n      }\n  \n      var isUnsignedType = (name.includes('unsigned'));\n      var checkAssertions = (value, toTypeName) => {\n        if (typeof value != \"number\" && typeof value != \"boolean\") {\n          throw new TypeError('Cannot convert \"' + embindRepr(value) + '\" to ' + toTypeName);\n        }\n        if (value < minRange || value > maxRange) {\n          throw new TypeError('Passing a number \"' + embindRepr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name + '\", which is outside the valid range [' + minRange + ', ' + maxRange + ']!');\n        }\n      }\n      var toWireType;\n      if (isUnsignedType) {\n        toWireType = function(destructors, value) {\n          checkAssertions(value, this.name);\n          return value >>> 0;\n        }\n      } else {\n        toWireType = function(destructors, value) {\n          checkAssertions(value, this.name);\n          // The VM will perform JS to Wasm value conversion, according to the spec:\n          // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\n          return value;\n        }\n      }\n      registerType(primitiveType, {\n        name: name,\n        'fromWireType': fromWireType,\n        'toWireType': toWireType,\n        'argPackAdvance': 8,\n        'readValueFromPointer': integerReadValueFromPointer(name, shift, minRange !== 0),\n        destructorFunction: null, // This type does not need a destructor\n      });\n    }\n\n  \n  function __embind_register_memory_view(rawType, dataTypeIndex, name) {\n      var typeMapping = [\n        Int8Array,\n        Uint8Array,\n        Int16Array,\n        Uint16Array,\n        Int32Array,\n        Uint32Array,\n        Float32Array,\n        Float64Array,\n      ];\n  \n      var TA = typeMapping[dataTypeIndex];\n  \n      function decodeMemoryView(handle) {\n        handle = handle >> 2;\n        var heap = HEAPU32;\n        var size = heap[handle]; // in elements\n        var data = heap[handle + 1]; // byte offset into emscripten heap\n        return new TA(heap.buffer, data, size);\n      }\n  \n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        'fromWireType': decodeMemoryView,\n        'argPackAdvance': 8,\n        'readValueFromPointer': decodeMemoryView,\n      }, {\n        ignoreDuplicateRegistrations: true,\n      });\n    }\n\n  \n  \n  \n  \n  function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n      // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\n      // undefined and false each don't write out any bytes.\n      if (!(maxBytesToWrite > 0))\n        return 0;\n  \n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n        // unit, not a Unicode code point of the character! So decode\n        // UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\n        // and https://www.ietf.org/rfc/rfc2279.txt\n        // and https://tools.ietf.org/html/rfc3629\n        var u = str.charCodeAt(i); // possibly a lead surrogate\n        if (u >= 0xD800 && u <= 0xDFFF) {\n          var u1 = str.charCodeAt(++i);\n          u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\n        }\n        if (u <= 0x7F) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 0x7FF) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 0xC0 | (u >> 6);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else if (u <= 0xFFFF) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 0xE0 | (u >> 12);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          if (u > 0x10FFFF) warnOnce('Invalid Unicode code point ' + ptrToString(u) + ' encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).');\n          heap[outIdx++] = 0xF0 | (u >> 18);\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        }\n      }\n      // Null-terminate the pointer to the buffer.\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    }\n  function stringToUTF8(str, outPtr, maxBytesToWrite) {\n      assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n      return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);\n    }\n  \n  function lengthBytesUTF8(str) {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n        // unit, not a Unicode code point of the character! So decode\n        // UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var c = str.charCodeAt(i); // possibly a lead surrogate\n        if (c <= 0x7F) {\n          len++;\n        } else if (c <= 0x7FF) {\n          len += 2;\n        } else if (c >= 0xD800 && c <= 0xDFFF) {\n          len += 4; ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    }\n  \n  var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n  \n    /**\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\n     * array that contains uint8 values, returns a copy of that string as a\n     * Javascript String object.\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\n     * @param {number} idx\n     * @param {number=} maxBytesToRead\n     * @return {string}\n     */\n  function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\n      // null terminator by itself.  Also, use the length info to avoid running tiny\n      // strings through TextDecoder, since .subarray() allocates garbage.\n      // (As a tiny code save trick, compare endPtr against endIdx using a negation,\n      // so that undefined means Infinity)\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n  \n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = '';\n      // If building with TextDecoder, we have already computed the string length\n      // above, so test loop end condition against that\n      while (idx < endPtr) {\n        // For UTF8 byte structure, see:\n        // http://en.wikipedia.org/wiki/UTF-8#Description\n        // https://www.ietf.org/rfc/rfc2279.txt\n        // https://tools.ietf.org/html/rfc3629\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xF0) == 0xE0) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          if ((u0 & 0xF8) != 0xF0) warnOnce('Invalid UTF-8 leading byte ' + ptrToString(u0) + ' encountered when deserializing a UTF-8 string in wasm memory to a JS string!');\n          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\n        }\n  \n        if (u0 < 0x10000) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 0x10000;\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n        }\n      }\n      return str;\n    }\n  \n  \n    /**\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\n     *\n     * @param {number} ptr\n     * @param {number=} maxBytesToRead - An optional length that specifies the\n     *   maximum number of bytes to read. You can omit this parameter to scan the\n     *   string until the first \u0000 byte. If maxBytesToRead is passed, and the string\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\n     * @return {string}\n     */\n  function UTF8ToString(ptr, maxBytesToRead) {\n      assert(typeof ptr == 'number');\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n    }\n  function __embind_register_std_string(rawType, name) {\n      name = readLatin1String(name);\n      var stdStringIsUTF8\n      //process only std::string bindings with UTF8 support, in contrast to e.g. std::basic_string<unsigned char>\n      = (name === \"std::string\");\n  \n      registerType(rawType, {\n        name: name,\n        'fromWireType': function(value) {\n          var length = HEAPU32[((value)>>2)];\n          var payload = value + 4;\n  \n          var str;\n          if (stdStringIsUTF8) {\n            var decodeStartPtr = payload;\n            // Looping here to support possible embedded '0' bytes\n            for (var i = 0; i <= length; ++i) {\n              var currentBytePtr = payload + i;\n              if (i == length || HEAPU8[currentBytePtr] == 0) {\n                var maxRead = currentBytePtr - decodeStartPtr;\n                var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                if (str === undefined) {\n                  str = stringSegment;\n                } else {\n                  str += String.fromCharCode(0);\n                  str += stringSegment;\n                }\n                decodeStartPtr = currentBytePtr + 1;\n              }\n            }\n          } else {\n            var a = new Array(length);\n            for (var i = 0; i < length; ++i) {\n              a[i] = String.fromCharCode(HEAPU8[payload + i]);\n            }\n            str = a.join('');\n          }\n  \n          _free(value);\n  \n          return str;\n        },\n        'toWireType': function(destructors, value) {\n          if (value instanceof ArrayBuffer) {\n            value = new Uint8Array(value);\n          }\n  \n          var length;\n          var valueIsOfTypeString = (typeof value == 'string');\n  \n          if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n            throwBindingError('Cannot pass non-string to std::string');\n          }\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            length = lengthBytesUTF8(value);\n          } else {\n            length = value.length;\n          }\n  \n          // assumes 4-byte alignment\n          var base = _malloc(4 + length + 1);\n          var ptr = base + 4;\n          HEAPU32[((base)>>2)] = length;\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            stringToUTF8(value, ptr, length + 1);\n          } else {\n            if (valueIsOfTypeString) {\n              for (var i = 0; i < length; ++i) {\n                var charCode = value.charCodeAt(i);\n                if (charCode > 255) {\n                  _free(ptr);\n                  throwBindingError('String has UTF-16 code units that do not fit in 8 bits');\n                }\n                HEAPU8[ptr + i] = charCode;\n              }\n            } else {\n              for (var i = 0; i < length; ++i) {\n                HEAPU8[ptr + i] = value[i];\n              }\n            }\n          }\n  \n          if (destructors !== null) {\n            destructors.push(_free, base);\n          }\n          return base;\n        },\n        'argPackAdvance': 8,\n        'readValueFromPointer': simpleReadValueFromPointer,\n        destructorFunction: function(ptr) { _free(ptr); },\n      });\n    }\n\n  \n  \n  \n  var UTF16Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf-16le') : undefined;;\n  function UTF16ToString(ptr, maxBytesToRead) {\n      assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');\n      var endPtr = ptr;\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\n      // null terminator by itself.\n      // Also, use the length info to avoid running tiny strings through\n      // TextDecoder, since .subarray() allocates garbage.\n      var idx = endPtr >> 1;\n      var maxIdx = idx + maxBytesToRead / 2;\n      // If maxBytesToRead is not passed explicitly, it will be undefined, and this\n      // will always evaluate to true. This saves on code size.\n      while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;\n      endPtr = idx << 1;\n  \n      if (endPtr - ptr > 32 && UTF16Decoder)\n        return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n  \n      // Fallback: decode without UTF16Decoder\n      var str = '';\n  \n      // If maxBytesToRead is not passed explicitly, it will be undefined, and the\n      // for-loop's condition will always evaluate to true. The loop is then\n      // terminated on the first null char.\n      for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n        var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];\n        if (codeUnit == 0) break;\n        // fromCharCode constructs a character from a UTF-16 code unit, so we can\n        // pass the UTF16 string right through.\n        str += String.fromCharCode(codeUnit);\n      }\n  \n      return str;\n    }\n  \n  function stringToUTF16(str, outPtr, maxBytesToWrite) {\n      assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');\n      assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n      // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n      if (maxBytesToWrite === undefined) {\n        maxBytesToWrite = 0x7FFFFFFF;\n      }\n      if (maxBytesToWrite < 2) return 0;\n      maxBytesToWrite -= 2; // Null terminator.\n      var startPtr = outPtr;\n      var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;\n      for (var i = 0; i < numCharsToWrite; ++i) {\n        // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\n        var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n        HEAP16[((outPtr)>>1)] = codeUnit;\n        outPtr += 2;\n      }\n      // Null-terminate the pointer to the HEAP.\n      HEAP16[((outPtr)>>1)] = 0;\n      return outPtr - startPtr;\n    }\n  \n  function lengthBytesUTF16(str) {\n      return str.length*2;\n    }\n  \n  function UTF32ToString(ptr, maxBytesToRead) {\n      assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');\n      var i = 0;\n  \n      var str = '';\n      // If maxBytesToRead is not passed explicitly, it will be undefined, and this\n      // will always evaluate to true. This saves on code size.\n      while (!(i >= maxBytesToRead / 4)) {\n        var utf32 = HEAP32[(((ptr)+(i*4))>>2)];\n        if (utf32 == 0) break;\n        ++i;\n        // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        if (utf32 >= 0x10000) {\n          var ch = utf32 - 0x10000;\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n        } else {\n          str += String.fromCharCode(utf32);\n        }\n      }\n      return str;\n    }\n  \n  function stringToUTF32(str, outPtr, maxBytesToWrite) {\n      assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');\n      assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n      // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n      if (maxBytesToWrite === undefined) {\n        maxBytesToWrite = 0x7FFFFFFF;\n      }\n      if (maxBytesToWrite < 4) return 0;\n      var startPtr = outPtr;\n      var endPtr = startPtr + maxBytesToWrite - 4;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n        if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {\n          var trailSurrogate = str.charCodeAt(++i);\n          codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);\n        }\n        HEAP32[((outPtr)>>2)] = codeUnit;\n        outPtr += 4;\n        if (outPtr + 4 > endPtr) break;\n      }\n      // Null-terminate the pointer to the HEAP.\n      HEAP32[((outPtr)>>2)] = 0;\n      return outPtr - startPtr;\n    }\n  \n  function lengthBytesUTF32(str) {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var codeUnit = str.charCodeAt(i);\n        if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.\n        len += 4;\n      }\n  \n      return len;\n    }\n  function __embind_register_std_wstring(rawType, charSize, name) {\n      name = readLatin1String(name);\n      var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n      if (charSize === 2) {\n        decodeString = UTF16ToString;\n        encodeString = stringToUTF16;\n        lengthBytesUTF = lengthBytesUTF16;\n        getHeap = () => HEAPU16;\n        shift = 1;\n      } else if (charSize === 4) {\n        decodeString = UTF32ToString;\n        encodeString = stringToUTF32;\n        lengthBytesUTF = lengthBytesUTF32;\n        getHeap = () => HEAPU32;\n        shift = 2;\n      }\n      registerType(rawType, {\n        name: name,\n        'fromWireType': function(value) {\n          // Code mostly taken from _embind_register_std_string fromWireType\n          var length = HEAPU32[value >> 2];\n          var HEAP = getHeap();\n          var str;\n  \n          var decodeStartPtr = value + 4;\n          // Looping here to support possible embedded '0' bytes\n          for (var i = 0; i <= length; ++i) {\n            var currentBytePtr = value + 4 + i * charSize;\n            if (i == length || HEAP[currentBytePtr >> shift] == 0) {\n              var maxReadBytes = currentBytePtr - decodeStartPtr;\n              var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n              if (str === undefined) {\n                str = stringSegment;\n              } else {\n                str += String.fromCharCode(0);\n                str += stringSegment;\n              }\n              decodeStartPtr = currentBytePtr + charSize;\n            }\n          }\n  \n          _free(value);\n  \n          return str;\n        },\n        'toWireType': function(destructors, value) {\n          if (!(typeof value == 'string')) {\n            throwBindingError('Cannot pass non-string to C++ string type ' + name);\n          }\n  \n          // assumes 4-byte alignment\n          var length = lengthBytesUTF(value);\n          var ptr = _malloc(4 + length + charSize);\n          HEAPU32[ptr >> 2] = length >> shift;\n  \n          encodeString(value, ptr + 4, length + charSize);\n  \n          if (destructors !== null) {\n            destructors.push(_free, ptr);\n          }\n          return ptr;\n        },\n        'argPackAdvance': 8,\n        'readValueFromPointer': simpleReadValueFromPointer,\n        destructorFunction: function(ptr) { _free(ptr); },\n      });\n    }\n\n  \n  function __embind_register_void(rawType, name) {\n      name = readLatin1String(name);\n      registerType(rawType, {\n          isVoid: true, // void return values can be optimized out sometimes\n          name: name,\n          'argPackAdvance': 0,\n          'fromWireType': function() {\n              return undefined;\n          },\n          'toWireType': function(destructors, o) {\n              // TODO: assert if anything else is given?\n              return undefined;\n          },\n      });\n    }\n\n  function _emscripten_memcpy_big(dest, src, num) {\n      HEAPU8.copyWithin(dest, src, src + num);\n    }\n\n  function getHeapMax() {\n      return HEAPU8.length;\n    }\n  \n  function abortOnCannotGrowMemory(requestedSize) {\n      abort('Cannot enlarge memory arrays to size ' + requestedSize + ' bytes (OOM). Either (1) compile with -sINITIAL_MEMORY=X with X higher than the current value ' + HEAP8.length + ', (2) compile with -sALLOW_MEMORY_GROWTH which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with -sABORTING_MALLOC=0');\n    }\n  function _emscripten_resize_heap(requestedSize) {\n      var oldSize = HEAPU8.length;\n      requestedSize = requestedSize >>> 0;\n      abortOnCannotGrowMemory(requestedSize);\n    }\n\n  var SYSCALLS = {varargs:undefined,get:function() {\n        assert(SYSCALLS.varargs != undefined);\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];\n        return ret;\n      },getStr:function(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      }};\n  function _fd_close(fd) {\n      abort('fd_close called without SYSCALLS_REQUIRE_FILESYSTEM');\n    }\n\n  function convertI32PairToI53Checked(lo, hi) {\n      assert(lo == (lo >>> 0) || lo == (lo|0)); // lo should either be a i32 or a u32\n      assert(hi === (hi|0));                    // hi should be a i32\n      return ((hi + 0x200000) >>> 0 < 0x400001 - !!lo) ? (lo >>> 0) + hi * 4294967296 : NaN;\n    }\n  \n  \n  \n  \n  function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n      return 70;\n    }\n\n  var printCharBuffers = [null,[],[]];\n  \n  function printChar(stream, curr) {\n      var buffer = printCharBuffers[stream];\n      assert(buffer);\n      if (curr === 0 || curr === 10) {\n        (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n        buffer.length = 0;\n      } else {\n        buffer.push(curr);\n      }\n    }\n  \n  function flush_NO_FILESYSTEM() {\n      // flush anything remaining in the buffers during shutdown\n      _fflush(0);\n      if (printCharBuffers[1].length) printChar(1, 10);\n      if (printCharBuffers[2].length) printChar(2, 10);\n    }\n  \n  \n  function _fd_write(fd, iov, iovcnt, pnum) {\n      // hack to support printf in SYSCALLS_REQUIRE_FILESYSTEM=0\n      var num = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[((iov)>>2)];\n        var len = HEAPU32[(((iov)+(4))>>2)];\n        iov += 8;\n        for (var j = 0; j < len; j++) {\n          printChar(fd, HEAPU8[ptr+j]);\n        }\n        num += len;\n      }\n      HEAPU32[((pnum)>>2)] = num;\n      return 0;\n    }\n\n  function getCFunc(ident) {\n      var func = Module['_' + ident]; // closure exported function\n      assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');\n      return func;\n    }\n  \n  function writeArrayToMemory(array, buffer) {\n      assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)')\n      HEAP8.set(array, buffer);\n    }\n  \n  \n  function stringToUTF8OnStack(str) {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = stackAlloc(size);\n      stringToUTF8(str, ret, size);\n      return ret;\n    }\n  \n  \n    /**\n     * @param {string|null=} returnType\n     * @param {Array=} argTypes\n     * @param {Arguments|Array=} args\n     * @param {Object=} opts\n     */\n  function ccall(ident, returnType, argTypes, args, opts) {\n      // For fast lookup of conversion functions\n      var toC = {\n        'string': (str) => {\n          var ret = 0;\n          if (str !== null && str !== undefined && str !== 0) { // null string\n            // at most 4 bytes per UTF-8 code point, +1 for the trailing '\\0'\n            ret = stringToUTF8OnStack(str);\n          }\n          return ret;\n        },\n        'array': (arr) => {\n          var ret = stackAlloc(arr.length);\n          writeArrayToMemory(arr, ret);\n          return ret;\n        }\n      };\n  \n      function convertReturnValue(ret) {\n        if (returnType === 'string') {\n          \n          return UTF8ToString(ret);\n        }\n        if (returnType === 'boolean') return Boolean(ret);\n        return ret;\n      }\n  \n      var func = getCFunc(ident);\n      var cArgs = [];\n      var stack = 0;\n      assert(returnType !== 'array', 'Return type should not be \"array\".');\n      if (args) {\n        for (var i = 0; i < args.length; i++) {\n          var converter = toC[argTypes[i]];\n          if (converter) {\n            if (stack === 0) stack = stackSave();\n            cArgs[i] = converter(args[i]);\n          } else {\n            cArgs[i] = args[i];\n          }\n        }\n      }\n      var ret = func.apply(null, cArgs);\n      function onDone(ret) {\n        if (stack !== 0) stackRestore(stack);\n        return convertReturnValue(ret);\n      }\n  \n      ret = onDone(ret);\n      return ret;\n    }\n\n  \n  \n    /**\n     * @param {string=} returnType\n     * @param {Array=} argTypes\n     * @param {Object=} opts\n     */\n  function cwrap(ident, returnType, argTypes, opts) {\n      return function() {\n        return ccall(ident, returnType, argTypes, arguments, opts);\n      }\n    }\nembind_init_charCodes();\nBindingError = Module['BindingError'] = extendError(Error, 'BindingError');;\nInternalError = Module['InternalError'] = extendError(Error, 'InternalError');;\ninit_emval();;\nUnboundTypeError = Module['UnboundTypeError'] = extendError(Error, 'UnboundTypeError');;\nfunction checkIncomingModuleAPI() {\n  ignoredModuleProp('fetchSettings');\n}\nvar wasmImports = {\n  \"_embind_register_bigint\": __embind_register_bigint,\n  \"_embind_register_bool\": __embind_register_bool,\n  \"_embind_register_emval\": __embind_register_emval,\n  \"_embind_register_float\": __embind_register_float,\n  \"_embind_register_function\": __embind_register_function,\n  \"_embind_register_integer\": __embind_register_integer,\n  \"_embind_register_memory_view\": __embind_register_memory_view,\n  \"_embind_register_std_string\": __embind_register_std_string,\n  \"_embind_register_std_wstring\": __embind_register_std_wstring,\n  \"_embind_register_void\": __embind_register_void,\n  \"emscripten_memcpy_big\": _emscripten_memcpy_big,\n  \"emscripten_resize_heap\": _emscripten_resize_heap,\n  \"fd_close\": _fd_close,\n  \"fd_seek\": _fd_seek,\n  \"fd_write\": _fd_write\n};\nvar asm = createWasm();\n/** @type {function(...*):?} */\nvar ___wasm_call_ctors = createExportWrapper(\"__wasm_call_ctors\");\n/** @type {function(...*):?} */\nvar ___getTypeName = Module[\"___getTypeName\"] = createExportWrapper(\"__getTypeName\");\n/** @type {function(...*):?} */\nvar __embind_initialize_bindings = Module[\"__embind_initialize_bindings\"] = createExportWrapper(\"_embind_initialize_bindings\");\n/** @type {function(...*):?} */\nvar ___errno_location = createExportWrapper(\"__errno_location\");\n/** @type {function(...*):?} */\nvar _fflush = Module[\"_fflush\"] = createExportWrapper(\"fflush\");\n/** @type {function(...*):?} */\nvar _malloc = createExportWrapper(\"malloc\");\n/** @type {function(...*):?} */\nvar _free = createExportWrapper(\"free\");\n/** @type {function(...*):?} */\nvar _emscripten_stack_init = function() {\n  return (_emscripten_stack_init = Module[\"asm\"][\"emscripten_stack_init\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_free = function() {\n  return (_emscripten_stack_get_free = Module[\"asm\"][\"emscripten_stack_get_free\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_base = function() {\n  return (_emscripten_stack_get_base = Module[\"asm\"][\"emscripten_stack_get_base\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_end = function() {\n  return (_emscripten_stack_get_end = Module[\"asm\"][\"emscripten_stack_get_end\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar stackSave = createExportWrapper(\"stackSave\");\n/** @type {function(...*):?} */\nvar stackRestore = createExportWrapper(\"stackRestore\");\n/** @type {function(...*):?} */\nvar stackAlloc = createExportWrapper(\"stackAlloc\");\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_current = function() {\n  return (_emscripten_stack_get_current = Module[\"asm\"][\"emscripten_stack_get_current\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = createExportWrapper(\"dynCall_jiji\");\n\n\n// include: postamble.js\n// === Auto-generated postamble setup entry stuff ===\n\nModule[\"ccall\"] = ccall;\nModule[\"cwrap\"] = cwrap;\nvar missingLibrarySymbols = [\n  'zeroMemory',\n  'exitJS',\n  'emscripten_realloc_buffer',\n  'isLeapYear',\n  'ydayFromDate',\n  'arraySum',\n  'addDays',\n  'setErrNo',\n  'inetPton4',\n  'inetNtop4',\n  'inetPton6',\n  'inetNtop6',\n  'readSockaddr',\n  'writeSockaddr',\n  'getHostByName',\n  'initRandomFill',\n  'randomFill',\n  'traverseStack',\n  'getCallstack',\n  'emscriptenLog',\n  'convertPCtoSourceLocation',\n  'readEmAsmArgs',\n  'jstoi_q',\n  'jstoi_s',\n  'getExecutableName',\n  'listenOnce',\n  'autoResumeAudioContext',\n  'handleException',\n  'runtimeKeepalivePush',\n  'runtimeKeepalivePop',\n  'callUserCallback',\n  'maybeExit',\n  'safeSetTimeout',\n  'asmjsMangle',\n  'asyncLoad',\n  'alignMemory',\n  'mmapAlloc',\n  'getNativeTypeSize',\n  'STACK_SIZE',\n  'STACK_ALIGN',\n  'POINTER_SIZE',\n  'ASSERTIONS',\n  'writeI53ToI64',\n  'writeI53ToI64Clamped',\n  'writeI53ToI64Signaling',\n  'writeI53ToU64Clamped',\n  'writeI53ToU64Signaling',\n  'readI53FromI64',\n  'readI53FromU64',\n  'convertI32PairToI53',\n  'convertU32PairToI53',\n  'uleb128Encode',\n  'sigToWasmTypes',\n  'generateFuncType',\n  'convertJsFunctionToWasm',\n  'getEmptyTableSlot',\n  'updateTableMap',\n  'getFunctionAddress',\n  'addFunction',\n  'removeFunction',\n  'reallyNegative',\n  'unSign',\n  'strLen',\n  'reSign',\n  'formatString',\n  'intArrayFromString',\n  'intArrayToString',\n  'AsciiToString',\n  'stringToAscii',\n  'stringToNewUTF8',\n  'getSocketFromFD',\n  'getSocketAddress',\n  'registerKeyEventCallback',\n  'maybeCStringToJsString',\n  'findEventTarget',\n  'findCanvasEventTarget',\n  'getBoundingClientRect',\n  'fillMouseEventData',\n  'registerMouseEventCallback',\n  'registerWheelEventCallback',\n  'registerUiEventCallback',\n  'registerFocusEventCallback',\n  'fillDeviceOrientationEventData',\n  'registerDeviceOrientationEventCallback',\n  'fillDeviceMotionEventData',\n  'registerDeviceMotionEventCallback',\n  'screenOrientation',\n  'fillOrientationChangeEventData',\n  'registerOrientationChangeEventCallback',\n  'fillFullscreenChangeEventData',\n  'registerFullscreenChangeEventCallback',\n  'JSEvents_requestFullscreen',\n  'JSEvents_resizeCanvasForFullscreen',\n  'registerRestoreOldStyle',\n  'hideEverythingExceptGivenElement',\n  'restoreHiddenElements',\n  'setLetterbox',\n  'softFullscreenResizeWebGLRenderTarget',\n  'doRequestFullscreen',\n  'fillPointerlockChangeEventData',\n  'registerPointerlockChangeEventCallback',\n  'registerPointerlockErrorEventCallback',\n  'requestPointerLock',\n  'fillVisibilityChangeEventData',\n  'registerVisibilityChangeEventCallback',\n  'registerTouchEventCallback',\n  'fillGamepadEventData',\n  'registerGamepadEventCallback',\n  'registerBeforeUnloadEventCallback',\n  'fillBatteryEventData',\n  'battery',\n  'registerBatteryEventCallback',\n  'setCanvasElementSize',\n  'getCanvasElementSize',\n  'demangle',\n  'demangleAll',\n  'jsStackTrace',\n  'stackTrace',\n  'getEnvStrings',\n  'checkWasiClock',\n  'wasiRightsToMuslOFlags',\n  'wasiOFlagsToMuslOFlags',\n  'createDyncallWrapper',\n  'setImmediateWrapped',\n  'clearImmediateWrapped',\n  'polyfillSetImmediate',\n  'getPromise',\n  'makePromise',\n  'makePromiseCallback',\n  'ExceptionInfo',\n  'exception_addRef',\n  'exception_decRef',\n  'setMainLoop',\n  '_setNetworkCallback',\n  'heapObjectForWebGLType',\n  'heapAccessShiftForWebGLHeap',\n  'webgl_enable_ANGLE_instanced_arrays',\n  'webgl_enable_OES_vertex_array_object',\n  'webgl_enable_WEBGL_draw_buffers',\n  'webgl_enable_WEBGL_multi_draw',\n  'emscriptenWebGLGet',\n  'computeUnpackAlignedImageSize',\n  'colorChannelsInGlTextureFormat',\n  'emscriptenWebGLGetTexPixelData',\n  '__glGenObject',\n  'emscriptenWebGLGetUniform',\n  'webglGetUniformLocation',\n  'webglPrepareUniformLocationsBeforeFirstUse',\n  'webglGetLeftBracePos',\n  'emscriptenWebGLGetVertexAttrib',\n  '__glGetActiveAttribOrUniform',\n  'writeGLArray',\n  'registerWebGlEventCallback',\n  'runAndAbortIfError',\n  'SDL_unicode',\n  'SDL_ttfContext',\n  'SDL_audio',\n  'GLFW_Window',\n  'ALLOC_NORMAL',\n  'ALLOC_STACK',\n  'allocate',\n  'writeStringToMemory',\n  'writeAsciiToMemory',\n  'init_embind',\n  'getBasestPointer',\n  'registerInheritedInstance',\n  'unregisterInheritedInstance',\n  'getInheritedInstance',\n  'getInheritedInstanceCount',\n  'getLiveInheritedInstances',\n  'requireRegisteredType',\n  'enumReadValueFromPointer',\n  'genericPointerToWireType',\n  'constNoSmartPtrRawPointerToWireType',\n  'nonConstNoSmartPtrRawPointerToWireType',\n  'init_RegisteredPointer',\n  'RegisteredPointer',\n  'RegisteredPointer_getPointee',\n  'RegisteredPointer_destructor',\n  'RegisteredPointer_deleteObject',\n  'RegisteredPointer_fromWireType',\n  'runDestructor',\n  'releaseClassHandle',\n  'detachFinalizer',\n  'attachFinalizer',\n  'makeClassHandle',\n  'init_ClassHandle',\n  'ClassHandle',\n  'ClassHandle_isAliasOf',\n  'throwInstanceAlreadyDeleted',\n  'ClassHandle_clone',\n  'ClassHandle_delete',\n  'ClassHandle_isDeleted',\n  'ClassHandle_deleteLater',\n  'flushPendingDeletes',\n  'setDelayFunction',\n  'RegisteredClass',\n  'shallowCopyInternalPointer',\n  'downcastPointer',\n  'upcastPointer',\n  'validateThis',\n  'getStringOrSymbol',\n  'craftEmvalAllocator',\n  'emval_get_global',\n  'emval_lookupTypes',\n  'emval_allocateDestructors',\n  'emval_addMethodCaller',\n];\nmissingLibrarySymbols.forEach(missingLibrarySymbol)\n\nvar unexportedSymbols = [\n  'run',\n  'addOnPreRun',\n  'addOnInit',\n  'addOnPreMain',\n  'addOnExit',\n  'addOnPostRun',\n  'addRunDependency',\n  'removeRunDependency',\n  'FS_createFolder',\n  'FS_createPath',\n  'FS_createDataFile',\n  'FS_createPreloadedFile',\n  'FS_createLazyFile',\n  'FS_createLink',\n  'FS_createDevice',\n  'FS_unlink',\n  'out',\n  'err',\n  'callMain',\n  'abort',\n  'keepRuntimeAlive',\n  'wasmMemory',\n  'stackAlloc',\n  'stackSave',\n  'stackRestore',\n  'getTempRet0',\n  'setTempRet0',\n  'writeStackCookie',\n  'checkStackCookie',\n  'ptrToString',\n  'getHeapMax',\n  'abortOnCannotGrowMemory',\n  'ENV',\n  'MONTH_DAYS_REGULAR',\n  'MONTH_DAYS_LEAP',\n  'MONTH_DAYS_REGULAR_CUMULATIVE',\n  'MONTH_DAYS_LEAP_CUMULATIVE',\n  'ERRNO_CODES',\n  'ERRNO_MESSAGES',\n  'DNS',\n  'Protocols',\n  'Sockets',\n  'timers',\n  'warnOnce',\n  'UNWIND_CACHE',\n  'readEmAsmArgsArray',\n  'dynCallLegacy',\n  'getDynCaller',\n  'dynCall',\n  'HandleAllocator',\n  'convertI32PairToI53Checked',\n  'getCFunc',\n  'freeTableIndexes',\n  'functionsInTableMap',\n  'setValue',\n  'getValue',\n  'PATH',\n  'PATH_FS',\n  'UTF8Decoder',\n  'UTF8ArrayToString',\n  'UTF8ToString',\n  'stringToUTF8Array',\n  'stringToUTF8',\n  'lengthBytesUTF8',\n  'UTF16Decoder',\n  'UTF16ToString',\n  'stringToUTF16',\n  'lengthBytesUTF16',\n  'UTF32ToString',\n  'stringToUTF32',\n  'lengthBytesUTF32',\n  'stringToUTF8OnStack',\n  'writeArrayToMemory',\n  'SYSCALLS',\n  'JSEvents',\n  'specialHTMLTargets',\n  'currentFullscreenStrategy',\n  'restoreOldWindowedStyle',\n  'ExitStatus',\n  'flush_NO_FILESYSTEM',\n  'dlopenMissingError',\n  'promiseMap',\n  'uncaughtExceptionCount',\n  'exceptionLast',\n  'exceptionCaught',\n  'Browser',\n  'wget',\n  'FS',\n  'MEMFS',\n  'TTY',\n  'PIPEFS',\n  'SOCKFS',\n  'tempFixedLengthArray',\n  'miniTempWebGLFloatBuffers',\n  'miniTempWebGLIntBuffers',\n  'GL',\n  'emscripten_webgl_power_preferences',\n  'AL',\n  'GLUT',\n  'EGL',\n  'GLEW',\n  'IDBStore',\n  'SDL',\n  'SDL_gfx',\n  'GLFW',\n  'allocateUTF8',\n  'allocateUTF8OnStack',\n  'InternalError',\n  'BindingError',\n  'UnboundTypeError',\n  'PureVirtualError',\n  'throwInternalError',\n  'throwBindingError',\n  'throwUnboundTypeError',\n  'ensureOverloadTable',\n  'exposePublicSymbol',\n  'replacePublicSymbol',\n  'extendError',\n  'createNamedFunction',\n  'embindRepr',\n  'registeredInstances',\n  'registeredTypes',\n  'awaitingDependencies',\n  'typeDependencies',\n  'registeredPointers',\n  'registerType',\n  'whenDependentTypesAreResolved',\n  'embind_charCodes',\n  'embind_init_charCodes',\n  'readLatin1String',\n  'getTypeName',\n  'heap32VectorToArray',\n  'getShiftFromSize',\n  'integerReadValueFromPointer',\n  'floatReadValueFromPointer',\n  'simpleReadValueFromPointer',\n  'runDestructors',\n  'newFunc',\n  'craftInvokerFunction',\n  'embind__requireFunction',\n  'tupleRegistrations',\n  'structRegistrations',\n  'finalizationRegistry',\n  'detachFinalizer_deps',\n  'deletionQueue',\n  'delayFunction',\n  'char_0',\n  'char_9',\n  'makeLegalFunctionName',\n  'emval_handles',\n  'emval_symbols',\n  'init_emval',\n  'count_emval_handles',\n  'Emval',\n  'emval_newers',\n  'emval_methodCallers',\n  'emval_registeredMethods',\n];\nunexportedSymbols.forEach(unexportedRuntimeSymbol);\n\n\n\nvar calledRun;\n\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!calledRun) run();\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n};\n\nfunction stackCheckInit() {\n  // This is normally called automatically during __wasm_call_ctors but need to\n  // get these values before even running any of the ctors so we call it redundantly\n  // here.\n  _emscripten_stack_init();\n  // TODO(sbc): Move writeStackCookie to native to to avoid this.\n  writeStackCookie();\n}\n\nfunction run() {\n\n  if (runDependencies > 0) {\n    return;\n  }\n\n    stackCheckInit();\n\n  preRun();\n\n  // a preRun added a dependency, run will be called later\n  if (runDependencies > 0) {\n    return;\n  }\n\n  function doRun() {\n    // run may have just been called through dependencies being fulfilled just in this very frame,\n    // or while the async setStatus time below was happening\n    if (calledRun) return;\n    calledRun = true;\n    Module['calledRun'] = true;\n\n    if (ABORT) return;\n\n    initRuntime();\n\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n    assert(!Module['_main'], 'compiled without a main, but one is present. if you added it from JS, use Module[\"onRuntimeInitialized\"]');\n\n    postRun();\n  }\n\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function() {\n      setTimeout(function() {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else\n  {\n    doRun();\n  }\n  checkStackCookie();\n}\n\nfunction checkUnflushedContent() {\n  // Compiler settings do not allow exiting the runtime, so flushing\n  // the streams is not possible. but in ASSERTIONS mode we check\n  // if there was something to flush, and if so tell the user they\n  // should request that the runtime be exitable.\n  // Normally we would not even include flush() at all, but in ASSERTIONS\n  // builds we do so just for this check, and here we see if there is any\n  // content to flush, that is, we check if there would have been\n  // something a non-ASSERTIONS build would have not seen.\n  // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0\n  // mode (which has its own special function for this; otherwise, all\n  // the code is inside libc)\n  var oldOut = out;\n  var oldErr = err;\n  var has = false;\n  out = err = (x) => {\n    has = true;\n  }\n  try { // it doesn't matter if it fails\n    flush_NO_FILESYSTEM();\n  } catch(e) {}\n  out = oldOut;\n  err = oldErr;\n  if (has) {\n    warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.');\n    warnOnce('(this may also be due to not including full filesystem support - try building with -sFORCE_FILESYSTEM)');\n  }\n}\n\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\n\nrun();\n\n\n// end include: postamble.js\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}