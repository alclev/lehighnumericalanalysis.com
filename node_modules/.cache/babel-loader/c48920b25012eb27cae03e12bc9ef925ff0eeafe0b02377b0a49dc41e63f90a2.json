{"ast":null,"code":"import _defineProperty from\"/Users/alexclevenger/lehighnumericalanalysis.com/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";// include: shell.js\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module=typeof Module!='undefined'?Module:{};// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram='./this.program';var quit_=function quit_(status,toThrow){throw toThrow;};// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n// Attempt to auto-detect the environment\nvar ENVIRONMENT_IS_WEB=typeof window=='object';var ENVIRONMENT_IS_WORKER=typeof importScripts=='function';// N.b. Electron.js environment is simultaneously a NODE-environment, but\n// also a web environment.\nvar ENVIRONMENT_IS_NODE=typeof process=='object'&&typeof process.versions=='object'&&typeof process.versions.node=='string';var ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;if(Module['ENVIRONMENT']){throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)');}// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory='';function locateFile(path){if(Module['locateFile']){return Module['locateFile'](path,scriptDirectory);}return scriptDirectory+path;}// Hooks that are implemented differently in different runtime environments.\nvar read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_NODE){if(typeof process=='undefined'||!process.release||process.release.name!=='node')throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');var nodeVersion=process.versions.node;var numericVersion=nodeVersion.split('.').slice(0,3);numericVersion=numericVersion[0]*10000+numericVersion[1]*100+numericVersion[2].split('-')[0]*1;var minVersion=101900;if(numericVersion<101900){throw new Error('This emscripten-generated code requires node v10.19.19.0 (detected v'+nodeVersion+')');}// `require()` is no-op in an ESM module, use `createRequire()` to construct\n// the require()` function.  This is only necessary for multi-environment\n// builds, `-sENVIRONMENT=node` emits a static import declaration instead.\n// TODO: Swap all `require()`'s with `import()`'s?\n// These modules will usually be used on Node.js. Load them eagerly to avoid\n// the complexity of lazy-loading.\nvar fs=require('fs');var nodePath=require('path');if(ENVIRONMENT_IS_WORKER){scriptDirectory=nodePath.dirname(scriptDirectory)+'/';}else{scriptDirectory=__dirname+'/';}// include: node_shell_read.js\nread_=function read_(filename,binary){// We need to re-wrap `file://` strings to URLs. Normalizing isn't\n// necessary in that case, the path should already be absolute.\nfilename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:'utf8');};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret);}assert(ret.buffer);return ret;};readAsync=function readAsync(filename,onload,onerror){// See the comment in the `read_` function.\nfilename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer);});};// end include: node_shell_read.js\nif(!Module['thisProgram']&&process.argv.length>1){thisProgram=process.argv[1].replace(/\\\\/g,'/');}arguments_=process.argv.slice(2);if(typeof module!='undefined'){module['exports']=Module;}process.on('uncaughtException',function(ex){// suppress ExitStatus exceptions from showing an error\nif(ex!=='unwind'&&!(ex instanceof ExitStatus)&&!(ex.context instanceof ExitStatus)){throw ex;}});// Without this older versions of node (< v15) will log unhandled rejections\n// but return 0, which is not normally the desired behaviour.  This is\n// not be needed with node v15 and about because it is now the default\n// behaviour:\n// See https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode\nvar nodeMajor=process.versions.node.split(\".\")[0];if(nodeMajor<15){process.on('unhandledRejection',function(reason){throw reason;});}quit_=function quit_(status,toThrow){process.exitCode=status;throw toThrow;};Module['inspect']=function(){return'[Emscripten Module object]';};}else if(ENVIRONMENT_IS_SHELL){if(typeof process=='object'&&typeof require==='function'||typeof window=='object'||typeof importScripts=='function')throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');if(typeof read!='undefined'){read_=function shell_read(f){return read(f);};}readBinary=function readBinary(f){var data;if(typeof readbuffer=='function'){return new Uint8Array(readbuffer(f));}data=read(f,'binary');assert(typeof data=='object');return data;};readAsync=function readAsync(f,onload,onerror){setTimeout(function(){return onload(readBinary(f));},0);};if(typeof clearTimeout=='undefined'){globalThis.clearTimeout=function(id){};}if(typeof scriptArgs!='undefined'){arguments_=scriptArgs;}else if(typeof arguments!='undefined'){arguments_=arguments;}if(typeof quit=='function'){quit_=function quit_(status,toThrow){// Unlike node which has process.exitCode, d8 has no such mechanism. So we\n// have no way to set the exit code and then let the program exit with\n// that code when it naturally stops running (say, when all setTimeouts\n// have completed). For that reason, we must call `quit` - the only way to\n// set the exit code - but quit also halts immediately.  To increase\n// consistency with node (and the web) we schedule the actual quit call\n// using a setTimeout to give the current stack and any exception handlers\n// a chance to run.  This enables features such as addOnPostRun (which\n// expected to be able to run code after main returns).\nsetTimeout(function(){if(!(toThrow instanceof ExitStatus)){var toLog=toThrow;if(toThrow&&typeof toThrow=='object'&&toThrow.stack){toLog=[toThrow,toThrow.stack];}err('exiting due to exception: '+toLog);}quit(status);});throw toThrow;};}if(typeof print!='undefined'){// Prefer to use print/printErr where they exist, as they usually work better.\nif(typeof console=='undefined')console=/** @type{!Console} */{};console.log=/** @type{!function(this:Console, ...*): undefined} */print;console.warn=console.error=/** @type{!function(this:Console, ...*): undefined} */typeof printErr!='undefined'?printErr:print;}}else// Note that this includes Node.js workers when relevant (pthreads is enabled).\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\n// ENVIRONMENT_IS_NODE.\nif(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){// Check worker, not web, since window could be polyfilled\nscriptDirectory=self.location.href;}else if(typeof document!='undefined'&&document.currentScript){// web\nscriptDirectory=document.currentScript.src;}// blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n// otherwise, slice off the final part of the url to find the script directory.\n// if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n// and scriptDirectory will correctly be replaced with an empty string.\n// If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\n// they are removed because they could contain a slash.\nif(scriptDirectory.indexOf('blob:')!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf('/')+1);}else{scriptDirectory='';}if(!(typeof window=='object'||typeof importScripts=='function'))throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');// Differentiate the Web Worker from the Node Worker case, as reading must\n// be done differently.\n{// include: web_or_worker_shell_read.js\nread_=function read_(url){var xhr=new XMLHttpRequest();xhr.open('GET',url,false);xhr.send(null);return xhr.responseText;};if(ENVIRONMENT_IS_WORKER){readBinary=function readBinary(url){var xhr=new XMLHttpRequest();xhr.open('GET',url,false);xhr.responseType='arraybuffer';xhr.send(null);return new Uint8Array(/** @type{!ArrayBuffer} */xhr.response);};}readAsync=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest();xhr.open('GET',url,true);xhr.responseType='arraybuffer';xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){// file URLs can return 0\nonload(xhr.response);return;}onerror();};xhr.onerror=onerror;xhr.send(null);};// end include: web_or_worker_shell_read.js\n}setWindowTitle=function setWindowTitle(title){return document.title=title;};}else{throw new Error('environment detection error');}var out=Module['print']||console.log.bind(console);var err=Module['printErr']||console.warn.bind(console);// Merge back in the overrides\nObject.assign(Module,moduleOverrides);// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\nmoduleOverrides=null;checkIncomingModuleAPI();// Emit code to handle expected values on the Module object. This applies Module.x\n// to the proper local x. This has two benefits: first, we only emit it if it is\n// expected to arrive, and second, by using a local everywhere else that can be\n// minified.\nif(Module['arguments'])arguments_=Module['arguments'];legacyModuleProp('arguments','arguments_');if(Module['thisProgram'])thisProgram=Module['thisProgram'];legacyModuleProp('thisProgram','thisProgram');if(Module['quit'])quit_=Module['quit'];legacyModuleProp('quit','quit_');// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\n// Assertions on removed incoming Module JS APIs.\nassert(typeof Module['memoryInitializerPrefixURL']=='undefined','Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');assert(typeof Module['pthreadMainPrefixURL']=='undefined','Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');assert(typeof Module['cdInitializerPrefixURL']=='undefined','Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');assert(typeof Module['filePackagePrefixURL']=='undefined','Module.filePackagePrefixURL option was removed, use Module.locateFile instead');assert(typeof Module['read']=='undefined','Module.read option was removed (modify read_ in JS)');assert(typeof Module['readAsync']=='undefined','Module.readAsync option was removed (modify readAsync in JS)');assert(typeof Module['readBinary']=='undefined','Module.readBinary option was removed (modify readBinary in JS)');assert(typeof Module['setWindowTitle']=='undefined','Module.setWindowTitle option was removed (modify setWindowTitle in JS)');assert(typeof Module['TOTAL_MEMORY']=='undefined','Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY');legacyModuleProp('read','read_');legacyModuleProp('readAsync','readAsync');legacyModuleProp('readBinary','readBinary');legacyModuleProp('setWindowTitle','setWindowTitle');var IDBFS='IDBFS is no longer included by default; build with -lidbfs.js';var PROXYFS='PROXYFS is no longer included by default; build with -lproxyfs.js';var WORKERFS='WORKERFS is no longer included by default; build with -lworkerfs.js';var NODEFS='NODEFS is no longer included by default; build with -lnodefs.js';assert(!ENVIRONMENT_IS_SHELL,\"shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable.\");// end include: shell.js\n// include: preamble.js\n// === Preamble library stuff ===\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\nvar wasmBinary;if(Module['wasmBinary'])wasmBinary=Module['wasmBinary'];legacyModuleProp('wasmBinary','wasmBinary');var noExitRuntime=Module['noExitRuntime']||true;legacyModuleProp('noExitRuntime','noExitRuntime');if(typeof WebAssembly!='object'){abort('no native wasm support detected');}// Wasm globals\nvar wasmMemory;//========================================\n// Runtime essentials\n//========================================\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT=false;// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS;/** @type {function(*, string=)} */function assert(condition,text){if(!condition){abort('Assertion failed'+(text?': '+text:''));}}// We used to include malloc/free by default in the past. Show a helpful error in\n// builds with assertions.\n// Memory management\nvar HEAP,/** @type {!Int8Array} */HEAP8,/** @type {!Uint8Array} */HEAPU8,/** @type {!Int16Array} */HEAP16,/** @type {!Uint16Array} */HEAPU16,/** @type {!Int32Array} */HEAP32,/** @type {!Uint32Array} */HEAPU32,/** @type {!Float32Array} */HEAPF32,/** @type {!Float64Array} */HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module['HEAP8']=HEAP8=new Int8Array(b);Module['HEAP16']=HEAP16=new Int16Array(b);Module['HEAP32']=HEAP32=new Int32Array(b);Module['HEAPU8']=HEAPU8=new Uint8Array(b);Module['HEAPU16']=HEAPU16=new Uint16Array(b);Module['HEAPU32']=HEAPU32=new Uint32Array(b);Module['HEAPF32']=HEAPF32=new Float32Array(b);Module['HEAPF64']=HEAPF64=new Float64Array(b);}assert(!Module['STACK_SIZE'],'STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time');assert(typeof Int32Array!='undefined'&&typeof Float64Array!=='undefined'&&Int32Array.prototype.subarray!=undefined&&Int32Array.prototype.set!=undefined,'JS engine does not provide full typed array support');// If memory is defined in wasm, the user can't provide it, or set INITIAL_MEMORY\nassert(!Module['wasmMemory'],'Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally');assert(!Module['INITIAL_MEMORY'],'Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically');// include: runtime_init_table.js\n// In regular non-RELOCATABLE mode the table is exported\n// from the wasm module and this will be assigned once\n// the exports are available.\nvar wasmTable;// end include: runtime_init_table.js\n// include: runtime_stack_check.js\n// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\nfunction writeStackCookie(){var max=_emscripten_stack_get_end2();assert((max&3)==0);// If the stack ends at address zero we write our cookies 4 bytes into the\n// stack.  This prevents interference with the (separate) address-zero check\n// below.\nif(max==0){max+=4;}// The stack grow downwards towards _emscripten_stack_get_end.\n// We write cookies to the final two words in the stack and detect if they are\n// ever overwritten.\nHEAPU32[max>>2]=0x02135467;HEAPU32[max+4>>2]=0x89BACDFE;// Also test the global address 0 for integrity.\nHEAPU32[0]=0x63736d65;/* 'emsc' */}function checkStackCookie(){if(ABORT)return;var max=_emscripten_stack_get_end2();// See writeStackCookie().\nif(max==0){max+=4;}var cookie1=HEAPU32[max>>2];var cookie2=HEAPU32[max+4>>2];if(cookie1!=0x02135467||cookie2!=0x89BACDFE){abort('Stack overflow! Stack cookie has been overwritten at '+ptrToString(max)+', expected hex dwords 0x89BACDFE and 0x2135467, but received '+ptrToString(cookie2)+' '+ptrToString(cookie1));}// Also test the global address 0 for integrity.\nif(HEAPU32[0]!==0x63736d65/* 'emsc' */){abort('Runtime error: The application has corrupted its heap memory area (address zero)!');}}// end include: runtime_stack_check.js\n// include: runtime_assertions.js\n// Endianness check\n(function(){var h16=new Int16Array(1);var h8=new Int8Array(h16.buffer);h16[0]=0x6373;if(h8[0]!==0x73||h8[1]!==0x63)throw'Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)';})();// end include: runtime_assertions.js\nvar __ATPRERUN__=[];// functions called before the runtime is initialized\nvar __ATINIT__=[];// functions called during startup\nvar __ATEXIT__=[];// functions called during shutdown\nvar __ATPOSTRUN__=[];// functions called after the main() is called\nvar runtimeInitialized=false;var runtimeKeepaliveCounter=0;function keepRuntimeAlive(){return noExitRuntime||runtimeKeepaliveCounter>0;}function preRun(){if(Module['preRun']){if(typeof Module['preRun']=='function')Module['preRun']=[Module['preRun']];while(Module['preRun'].length){addOnPreRun(Module['preRun'].shift());}}callRuntimeCallbacks(__ATPRERUN__);}function initRuntime(){assert(!runtimeInitialized);runtimeInitialized=true;checkStackCookie();callRuntimeCallbacks(__ATINIT__);}function postRun(){checkStackCookie();if(Module['postRun']){if(typeof Module['postRun']=='function')Module['postRun']=[Module['postRun']];while(Module['postRun'].length){addOnPostRun(Module['postRun'].shift());}}callRuntimeCallbacks(__ATPOSTRUN__);}function addOnPreRun(cb){__ATPRERUN__.unshift(cb);}function addOnInit(cb){__ATINIT__.unshift(cb);}function addOnExit(cb){}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb);}// include: runtime_math.js\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\nassert(Math.imul,'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');assert(Math.fround,'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');assert(Math.clz32,'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');assert(Math.trunc,'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');// end include: runtime_math.js\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;// overridden to take different actions when all run dependencies are fulfilled\nvar runDependencyTracking={};function getUniqueRunDependency(id){var orig=id;while(1){if(!runDependencyTracking[id])return id;id=orig+Math.random();}}function addRunDependency(id){runDependencies++;if(Module['monitorRunDependencies']){Module['monitorRunDependencies'](runDependencies);}if(id){assert(!runDependencyTracking[id]);runDependencyTracking[id]=1;if(runDependencyWatcher===null&&typeof setInterval!='undefined'){// Check for missing dependencies every few seconds\nrunDependencyWatcher=setInterval(function(){if(ABORT){clearInterval(runDependencyWatcher);runDependencyWatcher=null;return;}var shown=false;for(var dep in runDependencyTracking){if(!shown){shown=true;err('still waiting on run dependencies:');}err('dependency: '+dep);}if(shown){err('(end of list)');}},10000);}}else{err('warning: run dependency added without ID');}}function removeRunDependency(id){runDependencies--;if(Module['monitorRunDependencies']){Module['monitorRunDependencies'](runDependencies);}if(id){assert(runDependencyTracking[id]);delete runDependencyTracking[id];}else{err('warning: run dependency removed without ID');}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null;}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback();// can add another dependenciesFulfilled\n}}}/** @param {string|number=} what */function abort(what){if(Module['onAbort']){Module['onAbort'](what);}what='Aborted('+what+')';// TODO(sbc): Should we remove printing and leave it up to whoever\n// catches the exception?\nerr(what);ABORT=true;EXITSTATUS=1;// Use a wasm runtime error, because a JS error might be seen as a foreign\n// exception, which means we'd run destructors on it. We need the error to\n// simply make the program stop.\n// FIXME This approach does not work in Wasm EH because it currently does not assume\n// all RuntimeErrors are from traps; it decides whether a RuntimeError is from\n// a trap or not based on a hidden field within the object. So at the moment\n// we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\n// allows this in the wasm spec.\n// Suppress closure compiler warning here. Closure compiler's builtin extern\n// defintion for WebAssembly.RuntimeError claims it takes no arguments even\n// though it can.\n// TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\n/** @suppress {checkTypes} */var e=new WebAssembly.RuntimeError(what);// Throw the error whether or not MODULARIZE is set because abort is used\n// in code paths apart from instantiation where an exception is expected\n// to be thrown when abort is called.\nthrow e;}// include: memoryprofiler.js\n// end include: memoryprofiler.js\n// show errors on likely calls to FS when it was not included\nvar FS={error:function error(){abort('Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with -sFORCE_FILESYSTEM');},init:function init(){FS.error();},createDataFile:function createDataFile(){FS.error();},createPreloadedFile:function createPreloadedFile(){FS.error();},createLazyFile:function createLazyFile(){FS.error();},open:function open(){FS.error();},mkdev:function mkdev(){FS.error();},registerDevice:function registerDevice(){FS.error();},analyzePath:function analyzePath(){FS.error();},ErrnoError:function ErrnoError(){FS.error();}};Module['FS_createDataFile']=FS.createDataFile;Module['FS_createPreloadedFile']=FS.createPreloadedFile;// include: URIUtils.js\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix='data:application/octet-stream;base64,';// Indicates whether filename is a base64 data URI.\nfunction isDataURI(filename){// Prefix of data URIs emitted by SINGLE_FILE and related options.\nreturn filename.startsWith(dataURIPrefix);}// Indicates whether filename is delivered via file protocol (as opposed to http/https)\nfunction isFileURI(filename){return filename.startsWith('file://');}// end include: URIUtils.js\n/** @param {boolean=} fixedasm */function createExportWrapper(name,fixedasm){return function(){var displayName=name;var asm=fixedasm;if(!fixedasm){asm=Module['asm'];}assert(runtimeInitialized,'native function `'+displayName+'` called before runtime initialization');if(!asm[name]){assert(asm[name],'exported native function `'+displayName+'` not found');}return asm[name].apply(null,arguments);};}// include: runtime_exceptions.js\n// end include: runtime_exceptions.js\nvar wasmBinaryFile;wasmBinaryFile='add.wasm';if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile);}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary);}if(readBinary){return readBinary(file);}throw\"both async and sync fetching of the wasm failed\";}catch(err){abort(err);}}function getBinaryPromise(binaryFile){// If we don't have the binary yet, try to load it asynchronously.\n// Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\n// See https://github.com/github/fetch/pull/92#issuecomment-140665932\n// Cordova or Electron apps are typically loaded from a file:// url.\n// So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\nif(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch=='function'&&!isFileURI(binaryFile)){return fetch(binaryFile,{credentials:'same-origin'}).then(function(response){if(!response['ok']){throw\"failed to load wasm binary file at '\"+binaryFile+\"'\";}return response['arrayBuffer']();}).catch(function(){return getBinary(binaryFile);});}else{if(readAsync){// fetch is not available or url is file => try XHR (readAsync uses XHR internally)\nreturn new Promise(function(resolve,reject){readAsync(binaryFile,function(response){resolve(new Uint8Array(/** @type{!ArrayBuffer} */response));},reject);});}}}// Otherwise, getBinary should be able to get it synchronously\nreturn Promise.resolve().then(function(){return getBinary(binaryFile);});}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(function(binary){return WebAssembly.instantiate(binary,imports);}).then(function(instance){return instance;}).then(receiver,function(reason){err('failed to asynchronously prepare wasm: '+reason);// Warn on some common problems.\nif(isFileURI(wasmBinaryFile)){err('warning: Loading from a file URI ('+wasmBinaryFile+') is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing');}abort(reason);});}function instantiateAsync(binary,binaryFile,imports,callback){if(!binary&&typeof WebAssembly.instantiateStreaming=='function'&&!isDataURI(binaryFile)&&// Don't use streaming for file:// delivered objects in a webview, fetch them synchronously.\n!isFileURI(binaryFile)&&// Avoid instantiateStreaming() on Node.js environment for now, as while\n// Node.js v18.1.0 implements it, it does not have a full fetch()\n// implementation yet.\n//\n// Reference:\n//   https://github.com/emscripten-core/emscripten/pull/16917\n!ENVIRONMENT_IS_NODE&&typeof fetch=='function'){return fetch(binaryFile,{credentials:'same-origin'}).then(function(response){// Suppress closure warning here since the upstream definition for\n// instantiateStreaming only allows Promise<Repsponse> rather than\n// an actual Response.\n// TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\n/** @suppress {checkTypes} */var result=WebAssembly.instantiateStreaming(response,imports);return result.then(callback,function(reason){// We expect the most common failure cause to be a bad MIME type for the binary,\n// in which case falling back to ArrayBuffer instantiation should work.\nerr('wasm streaming compile failed: '+reason);err('falling back to ArrayBuffer instantiation');return instantiateArrayBuffer(binaryFile,imports,callback);});});}else{return instantiateArrayBuffer(binaryFile,imports,callback);}}// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nfunction createWasm(){// prepare imports\nvar info={'env':wasmImports,'wasi_snapshot_preview1':wasmImports};// Load the wasm module and create an instance of using native support in the JS engine.\n// handle a generated wasm instance, receiving its exports and\n// performing other necessary setup\n/** @param {WebAssembly.Module=} module*/function receiveInstance(instance,module){var exports=instance.exports;Module['asm']=exports;wasmMemory=Module['asm']['memory'];assert(wasmMemory,\"memory not found in wasm exports\");// This assertion doesn't hold when emscripten is run in --post-link\n// mode.\n// TODO(sbc): Read INITIAL_MEMORY out of the wasm file in post-link mode.\n//assert(wasmMemory.buffer.byteLength === 16777216);\nupdateMemoryViews();wasmTable=Module['asm']['__indirect_function_table'];assert(wasmTable,\"table not found in wasm exports\");addOnInit(Module['asm']['__wasm_call_ctors']);removeRunDependency('wasm-instantiate');return exports;}// wait for the pthread pool (if any)\naddRunDependency('wasm-instantiate');// Prefer streaming instantiation if available.\n// Async compilation can be confusing when an error on the page overwrites Module\n// (for example, if the order of elements is wrong, and the one defining Module is\n// later), so we save Module and check it later.\nvar trueModule=Module;function receiveInstantiationResult(result){// 'result' is a ResultObject object which has both the module and instance.\n// receiveInstance() will swap in the exports (to Module.asm) so they can be called\nassert(Module===trueModule,'the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?');trueModule=null;// TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n// When the regression is fixed, can restore the above PTHREADS-enabled path.\nreceiveInstance(result['instance']);}// User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n// to manually instantiate the Wasm module themselves. This allows pages to\n// run the instantiation parallel to any other async startup actions they are\n// performing.\n// Also pthreads and wasm workers initialize the wasm instance through this\n// path.\nif(Module['instantiateWasm']){try{return Module['instantiateWasm'](info,receiveInstance);}catch(e){err('Module.instantiateWasm callback failed with error: '+e);return false;}}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult);return{};// no exports yet; we'll fill them in later\n}// Globals used by JS i64 conversions (see makeSetValue)\nvar tempDouble;var tempI64;// include: runtime_debug.js\nfunction legacyModuleProp(prop,newName){if(!Object.getOwnPropertyDescriptor(Module,prop)){Object.defineProperty(Module,prop,{configurable:true,get:function get(){abort('Module.'+prop+' has been replaced with plain '+newName+' (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)');}});}}function ignoredModuleProp(prop){if(Object.getOwnPropertyDescriptor(Module,prop)){abort('`Module.'+prop+'` was supplied but `'+prop+'` not included in INCOMING_MODULE_JS_API');}}// forcing the filesystem exports a few things by default\nfunction isExportedByForceFilesystem(name){return name==='FS_createPath'||name==='FS_createDataFile'||name==='FS_createPreloadedFile'||name==='FS_unlink'||name==='addRunDependency'||// The old FS has some functionality that WasmFS lacks.\nname==='FS_createLazyFile'||name==='FS_createDevice'||name==='removeRunDependency';}function missingGlobal(sym,msg){if(typeof globalThis!=='undefined'){Object.defineProperty(globalThis,sym,{configurable:true,get:function get(){warnOnce('`'+sym+'` is not longer defined by emscripten. '+msg);return undefined;}});}}missingGlobal('buffer','Please use HEAP8.buffer or wasmMemory.buffer');function missingLibrarySymbol(sym){if(typeof globalThis!=='undefined'&&!Object.getOwnPropertyDescriptor(globalThis,sym)){Object.defineProperty(globalThis,sym,{configurable:true,get:function get(){// Can't `abort()` here because it would break code that does runtime\n// checks.  e.g. `if (typeof SDL === 'undefined')`.\nvar msg='`'+sym+'` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line';// DEFAULT_LIBRARY_FUNCS_TO_INCLUDE requires the name as it appears in\n// library.js, which means $name for a JS name with no prefix, or name\n// for a JS name like _name.\nvar librarySymbol=sym;if(!librarySymbol.startsWith('_')){librarySymbol='$'+sym;}msg+=\" (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE=\"+librarySymbol+\")\";if(isExportedByForceFilesystem(sym)){msg+='. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';}warnOnce(msg);return undefined;}});}// Any symbol that is not included from the JS libary is also (by definition)\n// not exported on the Module object.\nunexportedRuntimeSymbol(sym);}function unexportedRuntimeSymbol(sym){if(!Object.getOwnPropertyDescriptor(Module,sym)){Object.defineProperty(Module,sym,{configurable:true,get:function get(){var msg=\"'\"+sym+\"' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\";if(isExportedByForceFilesystem(sym)){msg+='. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';}abort(msg);}});}}// Used by XXXXX_DEBUG settings to output debug messages.\nfunction dbg(text){// TODO(sbc): Make this configurable somehow.  Its not always convenient for\n// logging to show up as errors.\nconsole.error(text);}// end include: runtime_debug.js\n// === Body ===\n// end include: preamble.js\n/** @constructor */function ExitStatus(status){this.name='ExitStatus';this.message='Program terminated with exit('+status+')';this.status=status;}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){// Pass the module as the first argument.\ncallbacks.shift()(Module);}}/**\n     * @param {number} ptr\n     * @param {string} type\n     */function getValue(ptr){var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'i8';if(type.endsWith('*'))type='*';switch(type){case'i1':return HEAP8[ptr>>0];case'i8':return HEAP8[ptr>>0];case'i16':return HEAP16[ptr>>1];case'i32':return HEAP32[ptr>>2];case'i64':return HEAP32[ptr>>2];case'float':return HEAPF32[ptr>>2];case'double':return HEAPF64[ptr>>3];case'*':return HEAPU32[ptr>>2];default:abort('invalid type for getValue: '+type);}}function ptrToString(ptr){assert(typeof ptr==='number');return'0x'+ptr.toString(16).padStart(8,'0');}/**\n     * @param {number} ptr\n     * @param {number} value\n     * @param {string} type\n     */function setValue(ptr,value){var type=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'i8';if(type.endsWith('*'))type='*';switch(type){case'i1':HEAP8[ptr>>0]=value;break;case'i8':HEAP8[ptr>>0]=value;break;case'i16':HEAP16[ptr>>1]=value;break;case'i32':HEAP32[ptr>>2]=value;break;case'i64':tempI64=[value>>>0,(tempDouble=value,+Math.abs(tempDouble)>=1.0?tempDouble>0.0?(Math.min(+Math.floor(tempDouble/4294967296.0),4294967295.0)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296.0)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case'float':HEAPF32[ptr>>2]=value;break;case'double':HEAPF64[ptr>>3]=value;break;case'*':HEAPU32[ptr>>2]=value;break;default:abort('invalid type for setValue: '+type);}}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;if(ENVIRONMENT_IS_NODE)text='warning: '+text;err(text);}}function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError('Unknown type size: '+size);}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i);}embind_charCodes=codes;}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]];}return ret;}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return'_unknown';}name=name.replace(/[^a-zA-Z0-9_]/g,'$');var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return'_'+name;}return name;}function createNamedFunction(name,body){name=makeLegalFunctionName(name);// Use an abject with a computed property name to create a new function with\n// a name specified at runtime, but without using `new Function` or `eval`.\nreturn _defineProperty({},name,function(){return body.apply(this,arguments);})[name];}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+'\\n'+stack.replace(/^Error(:[^\\n]*)?\\n/,'');}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name;}else{return this.name+': '+this.message;}};return errorClass;}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message);}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message);}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes;});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError('Mismatched type converter count');}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i]);}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach(function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt];}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[];}awaitingDependencies[dt].push(function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters);}});}});if(0===unregisteredTypes.length){onComplete(typeConverters);}}/** @param {Object=} options */function registerType(rawType,registeredInstance){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(!('argPackAdvance'in registeredInstance)){throw new TypeError('registerType registeredInstance requires argPackAdvance');}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer');}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return;}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\");}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(function(cb){return cb();});}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,'fromWireType':function fromWireType(wt){// ambiguous emscripten ABI: sometimes return values are\n// true or false, and sometimes integers (0 or 1)\nreturn!!wt;},'toWireType':function toWireType(destructors,o){return o?trueValue:falseValue;},'argPackAdvance':8,'readValueFromPointer':function readValueFromPointer(pointer){// TODO: if heap is fixed (like in asm.js) this could be executed outside\nvar heap;if(size===1){heap=HEAP8;}else if(size===2){heap=HEAP16;}else if(size===4){heap=HEAP32;}else{throw new TypeError(\"Unknown boolean type size: \"+name);}return this['fromWireType'](heap[pointer>>shift]);},destructorFunction:null// This type does not need a destructor\n});}/** @constructor */function HandleAllocator(){// Reserve slot 0 so that 0 is always an invalid handle\nthis.allocated=[undefined];this.freelist=[];this.get=function(id){assert(this.allocated[id]!==undefined,'invalid handle: '+id);return this.allocated[id];};this.allocate=function(handle){var id=this.freelist.pop()||this.allocated.length;this.allocated[id]=handle;return id;};this.free=function(id){assert(this.allocated[id]!==undefined);// Set the slot to `undefined` rather than using `delete` here since\n// apparently arrays with holes in them can be less efficient.\nthis.allocated[id]=undefined;this.freelist.push(id);};}var emval_handles=new HandleAllocator();;function __emval_decref(handle){if(handle>=emval_handles.reserved&&0===--emval_handles.get(handle).refcount){emval_handles.free(handle);}}function count_emval_handles(){var count=0;for(var i=emval_handles.reserved;i<emval_handles.allocated.length;++i){if(emval_handles.allocated[i]!==undefined){++count;}}return count;}function init_emval(){// reserve some special values. These never get de-allocated.\n// The HandleAllocator takes care of reserving zero.\nemval_handles.allocated.push({value:undefined},{value:null},{value:true},{value:false});emval_handles.reserved=emval_handles.allocated.length;Module['count_emval_handles']=count_emval_handles;}var Emval={toValue:function toValue(handle){if(!handle){throwBindingError('Cannot use deleted val. handle = '+handle);}return emval_handles.get(handle).value;},toHandle:function toHandle(value){switch(value){case undefined:return 1;case null:return 2;case true:return 3;case false:return 4;default:{return emval_handles.allocate({refcount:1,value:value});}}}};function simpleReadValueFromPointer(pointer){return this['fromWireType'](HEAP32[pointer>>2]);}function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,'fromWireType':function fromWireType(handle){var rv=Emval.toValue(handle);__emval_decref(handle);return rv;},'toWireType':function toWireType(destructors,value){return Emval.toHandle(value);},'argPackAdvance':8,'readValueFromPointer':simpleReadValueFromPointer,destructorFunction:null// This type does not need a destructor\n// TODO: do we need a deleteObject here?  write a test where\n// emval is passed into JS via an interface\n});}function embindRepr(v){if(v===null){return'null';}var t=typeof v;if(t==='object'||t==='array'||t==='function'){return v.toString();}else{return''+v;}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this['fromWireType'](HEAPF32[pointer>>2]);};case 3:return function(pointer){return this['fromWireType'](HEAPF64[pointer>>3]);};default:throw new TypeError(\"Unknown float type: \"+name);}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,'fromWireType':function fromWireType(value){return value;},'toWireType':function toWireType(destructors,value){if(typeof value!=\"number\"&&typeof value!=\"boolean\"){throw new TypeError('Cannot convert \"'+embindRepr(value)+'\" to '+this.name);}// The VM will perform JS to Wasm value conversion, according to the spec:\n// https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\nreturn value;},'argPackAdvance':8,'readValueFromPointer':floatReadValueFromPointer(name,shift),destructorFunction:null// This type does not need a destructor\n});}function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr);}}function newFunc(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError('new_ called with constructor type '+typeof constructor+\" which is not a function\");}/*\n       * Previously, the following line was just:\n       *   function dummy() {};\n       * Unfortunately, Chrome was preserving 'dummy' as the object's name, even\n       * though at creation, the 'dummy' has the correct constructor name.  Thus,\n       * objects created with IMVU.new would show up in the debugger as 'dummy',\n       * which isn't very helpful.  Using IMVU.createNamedFunction addresses the\n       * issue.  Doublely-unfortunately, there's no way to write a test for this\n       * behavior.  -NRD 2013.02.22\n       */var dummy=createNamedFunction(constructor.name||'unknownFunctionName',function(){});dummy.prototype=constructor.prototype;var obj=new dummy();var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj;}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc,isAsync){// humanName: a human-readable string name for the function to be generated.\n// argTypes: An array that contains the embind type objects for all types in the function signature.\n//    argTypes[0] is the type object for the function return value.\n//    argTypes[1] is the type object for function this object/class type, or null if not crafting an invoker for a class method.\n//    argTypes[2...] are the actual function parameters.\n// classType: The embind type object for the class to be bound, or null if this is not a method of a class.\n// cppInvokerFunc: JS Function object to the C++-side function that interops into C++ code.\n// cppTargetFunc: Function pointer (an integer to FUNCTION_TABLE) to the target C++ function the cppInvokerFunc will end up calling.\nvar argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");}assert(!isAsync,'Async bindings are only supported with JSPI.');var isClassMethodFunc=argTypes[1]!==null&&classType!==null;// Free functions with signature \"void function()\" do not need an invoker that marshalls between wire types.\n// TODO: This omits argument count check - enable only at -O3 or similar.\n//    if (ENABLE_UNSAFE_OPTS && argCount == 2 && argTypes[0].name == \"void\" && !isClassMethodFunc) {\n//       return FUNCTION_TABLE[fn];\n//    }\n// Determine if we need to use a dynamic stack to store the destructors for the function parameters.\n// TODO: Remove this completely once all function invokers are being dynamically generated.\nvar needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){// Skip return value at index 0 - it's not deleted here.\nif(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){// The type does not define a destructor function - must use dynamic stack\nneedsDestructorStack=true;break;}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\";}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\";}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\";}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2]);}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired;}invokerFnBody+=(returns||isAsync?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\";}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){// Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.\nvar paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction);}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\";}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);return newFunc(Function,args1).apply(null,args2);}function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];// Inject an overload resolver function that routes to the appropriate overload based on the number of arguments.\nproto[methodName]=function(){// TODO This check can be removed in -O3 level \"unsafe\" optimizations.\nif(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\");}return proto[methodName].overloadTable[arguments.length].apply(this,arguments);};// Move the previous function into the overload table.\nproto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc;}}/** @param {number=} numArguments */function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\");}// We are exposing a function with the same name as an existing function. Create an overload table and a function selector\n// that routes between the two.\nensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\");}// Add the new function into the overload table.\nModule[name].overloadTable[numArguments]=value;}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments;}}}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){// TODO(https://github.com/emscripten-core/emscripten/issues/17310):\n// Find a way to hoist the `>> 2` or `>> 3` out of this loop.\narray.push(HEAPU32[firstElement+i*4>>2]);}return array;}/** @param {number=} numArguments */function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError('Replacing nonexistant public symbol');}// If there's an overload table for this symbol, replace the symbol in the overload table instead.\nif(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value;}else{Module[name]=value;Module[name].argCount=numArguments;}}function dynCallLegacy(sig,ptr,args){assert('dynCall_'+sig in Module,'bad function pointer type - dynCall function not found for sig \\''+sig+'\\'');if(args&&args.length){// j (64-bit integer) must be passed in as two numbers [low 32, high 32].\nassert(args.length===sig.substring(1).replace(/j/g,'--').length);}else{assert(sig.length==1);}var f=Module['dynCall_'+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr);}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr);}assert(wasmTable.get(funcPtr)==func,\"JavaScript-side Wasm function table mirror is out of date!\");return func;}/** @param {Object=} args */function dynCall(sig,ptr,args){// Without WASM_BIGINT support we cannot directly call function with i64 as\n// part of thier signature, so we rely the dynCall functions generated by\n// wasm-emscripten-finalize\nif(sig.includes('j')){return dynCallLegacy(sig,ptr,args);}assert(getWasmTableEntry(ptr),'missing table entry in dynCall: '+ptr);var rtn=getWasmTableEntry(ptr).apply(null,args);return rtn;}function getDynCaller(sig,ptr){assert(sig.includes('j')||sig.includes('p'),'getDynCaller should only be called with i64 sigs');var argCache=[];return function(){argCache.length=0;Object.assign(argCache,arguments);return dynCall(sig,ptr,argCache);};}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes('j')){return getDynCaller(signature,rawFunction);}return getWasmTableEntry(rawFunction);}var fp=makeDynCaller();if(typeof fp!=\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction);}return fp;}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv;}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return;}if(registeredTypes[type]){return;}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return;}unboundTypes.push(type);seen[type]=true;}types.forEach(visit);throw new UnboundTypeError(message+': '+unboundTypes.map(getTypeName).join([', ']));}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn,isAsync){var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,function(){throwUnboundTypeError('Cannot call '+name+' due to unbound types',argTypes);},argCount-1);whenDependentTypesAreResolved([],argTypes,function(argTypes){var invokerArgsArray=[argTypes[0]/* return value */,null/* no class 'this'*/].concat(argTypes.slice(1)/* actual params */);replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null/* no class 'this'*/,rawInvoker,fn,isAsync),argCount-1);return[];});}function integerReadValueFromPointer(name,shift,signed){// integers are quite common, so generate very specialized functions\nswitch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer];}:function readU8FromPointer(pointer){return HEAPU8[pointer];};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1];}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1];};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2];}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2];};default:throw new TypeError(\"Unknown integer type: \"+name);}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);// LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come\n// out as 'i32 -1'. Always treat those as max u32.\nif(maxRange===-1){maxRange=4294967295;}var shift=getShiftFromSize(size);var fromWireType=function fromWireType(value){return value;};if(minRange===0){var bitshift=32-8*size;fromWireType=function fromWireType(value){return value<<bitshift>>>bitshift;};}var isUnsignedType=name.includes('unsigned');var checkAssertions=function checkAssertions(value,toTypeName){if(typeof value!=\"number\"&&typeof value!=\"boolean\"){throw new TypeError('Cannot convert \"'+embindRepr(value)+'\" to '+toTypeName);}if(value<minRange||value>maxRange){throw new TypeError('Passing a number \"'+embindRepr(value)+'\" from JS side to C/C++ side to an argument of type \"'+name+'\", which is outside the valid range ['+minRange+', '+maxRange+']!');}};var toWireType;if(isUnsignedType){toWireType=function toWireType(destructors,value){checkAssertions(value,this.name);return value>>>0;};}else{toWireType=function toWireType(destructors,value){checkAssertions(value,this.name);// The VM will perform JS to Wasm value conversion, according to the spec:\n// https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\nreturn value;};}registerType(primitiveType,{name:name,'fromWireType':fromWireType,'toWireType':toWireType,'argPackAdvance':8,'readValueFromPointer':integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null// This type does not need a destructor\n});}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];// in elements\nvar data=heap[handle+1];// byte offset into emscripten heap\nreturn new TA(heap.buffer,data,size);}name=readLatin1String(name);registerType(rawType,{name:name,'fromWireType':decodeMemoryView,'argPackAdvance':8,'readValueFromPointer':decodeMemoryView},{ignoreDuplicateRegistrations:true});}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){// Parameter maxBytesToWrite is not optional. Negative values, 0, null,\n// undefined and false each don't write out any bytes.\nif(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;// -1 for string null terminator.\nfor(var i=0;i<str.length;++i){// Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n// unit, not a Unicode code point of the character! So decode\n// UTF16->UTF32->UTF8.\n// See http://unicode.org/faq/utf_bom.html#utf16-3\n// For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\n// and https://www.ietf.org/rfc/rfc2279.txt\n// and https://tools.ietf.org/html/rfc3629\nvar u=str.charCodeAt(i);// possibly a lead surrogate\nif(u>=0xD800&&u<=0xDFFF){var u1=str.charCodeAt(++i);u=0x10000+((u&0x3FF)<<10)|u1&0x3FF;}if(u<=0x7F){if(outIdx>=endIdx)break;heap[outIdx++]=u;}else if(u<=0x7FF){if(outIdx+1>=endIdx)break;heap[outIdx++]=0xC0|u>>6;heap[outIdx++]=0x80|u&63;}else if(u<=0xFFFF){if(outIdx+2>=endIdx)break;heap[outIdx++]=0xE0|u>>12;heap[outIdx++]=0x80|u>>6&63;heap[outIdx++]=0x80|u&63;}else{if(outIdx+3>=endIdx)break;if(u>0x10FFFF)warnOnce('Invalid Unicode code point '+ptrToString(u)+' encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).');heap[outIdx++]=0xF0|u>>18;heap[outIdx++]=0x80|u>>12&63;heap[outIdx++]=0x80|u>>6&63;heap[outIdx++]=0x80|u&63;}}// Null-terminate the pointer to the buffer.\nheap[outIdx]=0;return outIdx-startIdx;}function stringToUTF8(str,outPtr,maxBytesToWrite){assert(typeof maxBytesToWrite=='number','stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){// Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n// unit, not a Unicode code point of the character! So decode\n// UTF16->UTF32->UTF8.\n// See http://unicode.org/faq/utf_bom.html#utf16-3\nvar c=str.charCodeAt(i);// possibly a lead surrogate\nif(c<=0x7F){len++;}else if(c<=0x7FF){len+=2;}else if(c>=0xD800&&c<=0xDFFF){len+=4;++i;}else{len+=3;}}return len;}var UTF8Decoder=typeof TextDecoder!='undefined'?new TextDecoder('utf8'):undefined;/**\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\n     * array that contains uint8 values, returns a copy of that string as a\n     * Javascript String object.\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\n     * @param {number} idx\n     * @param {number=} maxBytesToRead\n     * @return {string}\n     */function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;// TextDecoder needs to know the byte length in advance, it doesn't stop on\n// null terminator by itself.  Also, use the length info to avoid running tiny\n// strings through TextDecoder, since .subarray() allocates garbage.\n// (As a tiny code save trick, compare endPtr against endIdx using a negation,\n// so that undefined means Infinity)\nwhile(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr));}var str='';// If building with TextDecoder, we have already computed the string length\n// above, so test loop end condition against that\nwhile(idx<endPtr){// For UTF8 byte structure, see:\n// http://en.wikipedia.org/wiki/UTF-8#Description\n// https://www.ietf.org/rfc/rfc2279.txt\n// https://tools.ietf.org/html/rfc3629\nvar u0=heapOrArray[idx++];if(!(u0&0x80)){str+=String.fromCharCode(u0);continue;}var u1=heapOrArray[idx++]&63;if((u0&0xE0)==0xC0){str+=String.fromCharCode((u0&31)<<6|u1);continue;}var u2=heapOrArray[idx++]&63;if((u0&0xF0)==0xE0){u0=(u0&15)<<12|u1<<6|u2;}else{if((u0&0xF8)!=0xF0)warnOnce('Invalid UTF-8 leading byte '+ptrToString(u0)+' encountered when deserializing a UTF-8 string in wasm memory to a JS string!');u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63;}if(u0<0x10000){str+=String.fromCharCode(u0);}else{var ch=u0-0x10000;str+=String.fromCharCode(0xD800|ch>>10,0xDC00|ch&0x3FF);}}return str;}/**\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\n     *\n     * @param {number} ptr\n     * @param {number=} maxBytesToRead - An optional length that specifies the\n     *   maximum number of bytes to read. You can omit this parameter to scan the\n     *   string until the first \u0000 byte. If maxBytesToRead is passed, and the string\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\n     * @return {string}\n     */function UTF8ToString(ptr,maxBytesToRead){assert(typeof ptr=='number');return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):'';}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8//process only std::string bindings with UTF8 support, in contrast to e.g. std::basic_string<unsigned char>\n=name===\"std::string\";registerType(rawType,{name:name,'fromWireType':function fromWireType(value){var length=HEAPU32[value>>2];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;// Looping here to support possible embedded '0' bytes\nfor(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment;}else{str+=String.fromCharCode(0);str+=stringSegment;}decodeStartPtr=currentBytePtr+1;}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i]);}str=a.join('');}_free(value);return str;},'toWireType':function toWireType(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value);}var length;var valueIsOfTypeString=typeof value=='string';if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError('Cannot pass non-string to std::string');}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value);}else{length=value.length;}// assumes 4-byte alignment\nvar base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1);}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError('String has UTF-16 code units that do not fit in 8 bits');}HEAPU8[ptr+i]=charCode;}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i]=value[i];}}}if(destructors!==null){destructors.push(_free,base);}return base;},'argPackAdvance':8,'readValueFromPointer':simpleReadValueFromPointer,destructorFunction:function destructorFunction(ptr){_free(ptr);}});}var UTF16Decoder=typeof TextDecoder!='undefined'?new TextDecoder('utf-16le'):undefined;;function UTF16ToString(ptr,maxBytesToRead){assert(ptr%2==0,'Pointer passed to UTF16ToString must be aligned to two bytes!');var endPtr=ptr;// TextDecoder needs to know the byte length in advance, it doesn't stop on\n// null terminator by itself.\n// Also, use the length info to avoid running tiny strings through\n// TextDecoder, since .subarray() allocates garbage.\nvar idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;// If maxBytesToRead is not passed explicitly, it will be undefined, and this\n// will always evaluate to true. This saves on code size.\nwhile(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr));// Fallback: decode without UTF16Decoder\nvar str='';// If maxBytesToRead is not passed explicitly, it will be undefined, and the\n// for-loop's condition will always evaluate to true. The loop is then\n// terminated on the first null char.\nfor(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;// fromCharCode constructs a character from a UTF-16 code unit, so we can\n// pass the UTF16 string right through.\nstr+=String.fromCharCode(codeUnit);}return str;}function stringToUTF16(str,outPtr,maxBytesToWrite){assert(outPtr%2==0,'Pointer passed to stringToUTF16 must be aligned to two bytes!');assert(typeof maxBytesToWrite=='number','stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');// Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\nif(maxBytesToWrite===undefined){maxBytesToWrite=0x7FFFFFFF;}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;// Null terminator.\nvar startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){// charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\nvar codeUnit=str.charCodeAt(i);// possibly a lead surrogate\nHEAP16[outPtr>>1]=codeUnit;outPtr+=2;}// Null-terminate the pointer to the HEAP.\nHEAP16[outPtr>>1]=0;return outPtr-startPtr;}function lengthBytesUTF16(str){return str.length*2;}function UTF32ToString(ptr,maxBytesToRead){assert(ptr%4==0,'Pointer passed to UTF32ToString must be aligned to four bytes!');var i=0;var str='';// If maxBytesToRead is not passed explicitly, it will be undefined, and this\n// will always evaluate to true. This saves on code size.\nwhile(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;// Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\n// See http://unicode.org/faq/utf_bom.html#utf16-3\nif(utf32>=0x10000){var ch=utf32-0x10000;str+=String.fromCharCode(0xD800|ch>>10,0xDC00|ch&0x3FF);}else{str+=String.fromCharCode(utf32);}}return str;}function stringToUTF32(str,outPtr,maxBytesToWrite){assert(outPtr%4==0,'Pointer passed to stringToUTF32 must be aligned to four bytes!');assert(typeof maxBytesToWrite=='number','stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');// Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\nif(maxBytesToWrite===undefined){maxBytesToWrite=0x7FFFFFFF;}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){// Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n// See http://unicode.org/faq/utf_bom.html#utf16-3\nvar codeUnit=str.charCodeAt(i);// possibly a lead surrogate\nif(codeUnit>=0xD800&&codeUnit<=0xDFFF){var trailSurrogate=str.charCodeAt(++i);codeUnit=0x10000+((codeUnit&0x3FF)<<10)|trailSurrogate&0x3FF;}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break;}// Null-terminate the pointer to the HEAP.\nHEAP32[outPtr>>2]=0;return outPtr-startPtr;}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){// Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n// See http://unicode.org/faq/utf_bom.html#utf16-3\nvar codeUnit=str.charCodeAt(i);if(codeUnit>=0xD800&&codeUnit<=0xDFFF)++i;// possibly a lead surrogate, so skip over the tail surrogate.\nlen+=4;}return len;}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=function getHeap(){return HEAPU16;};shift=1;}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=function getHeap(){return HEAPU32;};shift=2;}registerType(rawType,{name:name,'fromWireType':function fromWireType(value){// Code mostly taken from _embind_register_std_string fromWireType\nvar length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;// Looping here to support possible embedded '0' bytes\nfor(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment;}else{str+=String.fromCharCode(0);str+=stringSegment;}decodeStartPtr=currentBytePtr+charSize;}}_free(value);return str;},'toWireType':function toWireType(destructors,value){if(!(typeof value=='string')){throwBindingError('Cannot pass non-string to C++ string type '+name);}// assumes 4-byte alignment\nvar length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr);}return ptr;},'argPackAdvance':8,'readValueFromPointer':simpleReadValueFromPointer,destructorFunction:function destructorFunction(ptr){_free(ptr);}});}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,// void return values can be optimized out sometimes\nname:name,'argPackAdvance':0,'fromWireType':function fromWireType(){return undefined;},'toWireType':function toWireType(destructors,o){// TODO: assert if anything else is given?\nreturn undefined;}});}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num);}function getHeapMax(){return HEAPU8.length;}function abortOnCannotGrowMemory(requestedSize){abort('Cannot enlarge memory arrays to size '+requestedSize+' bytes (OOM). Either (1) compile with -sINITIAL_MEMORY=X with X higher than the current value '+HEAP8.length+', (2) compile with -sALLOW_MEMORY_GROWTH which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with -sABORTING_MALLOC=0');}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;abortOnCannotGrowMemory(requestedSize);}var SYSCALLS={varargs:undefined,get:function get(){assert(SYSCALLS.varargs!=undefined);SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret;},getStr:function getStr(ptr){var ret=UTF8ToString(ptr);return ret;}};function _fd_close(fd){abort('fd_close called without SYSCALLS_REQUIRE_FILESYSTEM');}function convertI32PairToI53Checked(lo,hi){assert(lo==lo>>>0||lo==(lo|0));// lo should either be a i32 or a u32\nassert(hi===(hi|0));// hi should be a i32\nreturn hi+0x200000>>>0<0x400001-!!lo?(lo>>>0)+hi*4294967296:NaN;}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){return 70;}var printCharBuffers=[null,[],[]];function printChar(stream,curr){var buffer=printCharBuffers[stream];assert(buffer);if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0;}else{buffer.push(curr);}}function flush_NO_FILESYSTEM(){// flush anything remaining in the buffers during shutdown\n_fflush(0);if(printCharBuffers[1].length)printChar(1,10);if(printCharBuffers[2].length)printChar(2,10);}function _fd_write(fd,iov,iovcnt,pnum){// hack to support printf in SYSCALLS_REQUIRE_FILESYSTEM=0\nvar num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,HEAPU8[ptr+j]);}num+=len;}HEAPU32[pnum>>2]=num;return 0;}function getCFunc(ident){var func=Module['_'+ident];// closure exported function\nassert(func,'Cannot call unknown function '+ident+', make sure it is exported');return func;}function writeArrayToMemory(array,buffer){assert(array.length>=0,'writeArrayToMemory array must have a length (should be an array or typed array)');HEAP8.set(array,buffer);}function stringToUTF8OnStack(str){var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8(str,ret,size);return ret;}/**\n     * @param {string|null=} returnType\n     * @param {Array=} argTypes\n     * @param {Arguments|Array=} args\n     * @param {Object=} opts\n     */function ccall(ident,returnType,argTypes,args,opts){// For fast lookup of conversion functions\nvar toC={'string':function string(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){// null string\n// at most 4 bytes per UTF-8 code point, +1 for the trailing '\\0'\nret=stringToUTF8OnStack(str);}return ret;},'array':function array(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret;}};function convertReturnValue(ret){if(returnType==='string'){return UTF8ToString(ret);}if(returnType==='boolean')return Boolean(ret);return ret;}var func=getCFunc(ident);var cArgs=[];var stack=0;assert(returnType!=='array','Return type should not be \"array\".');if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i]);}else{cArgs[i]=args[i];}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret);}ret=onDone(ret);return ret;}/**\n     * @param {string=} returnType\n     * @param {Array=} argTypes\n     * @param {Object=} opts\n     */function cwrap(ident,returnType,argTypes,opts){return function(){return ccall(ident,returnType,argTypes,arguments,opts);};}embind_init_charCodes();BindingError=Module['BindingError']=extendError(Error,'BindingError');;InternalError=Module['InternalError']=extendError(Error,'InternalError');;init_emval();;UnboundTypeError=Module['UnboundTypeError']=extendError(Error,'UnboundTypeError');;function checkIncomingModuleAPI(){ignoredModuleProp('fetchSettings');}var wasmImports={\"_embind_register_bigint\":__embind_register_bigint,\"_embind_register_bool\":__embind_register_bool,\"_embind_register_emval\":__embind_register_emval,\"_embind_register_float\":__embind_register_float,\"_embind_register_function\":__embind_register_function,\"_embind_register_integer\":__embind_register_integer,\"_embind_register_memory_view\":__embind_register_memory_view,\"_embind_register_std_string\":__embind_register_std_string,\"_embind_register_std_wstring\":__embind_register_std_wstring,\"_embind_register_void\":__embind_register_void,\"emscripten_memcpy_big\":_emscripten_memcpy_big,\"emscripten_resize_heap\":_emscripten_resize_heap,\"fd_close\":_fd_close,\"fd_seek\":_fd_seek,\"fd_write\":_fd_write};var asm=createWasm();/** @type {function(...*):?} */var ___wasm_call_ctors=createExportWrapper(\"__wasm_call_ctors\");/** @type {function(...*):?} */var ___getTypeName=Module[\"___getTypeName\"]=createExportWrapper(\"__getTypeName\");/** @type {function(...*):?} */var __embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=createExportWrapper(\"_embind_initialize_bindings\");/** @type {function(...*):?} */var ___errno_location=createExportWrapper(\"__errno_location\");/** @type {function(...*):?} */var _fflush=Module[\"_fflush\"]=createExportWrapper(\"fflush\");/** @type {function(...*):?} */var _malloc=createExportWrapper(\"malloc\");/** @type {function(...*):?} */var _free=createExportWrapper(\"free\");/** @type {function(...*):?} */var _emscripten_stack_init2=function _emscripten_stack_init(){return(_emscripten_stack_init2=Module[\"asm\"][\"emscripten_stack_init\"]).apply(null,arguments);};/** @type {function(...*):?} */var _emscripten_stack_get_free2=function _emscripten_stack_get_free(){return(_emscripten_stack_get_free2=Module[\"asm\"][\"emscripten_stack_get_free\"]).apply(null,arguments);};/** @type {function(...*):?} */var _emscripten_stack_get_base2=function _emscripten_stack_get_base(){return(_emscripten_stack_get_base2=Module[\"asm\"][\"emscripten_stack_get_base\"]).apply(null,arguments);};/** @type {function(...*):?} */var _emscripten_stack_get_end2=function _emscripten_stack_get_end(){return(_emscripten_stack_get_end2=Module[\"asm\"][\"emscripten_stack_get_end\"]).apply(null,arguments);};/** @type {function(...*):?} */var stackSave=createExportWrapper(\"stackSave\");/** @type {function(...*):?} */var stackRestore=createExportWrapper(\"stackRestore\");/** @type {function(...*):?} */var stackAlloc=createExportWrapper(\"stackAlloc\");/** @type {function(...*):?} */var _emscripten_stack_get_current2=function _emscripten_stack_get_current(){return(_emscripten_stack_get_current2=Module[\"asm\"][\"emscripten_stack_get_current\"]).apply(null,arguments);};/** @type {function(...*):?} */var dynCall_jiji=Module[\"dynCall_jiji\"]=createExportWrapper(\"dynCall_jiji\");// include: postamble.js\n// === Auto-generated postamble setup entry stuff ===\nModule[\"ccall\"]=ccall;Module[\"cwrap\"]=cwrap;var missingLibrarySymbols=['zeroMemory','exitJS','emscripten_realloc_buffer','isLeapYear','ydayFromDate','arraySum','addDays','setErrNo','inetPton4','inetNtop4','inetPton6','inetNtop6','readSockaddr','writeSockaddr','getHostByName','initRandomFill','randomFill','traverseStack','getCallstack','emscriptenLog','convertPCtoSourceLocation','readEmAsmArgs','jstoi_q','jstoi_s','getExecutableName','listenOnce','autoResumeAudioContext','handleException','runtimeKeepalivePush','runtimeKeepalivePop','callUserCallback','maybeExit','safeSetTimeout','asmjsMangle','asyncLoad','alignMemory','mmapAlloc','getNativeTypeSize','STACK_SIZE','STACK_ALIGN','POINTER_SIZE','ASSERTIONS','writeI53ToI64','writeI53ToI64Clamped','writeI53ToI64Signaling','writeI53ToU64Clamped','writeI53ToU64Signaling','readI53FromI64','readI53FromU64','convertI32PairToI53','convertU32PairToI53','uleb128Encode','sigToWasmTypes','generateFuncType','convertJsFunctionToWasm','getEmptyTableSlot','updateTableMap','getFunctionAddress','addFunction','removeFunction','reallyNegative','unSign','strLen','reSign','formatString','intArrayFromString','intArrayToString','AsciiToString','stringToAscii','stringToNewUTF8','getSocketFromFD','getSocketAddress','registerKeyEventCallback','maybeCStringToJsString','findEventTarget','findCanvasEventTarget','getBoundingClientRect','fillMouseEventData','registerMouseEventCallback','registerWheelEventCallback','registerUiEventCallback','registerFocusEventCallback','fillDeviceOrientationEventData','registerDeviceOrientationEventCallback','fillDeviceMotionEventData','registerDeviceMotionEventCallback','screenOrientation','fillOrientationChangeEventData','registerOrientationChangeEventCallback','fillFullscreenChangeEventData','registerFullscreenChangeEventCallback','JSEvents_requestFullscreen','JSEvents_resizeCanvasForFullscreen','registerRestoreOldStyle','hideEverythingExceptGivenElement','restoreHiddenElements','setLetterbox','softFullscreenResizeWebGLRenderTarget','doRequestFullscreen','fillPointerlockChangeEventData','registerPointerlockChangeEventCallback','registerPointerlockErrorEventCallback','requestPointerLock','fillVisibilityChangeEventData','registerVisibilityChangeEventCallback','registerTouchEventCallback','fillGamepadEventData','registerGamepadEventCallback','registerBeforeUnloadEventCallback','fillBatteryEventData','battery','registerBatteryEventCallback','setCanvasElementSize','getCanvasElementSize','demangle','demangleAll','jsStackTrace','stackTrace','getEnvStrings','checkWasiClock','wasiRightsToMuslOFlags','wasiOFlagsToMuslOFlags','createDyncallWrapper','setImmediateWrapped','clearImmediateWrapped','polyfillSetImmediate','getPromise','makePromise','makePromiseCallback','ExceptionInfo','exception_addRef','exception_decRef','setMainLoop','_setNetworkCallback','heapObjectForWebGLType','heapAccessShiftForWebGLHeap','webgl_enable_ANGLE_instanced_arrays','webgl_enable_OES_vertex_array_object','webgl_enable_WEBGL_draw_buffers','webgl_enable_WEBGL_multi_draw','emscriptenWebGLGet','computeUnpackAlignedImageSize','colorChannelsInGlTextureFormat','emscriptenWebGLGetTexPixelData','__glGenObject','emscriptenWebGLGetUniform','webglGetUniformLocation','webglPrepareUniformLocationsBeforeFirstUse','webglGetLeftBracePos','emscriptenWebGLGetVertexAttrib','__glGetActiveAttribOrUniform','writeGLArray','registerWebGlEventCallback','runAndAbortIfError','SDL_unicode','SDL_ttfContext','SDL_audio','GLFW_Window','ALLOC_NORMAL','ALLOC_STACK','allocate','writeStringToMemory','writeAsciiToMemory','init_embind','getBasestPointer','registerInheritedInstance','unregisterInheritedInstance','getInheritedInstance','getInheritedInstanceCount','getLiveInheritedInstances','requireRegisteredType','enumReadValueFromPointer','genericPointerToWireType','constNoSmartPtrRawPointerToWireType','nonConstNoSmartPtrRawPointerToWireType','init_RegisteredPointer','RegisteredPointer','RegisteredPointer_getPointee','RegisteredPointer_destructor','RegisteredPointer_deleteObject','RegisteredPointer_fromWireType','runDestructor','releaseClassHandle','detachFinalizer','attachFinalizer','makeClassHandle','init_ClassHandle','ClassHandle','ClassHandle_isAliasOf','throwInstanceAlreadyDeleted','ClassHandle_clone','ClassHandle_delete','ClassHandle_isDeleted','ClassHandle_deleteLater','flushPendingDeletes','setDelayFunction','RegisteredClass','shallowCopyInternalPointer','downcastPointer','upcastPointer','validateThis','getStringOrSymbol','craftEmvalAllocator','emval_get_global','emval_lookupTypes','emval_allocateDestructors','emval_addMethodCaller'];missingLibrarySymbols.forEach(missingLibrarySymbol);var unexportedSymbols=['run','addOnPreRun','addOnInit','addOnPreMain','addOnExit','addOnPostRun','addRunDependency','removeRunDependency','FS_createFolder','FS_createPath','FS_createDataFile','FS_createPreloadedFile','FS_createLazyFile','FS_createLink','FS_createDevice','FS_unlink','out','err','callMain','abort','keepRuntimeAlive','wasmMemory','stackAlloc','stackSave','stackRestore','getTempRet0','setTempRet0','writeStackCookie','checkStackCookie','ptrToString','getHeapMax','abortOnCannotGrowMemory','ENV','MONTH_DAYS_REGULAR','MONTH_DAYS_LEAP','MONTH_DAYS_REGULAR_CUMULATIVE','MONTH_DAYS_LEAP_CUMULATIVE','ERRNO_CODES','ERRNO_MESSAGES','DNS','Protocols','Sockets','timers','warnOnce','UNWIND_CACHE','readEmAsmArgsArray','dynCallLegacy','getDynCaller','dynCall','HandleAllocator','convertI32PairToI53Checked','getCFunc','freeTableIndexes','functionsInTableMap','setValue','getValue','PATH','PATH_FS','UTF8Decoder','UTF8ArrayToString','UTF8ToString','stringToUTF8Array','stringToUTF8','lengthBytesUTF8','UTF16Decoder','UTF16ToString','stringToUTF16','lengthBytesUTF16','UTF32ToString','stringToUTF32','lengthBytesUTF32','stringToUTF8OnStack','writeArrayToMemory','SYSCALLS','JSEvents','specialHTMLTargets','currentFullscreenStrategy','restoreOldWindowedStyle','ExitStatus','flush_NO_FILESYSTEM','dlopenMissingError','promiseMap','uncaughtExceptionCount','exceptionLast','exceptionCaught','Browser','wget','FS','MEMFS','TTY','PIPEFS','SOCKFS','tempFixedLengthArray','miniTempWebGLFloatBuffers','miniTempWebGLIntBuffers','GL','emscripten_webgl_power_preferences','AL','GLUT','EGL','GLEW','IDBStore','SDL','SDL_gfx','GLFW','allocateUTF8','allocateUTF8OnStack','InternalError','BindingError','UnboundTypeError','PureVirtualError','throwInternalError','throwBindingError','throwUnboundTypeError','ensureOverloadTable','exposePublicSymbol','replacePublicSymbol','extendError','createNamedFunction','embindRepr','registeredInstances','registeredTypes','awaitingDependencies','typeDependencies','registeredPointers','registerType','whenDependentTypesAreResolved','embind_charCodes','embind_init_charCodes','readLatin1String','getTypeName','heap32VectorToArray','getShiftFromSize','integerReadValueFromPointer','floatReadValueFromPointer','simpleReadValueFromPointer','runDestructors','newFunc','craftInvokerFunction','embind__requireFunction','tupleRegistrations','structRegistrations','finalizationRegistry','detachFinalizer_deps','deletionQueue','delayFunction','char_0','char_9','makeLegalFunctionName','emval_handles','emval_symbols','init_emval','count_emval_handles','Emval','emval_newers','emval_methodCallers','emval_registeredMethods'];unexportedSymbols.forEach(unexportedRuntimeSymbol);var calledRun;dependenciesFulfilled=function runCaller(){// If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\nif(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller;// try this again later, after new deps are fulfilled\n};function stackCheckInit(){// This is normally called automatically during __wasm_call_ctors but need to\n// get these values before even running any of the ctors so we call it redundantly\n// here.\n_emscripten_stack_init2();// TODO(sbc): Move writeStackCookie to native to to avoid this.\nwriteStackCookie();}function run(){if(runDependencies>0){return;}stackCheckInit();preRun();// a preRun added a dependency, run will be called later\nif(runDependencies>0){return;}function doRun(){// run may have just been called through dependencies being fulfilled just in this very frame,\n// or while the async setStatus time below was happening\nif(calledRun)return;calledRun=true;Module['calledRun']=true;if(ABORT)return;initRuntime();if(Module['onRuntimeInitialized'])Module['onRuntimeInitialized']();assert(!Module['_main'],'compiled without a main, but one is present. if you added it from JS, use Module[\"onRuntimeInitialized\"]');postRun();}if(Module['setStatus']){Module['setStatus']('Running...');setTimeout(function(){setTimeout(function(){Module['setStatus']('');},1);doRun();},1);}else{doRun();}checkStackCookie();}function checkUnflushedContent(){// Compiler settings do not allow exiting the runtime, so flushing\n// the streams is not possible. but in ASSERTIONS mode we check\n// if there was something to flush, and if so tell the user they\n// should request that the runtime be exitable.\n// Normally we would not even include flush() at all, but in ASSERTIONS\n// builds we do so just for this check, and here we see if there is any\n// content to flush, that is, we check if there would have been\n// something a non-ASSERTIONS build would have not seen.\n// How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0\n// mode (which has its own special function for this; otherwise, all\n// the code is inside libc)\nvar oldOut=out;var oldErr=err;var has=false;out=err=function err(x){has=true;};try{// it doesn't matter if it fails\nflush_NO_FILESYSTEM();}catch(e){}out=oldOut;err=oldErr;if(has){warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.');warnOnce('(this may also be due to not including full filesystem support - try building with -sFORCE_FILESYSTEM)');}}if(Module['preInit']){if(typeof Module['preInit']=='function')Module['preInit']=[Module['preInit']];while(Module['preInit'].length>0){Module['preInit'].pop()();}}run();// end include: postamble.js","map":{"version":3,"names":["Module","moduleOverrides","Object","assign","arguments_","thisProgram","quit_","status","toThrow","ENVIRONMENT_IS_WEB","window","ENVIRONMENT_IS_WORKER","importScripts","ENVIRONMENT_IS_NODE","process","versions","node","ENVIRONMENT_IS_SHELL","Error","scriptDirectory","locateFile","path","read_","readAsync","readBinary","setWindowTitle","release","name","nodeVersion","numericVersion","split","slice","minVersion","fs","require","nodePath","dirname","__dirname","filename","binary","isFileURI","URL","normalize","readFileSync","undefined","ret","buffer","Uint8Array","assert","onload","onerror","readFile","err","data","argv","length","replace","module","on","ex","ExitStatus","context","nodeMajor","reason","exitCode","read","shell_read","f","readbuffer","setTimeout","clearTimeout","globalThis","id","scriptArgs","arguments","quit","toLog","stack","print","console","log","warn","error","printErr","self","location","href","document","currentScript","src","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","title","out","bind","checkIncomingModuleAPI","legacyModuleProp","IDBFS","PROXYFS","WORKERFS","NODEFS","wasmBinary","noExitRuntime","WebAssembly","abort","wasmMemory","ABORT","EXITSTATUS","condition","text","HEAP","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","updateMemoryViews","b","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","prototype","subarray","set","wasmTable","writeStackCookie","max","_emscripten_stack_get_end","checkStackCookie","cookie1","cookie2","ptrToString","h16","h8","__ATPRERUN__","__ATINIT__","__ATEXIT__","__ATPOSTRUN__","runtimeInitialized","runtimeKeepaliveCounter","keepRuntimeAlive","preRun","addOnPreRun","shift","callRuntimeCallbacks","initRuntime","postRun","addOnPostRun","cb","unshift","addOnInit","addOnExit","Math","imul","fround","clz32","trunc","runDependencies","runDependencyWatcher","dependenciesFulfilled","runDependencyTracking","getUniqueRunDependency","orig","random","addRunDependency","setInterval","clearInterval","shown","dep","removeRunDependency","callback","what","e","RuntimeError","FS","init","createDataFile","createPreloadedFile","createLazyFile","mkdev","registerDevice","analyzePath","ErrnoError","dataURIPrefix","isDataURI","startsWith","createExportWrapper","fixedasm","displayName","asm","apply","wasmBinaryFile","getBinary","file","getBinaryPromise","binaryFile","fetch","credentials","then","catch","Promise","resolve","reject","instantiateArrayBuffer","imports","receiver","instantiate","instance","instantiateAsync","instantiateStreaming","result","createWasm","info","wasmImports","receiveInstance","exports","trueModule","receiveInstantiationResult","tempDouble","tempI64","prop","newName","getOwnPropertyDescriptor","defineProperty","configurable","get","ignoredModuleProp","isExportedByForceFilesystem","missingGlobal","sym","msg","warnOnce","missingLibrarySymbol","librarySymbol","unexportedRuntimeSymbol","dbg","message","callbacks","getValue","ptr","type","endsWith","toString","padStart","setValue","value","abs","min","floor","ceil","__embind_register_bigint","primitiveType","size","minRange","maxRange","getShiftFromSize","TypeError","embind_init_charCodes","codes","Array","i","String","fromCharCode","embind_charCodes","readLatin1String","c","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","charCodeAt","createNamedFunction","body","_defineProperty","extendError","baseErrorType","errorName","errorClass","create","constructor","BindingError","throwBindingError","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","forEach","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","hasOwnProperty","push","rawType","registeredInstance","options","ignoreDuplicateRegistrations","__embind_register_bool","trueValue","falseValue","fromWireType","wt","toWireType","destructors","o","readValueFromPointer","pointer","heap","destructorFunction","HandleAllocator","allocated","freelist","allocate","handle","pop","free","emval_handles","__emval_decref","reserved","refcount","count_emval_handles","count","init_emval","Emval","toValue","toHandle","simpleReadValueFromPointer","__embind_register_emval","rv","embindRepr","v","t","floatReadValueFromPointer","__embind_register_float","runDestructors","del","newFunc","argumentList","Function","dummy","obj","r","craftInvokerFunction","humanName","argTypes","classType","cppInvokerFunc","cppTargetFunc","isAsync","argCount","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","ensureOverloadTable","proto","methodName","overloadTable","prevFunc","exposePublicSymbol","numArguments","heap32VectorToArray","firstElement","array","replacePublicSymbol","dynCallLegacy","sig","args","substring","concat","call","wasmTableMirror","getWasmTableEntry","funcPtr","func","dynCall","includes","rtn","getDynCaller","argCache","embind__requireFunction","signature","rawFunction","makeDynCaller","fp","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","visit","map","join","__embind_register_function","rawArgTypesAddr","rawInvoker","fn","invokerArgsArray","integerReadValueFromPointer","signed","readS8FromPointer","readU8FromPointer","readS16FromPointer","readU16FromPointer","readS32FromPointer","readU32FromPointer","__embind_register_integer","bitshift","isUnsignedType","checkAssertions","toTypeName","__embind_register_memory_view","dataTypeIndex","typeMapping","TA","decodeMemoryView","stringToUTF8Array","str","outIdx","maxBytesToWrite","startIdx","endIdx","u","u1","stringToUTF8","outPtr","lengthBytesUTF8","len","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endPtr","decode","u0","u2","ch","UTF8ToString","__embind_register_std_string","stdStringIsUTF8","payload","decodeStartPtr","currentBytePtr","maxRead","stringSegment","a","ArrayBuffer","valueIsOfTypeString","Uint8ClampedArray","base","_malloc","charCode","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","trailSurrogate","lengthBytesUTF32","__embind_register_std_wstring","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","maxReadBytes","__embind_register_void","isVoid","_emscripten_memcpy_big","dest","num","copyWithin","getHeapMax","abortOnCannotGrowMemory","requestedSize","_emscripten_resize_heap","oldSize","SYSCALLS","varargs","getStr","_fd_close","fd","convertI32PairToI53Checked","lo","hi","NaN","_fd_seek","offset_low","offset_high","whence","newOffset","printCharBuffers","printChar","stream","curr","flush_NO_FILESYSTEM","_fflush","_fd_write","iov","iovcnt","pnum","j","getCFunc","ident","writeArrayToMemory","stringToUTF8OnStack","stackAlloc","ccall","returnType","opts","toC","string","arr","convertReturnValue","Boolean","cArgs","converter","stackSave","onDone","stackRestore","cwrap","___wasm_call_ctors","__embind_initialize_bindings","___errno_location","_emscripten_stack_init","_emscripten_stack_get_free","_emscripten_stack_get_base","_emscripten_stack_get_current","dynCall_jiji","missingLibrarySymbols","unexportedSymbols","calledRun","runCaller","run","stackCheckInit","doRun","checkUnflushedContent","oldOut","oldErr","has","x"],"sources":["/Users/alexclevenger/lehighnumericalanalysis.com/src/add.js"],"sourcesContent":["// include: shell.js\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = typeof Module != 'undefined' ? Module : {};\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n\n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = Object.assign({}, Module);\n\nvar arguments_ = [];\nvar thisProgram = './this.program';\nvar quit_ = (status, toThrow) => {\n  throw toThrow;\n};\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n\n// Attempt to auto-detect the environment\nvar ENVIRONMENT_IS_WEB = typeof window == 'object';\nvar ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';\n// N.b. Electron.js environment is simultaneously a NODE-environment, but\n// also a web environment.\nvar ENVIRONMENT_IS_NODE = typeof process == 'object' && typeof process.versions == 'object' && typeof process.versions.node == 'string';\nvar ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\nif (Module['ENVIRONMENT']) {\n  throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)');\n}\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = '';\nfunction locateFile(path) {\n  if (Module['locateFile']) {\n    return Module['locateFile'](path, scriptDirectory);\n  }\n  return scriptDirectory + path;\n}\n\n// Hooks that are implemented differently in different runtime environments.\nvar read_,\n    readAsync,\n    readBinary,\n    setWindowTitle;\n\nif (ENVIRONMENT_IS_NODE) {\n  if (typeof process == 'undefined' || !process.release || process.release.name !== 'node') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n  var nodeVersion = process.versions.node;\n  var numericVersion = nodeVersion.split('.').slice(0, 3);\n  numericVersion = (numericVersion[0] * 10000) + (numericVersion[1] * 100) + (numericVersion[2].split('-')[0] * 1);\n  var minVersion = 101900;\n  if (numericVersion < 101900) {\n    throw new Error('This emscripten-generated code requires node v10.19.19.0 (detected v' + nodeVersion + ')');\n  }\n\n  // `require()` is no-op in an ESM module, use `createRequire()` to construct\n  // the require()` function.  This is only necessary for multi-environment\n  // builds, `-sENVIRONMENT=node` emits a static import declaration instead.\n  // TODO: Swap all `require()`'s with `import()`'s?\n  // These modules will usually be used on Node.js. Load them eagerly to avoid\n  // the complexity of lazy-loading.\n  var fs = require('fs');\n  var nodePath = require('path');\n\n  if (ENVIRONMENT_IS_WORKER) {\n    scriptDirectory = nodePath.dirname(scriptDirectory) + '/';\n  } else {\n    scriptDirectory = __dirname + '/';\n  }\n\n// include: node_shell_read.js\nread_ = (filename, binary) => {\n  // We need to re-wrap `file://` strings to URLs. Normalizing isn't\n  // necessary in that case, the path should already be absolute.\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  return fs.readFileSync(filename, binary ? undefined : 'utf8');\n};\n\nreadBinary = (filename) => {\n  var ret = read_(filename, true);\n  if (!ret.buffer) {\n    ret = new Uint8Array(ret);\n  }\n  assert(ret.buffer);\n  return ret;\n};\n\nreadAsync = (filename, onload, onerror) => {\n  // See the comment in the `read_` function.\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  fs.readFile(filename, function(err, data) {\n    if (err) onerror(err);\n    else onload(data.buffer);\n  });\n};\n\n// end include: node_shell_read.js\n  if (!Module['thisProgram'] && process.argv.length > 1) {\n    thisProgram = process.argv[1].replace(/\\\\/g, '/');\n  }\n\n  arguments_ = process.argv.slice(2);\n\n  if (typeof module != 'undefined') {\n    module['exports'] = Module;\n  }\n\n  process.on('uncaughtException', function(ex) {\n    // suppress ExitStatus exceptions from showing an error\n    if (ex !== 'unwind' && !(ex instanceof ExitStatus) && !(ex.context instanceof ExitStatus)) {\n      throw ex;\n    }\n  });\n\n  // Without this older versions of node (< v15) will log unhandled rejections\n  // but return 0, which is not normally the desired behaviour.  This is\n  // not be needed with node v15 and about because it is now the default\n  // behaviour:\n  // See https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode\n  var nodeMajor = process.versions.node.split(\".\")[0];\n  if (nodeMajor < 15) {\n    process.on('unhandledRejection', function(reason) { throw reason; });\n  }\n\n  quit_ = (status, toThrow) => {\n    process.exitCode = status;\n    throw toThrow;\n  };\n\n  Module['inspect'] = function () { return '[Emscripten Module object]'; };\n\n} else\nif (ENVIRONMENT_IS_SHELL) {\n\n  if ((typeof process == 'object' && typeof require === 'function') || typeof window == 'object' || typeof importScripts == 'function') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n  if (typeof read != 'undefined') {\n    read_ = function shell_read(f) {\n      return read(f);\n    };\n  }\n\n  readBinary = function readBinary(f) {\n    let data;\n    if (typeof readbuffer == 'function') {\n      return new Uint8Array(readbuffer(f));\n    }\n    data = read(f, 'binary');\n    assert(typeof data == 'object');\n    return data;\n  };\n\n  readAsync = function readAsync(f, onload, onerror) {\n    setTimeout(() => onload(readBinary(f)), 0);\n  };\n\n  if (typeof clearTimeout == 'undefined') {\n    globalThis.clearTimeout = (id) => {};\n  }\n\n  if (typeof scriptArgs != 'undefined') {\n    arguments_ = scriptArgs;\n  } else if (typeof arguments != 'undefined') {\n    arguments_ = arguments;\n  }\n\n  if (typeof quit == 'function') {\n    quit_ = (status, toThrow) => {\n      // Unlike node which has process.exitCode, d8 has no such mechanism. So we\n      // have no way to set the exit code and then let the program exit with\n      // that code when it naturally stops running (say, when all setTimeouts\n      // have completed). For that reason, we must call `quit` - the only way to\n      // set the exit code - but quit also halts immediately.  To increase\n      // consistency with node (and the web) we schedule the actual quit call\n      // using a setTimeout to give the current stack and any exception handlers\n      // a chance to run.  This enables features such as addOnPostRun (which\n      // expected to be able to run code after main returns).\n      setTimeout(() => {\n        if (!(toThrow instanceof ExitStatus)) {\n          let toLog = toThrow;\n          if (toThrow && typeof toThrow == 'object' && toThrow.stack) {\n            toLog = [toThrow, toThrow.stack];\n          }\n          err('exiting due to exception: ' + toLog);\n        }\n        quit(status);\n      });\n      throw toThrow;\n    };\n  }\n\n  if (typeof print != 'undefined') {\n    // Prefer to use print/printErr where they exist, as they usually work better.\n    if (typeof console == 'undefined') console = /** @type{!Console} */({});\n    console.log = /** @type{!function(this:Console, ...*): undefined} */ (print);\n    console.warn = console.error = /** @type{!function(this:Console, ...*): undefined} */ (typeof printErr != 'undefined' ? printErr : print);\n  }\n\n} else\n\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\n// ENVIRONMENT_IS_NODE.\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\n    scriptDirectory = self.location.href;\n  } else if (typeof document != 'undefined' && document.currentScript) { // web\n    scriptDirectory = document.currentScript.src;\n  }\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n  // otherwise, slice off the final part of the url to find the script directory.\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n  // and scriptDirectory will correctly be replaced with an empty string.\n  // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\n  // they are removed because they could contain a slash.\n  if (scriptDirectory.indexOf('blob:') !== 0) {\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf('/')+1);\n  } else {\n    scriptDirectory = '';\n  }\n\n  if (!(typeof window == 'object' || typeof importScripts == 'function')) throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n  // Differentiate the Web Worker from the Node Worker case, as reading must\n  // be done differently.\n  {\n// include: web_or_worker_shell_read.js\nread_ = (url) => {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, false);\n      xhr.send(null);\n      return xhr.responseText;\n  }\n\n  if (ENVIRONMENT_IS_WORKER) {\n    readBinary = (url) => {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, false);\n        xhr.responseType = 'arraybuffer';\n        xhr.send(null);\n        return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));\n    };\n  }\n\n  readAsync = (url, onload, onerror) => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onload = () => {\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n        onload(xhr.response);\n        return;\n      }\n      onerror();\n    };\n    xhr.onerror = onerror;\n    xhr.send(null);\n  }\n\n// end include: web_or_worker_shell_read.js\n  }\n\n  setWindowTitle = (title) => document.title = title;\n} else\n{\n  throw new Error('environment detection error');\n}\n\nvar out = Module['print'] || console.log.bind(console);\nvar err = Module['printErr'] || console.warn.bind(console);\n\n// Merge back in the overrides\nObject.assign(Module, moduleOverrides);\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\nmoduleOverrides = null;\ncheckIncomingModuleAPI();\n\n// Emit code to handle expected values on the Module object. This applies Module.x\n// to the proper local x. This has two benefits: first, we only emit it if it is\n// expected to arrive, and second, by using a local everywhere else that can be\n// minified.\n\nif (Module['arguments']) arguments_ = Module['arguments'];legacyModuleProp('arguments', 'arguments_');\n\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];legacyModuleProp('thisProgram', 'thisProgram');\n\nif (Module['quit']) quit_ = Module['quit'];legacyModuleProp('quit', 'quit_');\n\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\n// Assertions on removed incoming Module JS APIs.\nassert(typeof Module['memoryInitializerPrefixURL'] == 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['pthreadMainPrefixURL'] == 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['cdInitializerPrefixURL'] == 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['filePackagePrefixURL'] == 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['read'] == 'undefined', 'Module.read option was removed (modify read_ in JS)');\nassert(typeof Module['readAsync'] == 'undefined', 'Module.readAsync option was removed (modify readAsync in JS)');\nassert(typeof Module['readBinary'] == 'undefined', 'Module.readBinary option was removed (modify readBinary in JS)');\nassert(typeof Module['setWindowTitle'] == 'undefined', 'Module.setWindowTitle option was removed (modify setWindowTitle in JS)');\nassert(typeof Module['TOTAL_MEMORY'] == 'undefined', 'Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY');\nlegacyModuleProp('read', 'read_');\nlegacyModuleProp('readAsync', 'readAsync');\nlegacyModuleProp('readBinary', 'readBinary');\nlegacyModuleProp('setWindowTitle', 'setWindowTitle');\nvar IDBFS = 'IDBFS is no longer included by default; build with -lidbfs.js';\nvar PROXYFS = 'PROXYFS is no longer included by default; build with -lproxyfs.js';\nvar WORKERFS = 'WORKERFS is no longer included by default; build with -lworkerfs.js';\nvar NODEFS = 'NODEFS is no longer included by default; build with -lnodefs.js';\n\nassert(!ENVIRONMENT_IS_SHELL, \"shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable.\");\n\n\n// end include: shell.js\n// include: preamble.js\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\nvar wasmBinary;\nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];legacyModuleProp('wasmBinary', 'wasmBinary');\nvar noExitRuntime = Module['noExitRuntime'] || true;legacyModuleProp('noExitRuntime', 'noExitRuntime');\n\nif (typeof WebAssembly != 'object') {\n  abort('no native wasm support detected');\n}\n\n// Wasm globals\n\nvar wasmMemory;\n\n//========================================\n// Runtime essentials\n//========================================\n\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS;\n\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    abort('Assertion failed' + (text ? ': ' + text : ''));\n  }\n}\n\n// We used to include malloc/free by default in the past. Show a helpful error in\n// builds with assertions.\n\n// Memory management\n\nvar HEAP,\n/** @type {!Int8Array} */\n  HEAP8,\n/** @type {!Uint8Array} */\n  HEAPU8,\n/** @type {!Int16Array} */\n  HEAP16,\n/** @type {!Uint16Array} */\n  HEAPU16,\n/** @type {!Int32Array} */\n  HEAP32,\n/** @type {!Uint32Array} */\n  HEAPU32,\n/** @type {!Float32Array} */\n  HEAPF32,\n/** @type {!Float64Array} */\n  HEAPF64;\n\nfunction updateMemoryViews() {\n  var b = wasmMemory.buffer;\n  Module['HEAP8'] = HEAP8 = new Int8Array(b);\n  Module['HEAP16'] = HEAP16 = new Int16Array(b);\n  Module['HEAP32'] = HEAP32 = new Int32Array(b);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n}\n\nassert(!Module['STACK_SIZE'], 'STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time')\n\nassert(typeof Int32Array != 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined,\n       'JS engine does not provide full typed array support');\n\n// If memory is defined in wasm, the user can't provide it, or set INITIAL_MEMORY\nassert(!Module['wasmMemory'], 'Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally');\nassert(!Module['INITIAL_MEMORY'], 'Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically');\n\n// include: runtime_init_table.js\n// In regular non-RELOCATABLE mode the table is exported\n// from the wasm module and this will be assigned once\n// the exports are available.\nvar wasmTable;\n\n// end include: runtime_init_table.js\n// include: runtime_stack_check.js\n// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\nfunction writeStackCookie() {\n  var max = _emscripten_stack_get_end();\n  assert((max & 3) == 0);\n  // If the stack ends at address zero we write our cookies 4 bytes into the\n  // stack.  This prevents interference with the (separate) address-zero check\n  // below.\n  if (max == 0) {\n    max += 4;\n  }\n  // The stack grow downwards towards _emscripten_stack_get_end.\n  // We write cookies to the final two words in the stack and detect if they are\n  // ever overwritten.\n  HEAPU32[((max)>>2)] = 0x02135467;\n  HEAPU32[(((max)+(4))>>2)] = 0x89BACDFE;\n  // Also test the global address 0 for integrity.\n  HEAPU32[0] = 0x63736d65; /* 'emsc' */\n}\n\nfunction checkStackCookie() {\n  if (ABORT) return;\n  var max = _emscripten_stack_get_end();\n  // See writeStackCookie().\n  if (max == 0) {\n    max += 4;\n  }\n  var cookie1 = HEAPU32[((max)>>2)];\n  var cookie2 = HEAPU32[(((max)+(4))>>2)];\n  if (cookie1 != 0x02135467 || cookie2 != 0x89BACDFE) {\n    abort('Stack overflow! Stack cookie has been overwritten at ' + ptrToString(max) + ', expected hex dwords 0x89BACDFE and 0x2135467, but received ' + ptrToString(cookie2) + ' ' + ptrToString(cookie1));\n  }\n  // Also test the global address 0 for integrity.\n  if (HEAPU32[0] !== 0x63736d65 /* 'emsc' */) {\n    abort('Runtime error: The application has corrupted its heap memory area (address zero)!');\n  }\n}\n\n// end include: runtime_stack_check.js\n// include: runtime_assertions.js\n// Endianness check\n(function() {\n  var h16 = new Int16Array(1);\n  var h8 = new Int8Array(h16.buffer);\n  h16[0] = 0x6373;\n  if (h8[0] !== 0x73 || h8[1] !== 0x63) throw 'Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)';\n})();\n\n// end include: runtime_assertions.js\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\nvar __ATINIT__    = []; // functions called during startup\nvar __ATEXIT__    = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\n\nvar runtimeInitialized = false;\n\nvar runtimeKeepaliveCounter = 0;\n\nfunction keepRuntimeAlive() {\n  return noExitRuntime || runtimeKeepaliveCounter > 0;\n}\n\nfunction preRun() {\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n  assert(!runtimeInitialized);\n  runtimeInitialized = true;\n\n  checkStackCookie();\n\n  \n  callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction postRun() {\n  checkStackCookie();\n\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\n\nfunction addOnExit(cb) {\n}\n\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\n\n// include: runtime_math.js\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\n\nassert(Math.imul, 'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.fround, 'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.clz32, 'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.trunc, 'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\n\n// end include: runtime_math.js\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\nvar runDependencyTracking = {};\n\nfunction getUniqueRunDependency(id) {\n  var orig = id;\n  while (1) {\n    if (!runDependencyTracking[id]) return id;\n    id = orig + Math.random();\n  }\n}\n\nfunction addRunDependency(id) {\n  runDependencies++;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n  if (id) {\n    assert(!runDependencyTracking[id]);\n    runDependencyTracking[id] = 1;\n    if (runDependencyWatcher === null && typeof setInterval != 'undefined') {\n      // Check for missing dependencies every few seconds\n      runDependencyWatcher = setInterval(function() {\n        if (ABORT) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n          return;\n        }\n        var shown = false;\n        for (var dep in runDependencyTracking) {\n          if (!shown) {\n            shown = true;\n            err('still waiting on run dependencies:');\n          }\n          err('dependency: ' + dep);\n        }\n        if (shown) {\n          err('(end of list)');\n        }\n      }, 10000);\n    }\n  } else {\n    err('warning: run dependency added without ID');\n  }\n}\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n  if (id) {\n    assert(runDependencyTracking[id]);\n    delete runDependencyTracking[id];\n  } else {\n    err('warning: run dependency removed without ID');\n  }\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\n\n/** @param {string|number=} what */\nfunction abort(what) {\n  if (Module['onAbort']) {\n    Module['onAbort'](what);\n  }\n\n  what = 'Aborted(' + what + ')';\n  // TODO(sbc): Should we remove printing and leave it up to whoever\n  // catches the exception?\n  err(what);\n\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\n  // exception, which means we'd run destructors on it. We need the error to\n  // simply make the program stop.\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\n  // a trap or not based on a hidden field within the object. So at the moment\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\n  // allows this in the wasm spec.\n\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\n  // defintion for WebAssembly.RuntimeError claims it takes no arguments even\n  // though it can.\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\n  /** @suppress {checkTypes} */\n  var e = new WebAssembly.RuntimeError(what);\n\n  // Throw the error whether or not MODULARIZE is set because abort is used\n  // in code paths apart from instantiation where an exception is expected\n  // to be thrown when abort is called.\n  throw e;\n}\n\n// include: memoryprofiler.js\n// end include: memoryprofiler.js\n// show errors on likely calls to FS when it was not included\nvar FS = {\n  error: function() {\n    abort('Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with -sFORCE_FILESYSTEM');\n  },\n  init: function() { FS.error() },\n  createDataFile: function() { FS.error() },\n  createPreloadedFile: function() { FS.error() },\n  createLazyFile: function() { FS.error() },\n  open: function() { FS.error() },\n  mkdev: function() { FS.error() },\n  registerDevice: function() { FS.error() },\n  analyzePath: function() { FS.error() },\n\n  ErrnoError: function ErrnoError() { FS.error() },\n};\nModule['FS_createDataFile'] = FS.createDataFile;\nModule['FS_createPreloadedFile'] = FS.createPreloadedFile;\n\n// include: URIUtils.js\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\n\n// Indicates whether filename is a base64 data URI.\nfunction isDataURI(filename) {\n  // Prefix of data URIs emitted by SINGLE_FILE and related options.\n  return filename.startsWith(dataURIPrefix);\n}\n\n// Indicates whether filename is delivered via file protocol (as opposed to http/https)\nfunction isFileURI(filename) {\n  return filename.startsWith('file://');\n}\n\n// end include: URIUtils.js\n/** @param {boolean=} fixedasm */\nfunction createExportWrapper(name, fixedasm) {\n  return function() {\n    var displayName = name;\n    var asm = fixedasm;\n    if (!fixedasm) {\n      asm = Module['asm'];\n    }\n    assert(runtimeInitialized, 'native function `' + displayName + '` called before runtime initialization');\n    if (!asm[name]) {\n      assert(asm[name], 'exported native function `' + displayName + '` not found');\n    }\n    return asm[name].apply(null, arguments);\n  };\n}\n\n// include: runtime_exceptions.js\n// end include: runtime_exceptions.js\nvar wasmBinaryFile;\n  wasmBinaryFile = 'add.wasm';\n  if (!isDataURI(wasmBinaryFile)) {\n    wasmBinaryFile = locateFile(wasmBinaryFile);\n  }\n\nfunction getBinary(file) {\n  try {\n    if (file == wasmBinaryFile && wasmBinary) {\n      return new Uint8Array(wasmBinary);\n    }\n    if (readBinary) {\n      return readBinary(file);\n    }\n    throw \"both async and sync fetching of the wasm failed\";\n  }\n  catch (err) {\n    abort(err);\n  }\n}\n\nfunction getBinaryPromise(binaryFile) {\n  // If we don't have the binary yet, try to load it asynchronously.\n  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\n  // See https://github.com/github/fetch/pull/92#issuecomment-140665932\n  // Cordova or Electron apps are typically loaded from a file:// url.\n  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\n  if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n    if (typeof fetch == 'function'\n      && !isFileURI(binaryFile)\n    ) {\n      return fetch(binaryFile, { credentials: 'same-origin' }).then(function(response) {\n        if (!response['ok']) {\n          throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\n        }\n        return response['arrayBuffer']();\n      }).catch(function () {\n          return getBinary(binaryFile);\n      });\n    }\n    else {\n      if (readAsync) {\n        // fetch is not available or url is file => try XHR (readAsync uses XHR internally)\n        return new Promise(function(resolve, reject) {\n          readAsync(binaryFile, function(response) { resolve(new Uint8Array(/** @type{!ArrayBuffer} */(response))) }, reject)\n        });\n      }\n    }\n  }\n\n  // Otherwise, getBinary should be able to get it synchronously\n  return Promise.resolve().then(function() { return getBinary(binaryFile); });\n}\n\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\n  return getBinaryPromise(binaryFile).then(function(binary) {\n    return WebAssembly.instantiate(binary, imports);\n  }).then(function (instance) {\n    return instance;\n  }).then(receiver, function(reason) {\n    err('failed to asynchronously prepare wasm: ' + reason);\n\n    // Warn on some common problems.\n    if (isFileURI(wasmBinaryFile)) {\n      err('warning: Loading from a file URI (' + wasmBinaryFile + ') is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing');\n    }\n    abort(reason);\n  });\n}\n\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\n  if (!binary &&\n      typeof WebAssembly.instantiateStreaming == 'function' &&\n      !isDataURI(binaryFile) &&\n      // Don't use streaming for file:// delivered objects in a webview, fetch them synchronously.\n      !isFileURI(binaryFile) &&\n      // Avoid instantiateStreaming() on Node.js environment for now, as while\n      // Node.js v18.1.0 implements it, it does not have a full fetch()\n      // implementation yet.\n      //\n      // Reference:\n      //   https://github.com/emscripten-core/emscripten/pull/16917\n      !ENVIRONMENT_IS_NODE &&\n      typeof fetch == 'function') {\n    return fetch(binaryFile, { credentials: 'same-origin' }).then(function(response) {\n      // Suppress closure warning here since the upstream definition for\n      // instantiateStreaming only allows Promise<Repsponse> rather than\n      // an actual Response.\n      // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\n      /** @suppress {checkTypes} */\n      var result = WebAssembly.instantiateStreaming(response, imports);\n\n      return result.then(\n        callback,\n        function(reason) {\n          // We expect the most common failure cause to be a bad MIME type for the binary,\n          // in which case falling back to ArrayBuffer instantiation should work.\n          err('wasm streaming compile failed: ' + reason);\n          err('falling back to ArrayBuffer instantiation');\n          return instantiateArrayBuffer(binaryFile, imports, callback);\n        });\n    });\n  } else {\n    return instantiateArrayBuffer(binaryFile, imports, callback);\n  }\n}\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nfunction createWasm() {\n  // prepare imports\n  var info = {\n    'env': wasmImports,\n    'wasi_snapshot_preview1': wasmImports,\n  };\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  /** @param {WebAssembly.Module=} module*/\n  function receiveInstance(instance, module) {\n    var exports = instance.exports;\n\n    Module['asm'] = exports;\n\n    wasmMemory = Module['asm']['memory'];\n    assert(wasmMemory, \"memory not found in wasm exports\");\n    // This assertion doesn't hold when emscripten is run in --post-link\n    // mode.\n    // TODO(sbc): Read INITIAL_MEMORY out of the wasm file in post-link mode.\n    //assert(wasmMemory.buffer.byteLength === 16777216);\n    updateMemoryViews();\n\n    wasmTable = Module['asm']['__indirect_function_table'];\n    assert(wasmTable, \"table not found in wasm exports\");\n\n    addOnInit(Module['asm']['__wasm_call_ctors']);\n\n    removeRunDependency('wasm-instantiate');\n\n    return exports;\n  }\n  // wait for the pthread pool (if any)\n  addRunDependency('wasm-instantiate');\n\n  // Prefer streaming instantiation if available.\n  // Async compilation can be confusing when an error on the page overwrites Module\n  // (for example, if the order of elements is wrong, and the one defining Module is\n  // later), so we save Module and check it later.\n  var trueModule = Module;\n  function receiveInstantiationResult(result) {\n    // 'result' is a ResultObject object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n    assert(Module === trueModule, 'the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?');\n    trueModule = null;\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n    // When the regression is fixed, can restore the above PTHREADS-enabled path.\n    receiveInstance(result['instance']);\n  }\n\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n  // to manually instantiate the Wasm module themselves. This allows pages to\n  // run the instantiation parallel to any other async startup actions they are\n  // performing.\n  // Also pthreads and wasm workers initialize the wasm instance through this\n  // path.\n  if (Module['instantiateWasm']) {\n\n    try {\n      return Module['instantiateWasm'](info, receiveInstance);\n    } catch(e) {\n      err('Module.instantiateWasm callback failed with error: ' + e);\n        return false;\n    }\n  }\n\n  instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult);\n  return {}; // no exports yet; we'll fill them in later\n}\n\n// Globals used by JS i64 conversions (see makeSetValue)\nvar tempDouble;\nvar tempI64;\n\n// include: runtime_debug.js\nfunction legacyModuleProp(prop, newName) {\n  if (!Object.getOwnPropertyDescriptor(Module, prop)) {\n    Object.defineProperty(Module, prop, {\n      configurable: true,\n      get: function() {\n        abort('Module.' + prop + ' has been replaced with plain ' + newName + ' (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)');\n      }\n    });\n  }\n}\n\nfunction ignoredModuleProp(prop) {\n  if (Object.getOwnPropertyDescriptor(Module, prop)) {\n    abort('`Module.' + prop + '` was supplied but `' + prop + '` not included in INCOMING_MODULE_JS_API');\n  }\n}\n\n// forcing the filesystem exports a few things by default\nfunction isExportedByForceFilesystem(name) {\n  return name === 'FS_createPath' ||\n         name === 'FS_createDataFile' ||\n         name === 'FS_createPreloadedFile' ||\n         name === 'FS_unlink' ||\n         name === 'addRunDependency' ||\n         // The old FS has some functionality that WasmFS lacks.\n         name === 'FS_createLazyFile' ||\n         name === 'FS_createDevice' ||\n         name === 'removeRunDependency';\n}\n\nfunction missingGlobal(sym, msg) {\n  if (typeof globalThis !== 'undefined') {\n    Object.defineProperty(globalThis, sym, {\n      configurable: true,\n      get: function() {\n        warnOnce('`' + sym + '` is not longer defined by emscripten. ' + msg);\n        return undefined;\n      }\n    });\n  }\n}\n\nmissingGlobal('buffer', 'Please use HEAP8.buffer or wasmMemory.buffer');\n\nfunction missingLibrarySymbol(sym) {\n  if (typeof globalThis !== 'undefined' && !Object.getOwnPropertyDescriptor(globalThis, sym)) {\n    Object.defineProperty(globalThis, sym, {\n      configurable: true,\n      get: function() {\n        // Can't `abort()` here because it would break code that does runtime\n        // checks.  e.g. `if (typeof SDL === 'undefined')`.\n        var msg = '`' + sym + '` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line';\n        // DEFAULT_LIBRARY_FUNCS_TO_INCLUDE requires the name as it appears in\n        // library.js, which means $name for a JS name with no prefix, or name\n        // for a JS name like _name.\n        var librarySymbol = sym;\n        if (!librarySymbol.startsWith('_')) {\n          librarySymbol = '$' + sym;\n        }\n        msg += \" (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE=\" + librarySymbol + \")\";\n        if (isExportedByForceFilesystem(sym)) {\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n        }\n        warnOnce(msg);\n        return undefined;\n      }\n    });\n  }\n  // Any symbol that is not included from the JS libary is also (by definition)\n  // not exported on the Module object.\n  unexportedRuntimeSymbol(sym);\n}\n\nfunction unexportedRuntimeSymbol(sym) {\n  if (!Object.getOwnPropertyDescriptor(Module, sym)) {\n    Object.defineProperty(Module, sym, {\n      configurable: true,\n      get: function() {\n        var msg = \"'\" + sym + \"' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\";\n        if (isExportedByForceFilesystem(sym)) {\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n        }\n        abort(msg);\n      }\n    });\n  }\n}\n\n// Used by XXXXX_DEBUG settings to output debug messages.\nfunction dbg(text) {\n  // TODO(sbc): Make this configurable somehow.  Its not always convenient for\n  // logging to show up as errors.\n  console.error(text);\n}\n\n// end include: runtime_debug.js\n// === Body ===\n\n\n// end include: preamble.js\n\n  /** @constructor */\n  function ExitStatus(status) {\n      this.name = 'ExitStatus';\n      this.message = 'Program terminated with exit(' + status + ')';\n      this.status = status;\n    }\n\n  function callRuntimeCallbacks(callbacks) {\n      while (callbacks.length > 0) {\n        // Pass the module as the first argument.\n        callbacks.shift()(Module);\n      }\n    }\n\n  \n    /**\n     * @param {number} ptr\n     * @param {string} type\n     */\n  function getValue(ptr, type = 'i8') {\n    if (type.endsWith('*')) type = '*';\n    switch (type) {\n      case 'i1': return HEAP8[((ptr)>>0)];\n      case 'i8': return HEAP8[((ptr)>>0)];\n      case 'i16': return HEAP16[((ptr)>>1)];\n      case 'i32': return HEAP32[((ptr)>>2)];\n      case 'i64': return HEAP32[((ptr)>>2)];\n      case 'float': return HEAPF32[((ptr)>>2)];\n      case 'double': return HEAPF64[((ptr)>>3)];\n      case '*': return HEAPU32[((ptr)>>2)];\n      default: abort('invalid type for getValue: ' + type);\n    }\n  }\n\n  function ptrToString(ptr) {\n      assert(typeof ptr === 'number');\n      return '0x' + ptr.toString(16).padStart(8, '0');\n    }\n\n  \n    /**\n     * @param {number} ptr\n     * @param {number} value\n     * @param {string} type\n     */\n  function setValue(ptr, value, type = 'i8') {\n    if (type.endsWith('*')) type = '*';\n    switch (type) {\n      case 'i1': HEAP8[((ptr)>>0)] = value; break;\n      case 'i8': HEAP8[((ptr)>>0)] = value; break;\n      case 'i16': HEAP16[((ptr)>>1)] = value; break;\n      case 'i32': HEAP32[((ptr)>>2)] = value; break;\n      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math.min((+(Math.floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)] = tempI64[0],HEAP32[(((ptr)+(4))>>2)] = tempI64[1]); break;\n      case 'float': HEAPF32[((ptr)>>2)] = value; break;\n      case 'double': HEAPF64[((ptr)>>3)] = value; break;\n      case '*': HEAPU32[((ptr)>>2)] = value; break;\n      default: abort('invalid type for setValue: ' + type);\n    }\n  }\n\n  function warnOnce(text) {\n      if (!warnOnce.shown) warnOnce.shown = {};\n      if (!warnOnce.shown[text]) {\n        warnOnce.shown[text] = 1;\n        if (ENVIRONMENT_IS_NODE) text = 'warning: ' + text;\n        err(text);\n      }\n    }\n\n  function __embind_register_bigint(primitiveType, name, size, minRange, maxRange) {}\n\n  function getShiftFromSize(size) {\n      switch (size) {\n          case 1: return 0;\n          case 2: return 1;\n          case 4: return 2;\n          case 8: return 3;\n          default:\n              throw new TypeError('Unknown type size: ' + size);\n      }\n    }\n  \n  function embind_init_charCodes() {\n      var codes = new Array(256);\n      for (var i = 0; i < 256; ++i) {\n          codes[i] = String.fromCharCode(i);\n      }\n      embind_charCodes = codes;\n    }\n  var embind_charCodes = undefined;\n  function readLatin1String(ptr) {\n      var ret = \"\";\n      var c = ptr;\n      while (HEAPU8[c]) {\n          ret += embind_charCodes[HEAPU8[c++]];\n      }\n      return ret;\n    }\n  \n  var awaitingDependencies = {};\n  \n  var registeredTypes = {};\n  \n  var typeDependencies = {};\n  \n  var char_0 = 48;\n  \n  var char_9 = 57;\n  function makeLegalFunctionName(name) {\n      if (undefined === name) {\n        return '_unknown';\n      }\n      name = name.replace(/[^a-zA-Z0-9_]/g, '$');\n      var f = name.charCodeAt(0);\n      if (f >= char_0 && f <= char_9) {\n        return '_' + name;\n      }\n      return name;\n    }\n  function createNamedFunction(name, body) {\n      name = makeLegalFunctionName(name);\n      // Use an abject with a computed property name to create a new function with\n      // a name specified at runtime, but without using `new Function` or `eval`.\n      return {\n        [name]: function() {\n          return body.apply(this, arguments);\n        }\n      }[name];\n    }\n  function extendError(baseErrorType, errorName) {\n      var errorClass = createNamedFunction(errorName, function(message) {\n        this.name = errorName;\n        this.message = message;\n  \n        var stack = (new Error(message)).stack;\n        if (stack !== undefined) {\n          this.stack = this.toString() + '\\n' +\n              stack.replace(/^Error(:[^\\n]*)?\\n/, '');\n        }\n      });\n      errorClass.prototype = Object.create(baseErrorType.prototype);\n      errorClass.prototype.constructor = errorClass;\n      errorClass.prototype.toString = function() {\n        if (this.message === undefined) {\n          return this.name;\n        } else {\n          return this.name + ': ' + this.message;\n        }\n      };\n  \n      return errorClass;\n    }\n  var BindingError = undefined;\n  function throwBindingError(message) {\n      throw new BindingError(message);\n    }\n  \n  \n  \n  \n  var InternalError = undefined;\n  function throwInternalError(message) {\n      throw new InternalError(message);\n    }\n  function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n      myTypes.forEach(function(type) {\n          typeDependencies[type] = dependentTypes;\n      });\n  \n      function onComplete(typeConverters) {\n          var myTypeConverters = getTypeConverters(typeConverters);\n          if (myTypeConverters.length !== myTypes.length) {\n              throwInternalError('Mismatched type converter count');\n          }\n          for (var i = 0; i < myTypes.length; ++i) {\n              registerType(myTypes[i], myTypeConverters[i]);\n          }\n      }\n  \n      var typeConverters = new Array(dependentTypes.length);\n      var unregisteredTypes = [];\n      var registered = 0;\n      dependentTypes.forEach((dt, i) => {\n        if (registeredTypes.hasOwnProperty(dt)) {\n          typeConverters[i] = registeredTypes[dt];\n        } else {\n          unregisteredTypes.push(dt);\n          if (!awaitingDependencies.hasOwnProperty(dt)) {\n            awaitingDependencies[dt] = [];\n          }\n          awaitingDependencies[dt].push(() => {\n            typeConverters[i] = registeredTypes[dt];\n            ++registered;\n            if (registered === unregisteredTypes.length) {\n              onComplete(typeConverters);\n            }\n          });\n        }\n      });\n      if (0 === unregisteredTypes.length) {\n        onComplete(typeConverters);\n      }\n    }\n  /** @param {Object=} options */\n  function registerType(rawType, registeredInstance, options = {}) {\n      if (!('argPackAdvance' in registeredInstance)) {\n          throw new TypeError('registerType registeredInstance requires argPackAdvance');\n      }\n  \n      var name = registeredInstance.name;\n      if (!rawType) {\n          throwBindingError('type \"' + name + '\" must have a positive integer typeid pointer');\n      }\n      if (registeredTypes.hasOwnProperty(rawType)) {\n          if (options.ignoreDuplicateRegistrations) {\n              return;\n          } else {\n              throwBindingError(\"Cannot register type '\" + name + \"' twice\");\n          }\n      }\n  \n      registeredTypes[rawType] = registeredInstance;\n      delete typeDependencies[rawType];\n  \n      if (awaitingDependencies.hasOwnProperty(rawType)) {\n        var callbacks = awaitingDependencies[rawType];\n        delete awaitingDependencies[rawType];\n        callbacks.forEach((cb) => cb());\n      }\n    }\n  function __embind_register_bool(rawType, name, size, trueValue, falseValue) {\n      var shift = getShiftFromSize(size);\n  \n      name = readLatin1String(name);\n      registerType(rawType, {\n          name: name,\n          'fromWireType': function(wt) {\n              // ambiguous emscripten ABI: sometimes return values are\n              // true or false, and sometimes integers (0 or 1)\n              return !!wt;\n          },\n          'toWireType': function(destructors, o) {\n              return o ? trueValue : falseValue;\n          },\n          'argPackAdvance': 8,\n          'readValueFromPointer': function(pointer) {\n              // TODO: if heap is fixed (like in asm.js) this could be executed outside\n              var heap;\n              if (size === 1) {\n                  heap = HEAP8;\n              } else if (size === 2) {\n                  heap = HEAP16;\n              } else if (size === 4) {\n                  heap = HEAP32;\n              } else {\n                  throw new TypeError(\"Unknown boolean type size: \" + name);\n              }\n              return this['fromWireType'](heap[pointer >> shift]);\n          },\n          destructorFunction: null, // This type does not need a destructor\n      });\n    }\n\n  /** @constructor */\n  function HandleAllocator() {\n      // Reserve slot 0 so that 0 is always an invalid handle\n      this.allocated = [undefined];\n      this.freelist = [];\n      this.get = function(id) {\n        assert(this.allocated[id] !== undefined, 'invalid handle: ' + id);\n        return this.allocated[id];\n      };\n      this.allocate = function(handle) {\n        let id = this.freelist.pop() || this.allocated.length;\n        this.allocated[id] = handle;\n        return id;\n      };\n      this.free = function(id) {\n        assert(this.allocated[id] !== undefined);\n        // Set the slot to `undefined` rather than using `delete` here since\n        // apparently arrays with holes in them can be less efficient.\n        this.allocated[id] = undefined;\n        this.freelist.push(id);\n      };\n    }\n  var emval_handles = new HandleAllocator();;\n  function __emval_decref(handle) {\n      if (handle >= emval_handles.reserved && 0 === --emval_handles.get(handle).refcount) {\n        emval_handles.free(handle);\n      }\n    }\n  \n  \n  \n  function count_emval_handles() {\n      var count = 0;\n      for (var i = emval_handles.reserved; i < emval_handles.allocated.length; ++i) {\n        if (emval_handles.allocated[i] !== undefined) {\n          ++count;\n        }\n      }\n      return count;\n    }\n  \n  function init_emval() {\n      // reserve some special values. These never get de-allocated.\n      // The HandleAllocator takes care of reserving zero.\n      emval_handles.allocated.push(\n        {value: undefined},\n        {value: null},\n        {value: true},\n        {value: false},\n      );\n      emval_handles.reserved = emval_handles.allocated.length\n      Module['count_emval_handles'] = count_emval_handles;\n    }\n  var Emval = {toValue:(handle) => {\n        if (!handle) {\n            throwBindingError('Cannot use deleted val. handle = ' + handle);\n        }\n        return emval_handles.get(handle).value;\n      },toHandle:(value) => {\n        switch (value) {\n          case undefined: return 1;\n          case null: return 2;\n          case true: return 3;\n          case false: return 4;\n          default:{\n            return emval_handles.allocate({refcount: 1, value: value});\n          }\n        }\n      }};\n  \n  \n  \n  function simpleReadValueFromPointer(pointer) {\n      return this['fromWireType'](HEAP32[((pointer)>>2)]);\n    }\n  function __embind_register_emval(rawType, name) {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        'fromWireType': function(handle) {\n          var rv = Emval.toValue(handle);\n          __emval_decref(handle);\n          return rv;\n        },\n        'toWireType': function(destructors, value) {\n          return Emval.toHandle(value);\n        },\n        'argPackAdvance': 8,\n        'readValueFromPointer': simpleReadValueFromPointer,\n        destructorFunction: null, // This type does not need a destructor\n  \n        // TODO: do we need a deleteObject here?  write a test where\n        // emval is passed into JS via an interface\n      });\n    }\n\n  function embindRepr(v) {\n      if (v === null) {\n          return 'null';\n      }\n      var t = typeof v;\n      if (t === 'object' || t === 'array' || t === 'function') {\n          return v.toString();\n      } else {\n          return '' + v;\n      }\n    }\n  \n  function floatReadValueFromPointer(name, shift) {\n      switch (shift) {\n          case 2: return function(pointer) {\n              return this['fromWireType'](HEAPF32[pointer >> 2]);\n          };\n          case 3: return function(pointer) {\n              return this['fromWireType'](HEAPF64[pointer >> 3]);\n          };\n          default:\n              throw new TypeError(\"Unknown float type: \" + name);\n      }\n    }\n  \n  \n  \n  function __embind_register_float(rawType, name, size) {\n      var shift = getShiftFromSize(size);\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        'fromWireType': function(value) {\n           return value;\n        },\n        'toWireType': function(destructors, value) {\n          if (typeof value != \"number\" && typeof value != \"boolean\") {\n            throw new TypeError('Cannot convert \"' + embindRepr(value) + '\" to ' + this.name);\n          }\n          // The VM will perform JS to Wasm value conversion, according to the spec:\n          // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\n          return value;\n        },\n        'argPackAdvance': 8,\n        'readValueFromPointer': floatReadValueFromPointer(name, shift),\n        destructorFunction: null, // This type does not need a destructor\n      });\n    }\n\n  \n  function runDestructors(destructors) {\n      while (destructors.length) {\n        var ptr = destructors.pop();\n        var del = destructors.pop();\n        del(ptr);\n      }\n    }\n  \n  \n  function newFunc(constructor, argumentList) {\n      if (!(constructor instanceof Function)) {\n        throw new TypeError('new_ called with constructor type ' + typeof(constructor) + \" which is not a function\");\n      }\n      /*\n       * Previously, the following line was just:\n       *   function dummy() {};\n       * Unfortunately, Chrome was preserving 'dummy' as the object's name, even\n       * though at creation, the 'dummy' has the correct constructor name.  Thus,\n       * objects created with IMVU.new would show up in the debugger as 'dummy',\n       * which isn't very helpful.  Using IMVU.createNamedFunction addresses the\n       * issue.  Doublely-unfortunately, there's no way to write a test for this\n       * behavior.  -NRD 2013.02.22\n       */\n      var dummy = createNamedFunction(constructor.name || 'unknownFunctionName', function(){});\n      dummy.prototype = constructor.prototype;\n      var obj = new dummy;\n  \n      var r = constructor.apply(obj, argumentList);\n      return (r instanceof Object) ? r : obj;\n    }\n  function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc, isAsync) {\n      // humanName: a human-readable string name for the function to be generated.\n      // argTypes: An array that contains the embind type objects for all types in the function signature.\n      //    argTypes[0] is the type object for the function return value.\n      //    argTypes[1] is the type object for function this object/class type, or null if not crafting an invoker for a class method.\n      //    argTypes[2...] are the actual function parameters.\n      // classType: The embind type object for the class to be bound, or null if this is not a method of a class.\n      // cppInvokerFunc: JS Function object to the C++-side function that interops into C++ code.\n      // cppTargetFunc: Function pointer (an integer to FUNCTION_TABLE) to the target C++ function the cppInvokerFunc will end up calling.\n      var argCount = argTypes.length;\n  \n      if (argCount < 2) {\n        throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n      }\n  \n      assert(!isAsync, 'Async bindings are only supported with JSPI.');\n  \n      var isClassMethodFunc = (argTypes[1] !== null && classType !== null);\n  \n      // Free functions with signature \"void function()\" do not need an invoker that marshalls between wire types.\n  // TODO: This omits argument count check - enable only at -O3 or similar.\n  //    if (ENABLE_UNSAFE_OPTS && argCount == 2 && argTypes[0].name == \"void\" && !isClassMethodFunc) {\n  //       return FUNCTION_TABLE[fn];\n  //    }\n  \n      // Determine if we need to use a dynamic stack to store the destructors for the function parameters.\n      // TODO: Remove this completely once all function invokers are being dynamically generated.\n      var needsDestructorStack = false;\n  \n      for (var i = 1; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here.\n        if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) { // The type does not define a destructor function - must use dynamic stack\n          needsDestructorStack = true;\n          break;\n        }\n      }\n  \n      var returns = (argTypes[0].name !== \"void\");\n  \n      var argsList = \"\";\n      var argsListWired = \"\";\n      for (var i = 0; i < argCount - 2; ++i) {\n        argsList += (i!==0?\", \":\"\")+\"arg\"+i;\n        argsListWired += (i!==0?\", \":\"\")+\"arg\"+i+\"Wired\";\n      }\n  \n      var invokerFnBody =\n          \"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\" +\n          \"if (arguments.length !== \"+(argCount - 2)+\") {\\n\" +\n              \"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount - 2)+\" args!');\\n\" +\n          \"}\\n\";\n  \n      if (needsDestructorStack) {\n        invokerFnBody += \"var destructors = [];\\n\";\n      }\n  \n      var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n      var args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n      var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n  \n      if (isClassMethodFunc) {\n        invokerFnBody += \"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\";\n      }\n  \n      for (var i = 0; i < argCount - 2; ++i) {\n        invokerFnBody += \"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";\n        args1.push(\"argType\"+i);\n        args2.push(argTypes[i+2]);\n      }\n  \n      if (isClassMethodFunc) {\n        argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n      }\n  \n      invokerFnBody +=\n          (returns || isAsync ? \"var rv = \":\"\") + \"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";\n  \n      if (needsDestructorStack) {\n        invokerFnBody += \"runDestructors(destructors);\\n\";\n      } else {\n        for (var i = isClassMethodFunc?1:2; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.\n          var paramName = (i === 1 ? \"thisWired\" : (\"arg\"+(i - 2)+\"Wired\"));\n          if (argTypes[i].destructorFunction !== null) {\n            invokerFnBody += paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";\n            args1.push(paramName+\"_dtor\");\n            args2.push(argTypes[i].destructorFunction);\n          }\n        }\n      }\n  \n      if (returns) {\n        invokerFnBody += \"var ret = retType.fromWireType(rv);\\n\" +\n                         \"return ret;\\n\";\n      } else {\n      }\n  \n      invokerFnBody += \"}\\n\";\n  \n      args1.push(invokerFnBody);\n  \n      return newFunc(Function, args1).apply(null, args2);\n    }\n  \n  function ensureOverloadTable(proto, methodName, humanName) {\n      if (undefined === proto[methodName].overloadTable) {\n        var prevFunc = proto[methodName];\n        // Inject an overload resolver function that routes to the appropriate overload based on the number of arguments.\n        proto[methodName] = function() {\n          // TODO This check can be removed in -O3 level \"unsafe\" optimizations.\n          if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n              throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n          }\n          return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n        };\n        // Move the previous function into the overload table.\n        proto[methodName].overloadTable = [];\n        proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n      }\n    }\n  \n  /** @param {number=} numArguments */\n  function exposePublicSymbol(name, value, numArguments) {\n      if (Module.hasOwnProperty(name)) {\n        if (undefined === numArguments || (undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments])) {\n          throwBindingError(\"Cannot register public name '\" + name + \"' twice\");\n        }\n  \n        // We are exposing a function with the same name as an existing function. Create an overload table and a function selector\n        // that routes between the two.\n        ensureOverloadTable(Module, name, name);\n        if (Module.hasOwnProperty(numArguments)) {\n            throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n        }\n        // Add the new function into the overload table.\n        Module[name].overloadTable[numArguments] = value;\n      }\n      else {\n        Module[name] = value;\n        if (undefined !== numArguments) {\n          Module[name].numArguments = numArguments;\n        }\n      }\n    }\n  \n  function heap32VectorToArray(count, firstElement) {\n      var array = [];\n      for (var i = 0; i < count; i++) {\n          // TODO(https://github.com/emscripten-core/emscripten/issues/17310):\n          // Find a way to hoist the `>> 2` or `>> 3` out of this loop.\n          array.push(HEAPU32[(((firstElement)+(i * 4))>>2)]);\n      }\n      return array;\n    }\n  \n  \n  /** @param {number=} numArguments */\n  function replacePublicSymbol(name, value, numArguments) {\n      if (!Module.hasOwnProperty(name)) {\n        throwInternalError('Replacing nonexistant public symbol');\n      }\n      // If there's an overload table for this symbol, replace the symbol in the overload table instead.\n      if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n        Module[name].overloadTable[numArguments] = value;\n      }\n      else {\n        Module[name] = value;\n        Module[name].argCount = numArguments;\n      }\n    }\n  \n  \n  \n  function dynCallLegacy(sig, ptr, args) {\n      assert(('dynCall_' + sig) in Module, 'bad function pointer type - dynCall function not found for sig \\'' + sig + '\\'');\n      if (args && args.length) {\n        // j (64-bit integer) must be passed in as two numbers [low 32, high 32].\n        assert(args.length === sig.substring(1).replace(/j/g, '--').length);\n      } else {\n        assert(sig.length == 1);\n      }\n      var f = Module['dynCall_' + sig];\n      return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\n    }\n  \n  var wasmTableMirror = [];\n  \n  function getWasmTableEntry(funcPtr) {\n      var func = wasmTableMirror[funcPtr];\n      if (!func) {\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n      }\n      assert(wasmTable.get(funcPtr) == func, \"JavaScript-side Wasm function table mirror is out of date!\");\n      return func;\n    }\n  \n  /** @param {Object=} args */\n  function dynCall(sig, ptr, args) {\n      // Without WASM_BIGINT support we cannot directly call function with i64 as\n      // part of thier signature, so we rely the dynCall functions generated by\n      // wasm-emscripten-finalize\n      if (sig.includes('j')) {\n        return dynCallLegacy(sig, ptr, args);\n      }\n      assert(getWasmTableEntry(ptr), 'missing table entry in dynCall: ' + ptr);\n      var rtn = getWasmTableEntry(ptr).apply(null, args);\n      return rtn;\n    }\n  \n  function getDynCaller(sig, ptr) {\n      assert(sig.includes('j') || sig.includes('p'), 'getDynCaller should only be called with i64 sigs')\n      var argCache = [];\n      return function() {\n        argCache.length = 0;\n        Object.assign(argCache, arguments);\n        return dynCall(sig, ptr, argCache);\n      };\n    }\n  \n  \n  function embind__requireFunction(signature, rawFunction) {\n      signature = readLatin1String(signature);\n  \n      function makeDynCaller() {\n        if (signature.includes('j')) {\n          return getDynCaller(signature, rawFunction);\n        }\n        return getWasmTableEntry(rawFunction);\n      }\n  \n      var fp = makeDynCaller();\n      if (typeof fp != \"function\") {\n          throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n      }\n      return fp;\n    }\n  \n  \n  \n  var UnboundTypeError = undefined;\n  \n  \n  function getTypeName(type) {\n      var ptr = ___getTypeName(type);\n      var rv = readLatin1String(ptr);\n      _free(ptr);\n      return rv;\n    }\n  function throwUnboundTypeError(message, types) {\n      var unboundTypes = [];\n      var seen = {};\n      function visit(type) {\n        if (seen[type]) {\n          return;\n        }\n        if (registeredTypes[type]) {\n          return;\n        }\n        if (typeDependencies[type]) {\n          typeDependencies[type].forEach(visit);\n          return;\n        }\n        unboundTypes.push(type);\n        seen[type] = true;\n      }\n      types.forEach(visit);\n  \n      throw new UnboundTypeError(message + ': ' + unboundTypes.map(getTypeName).join([', ']));\n    }\n  \n  function __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn, isAsync) {\n      var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      name = readLatin1String(name);\n  \n      rawInvoker = embind__requireFunction(signature, rawInvoker);\n  \n      exposePublicSymbol(name, function() {\n        throwUnboundTypeError('Cannot call ' + name + ' due to unbound types', argTypes);\n      }, argCount - 1);\n  \n      whenDependentTypesAreResolved([], argTypes, function(argTypes) {\n        var invokerArgsArray = [argTypes[0] /* return value */, null /* no class 'this'*/].concat(argTypes.slice(1) /* actual params */);\n        replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null /* no class 'this'*/, rawInvoker, fn, isAsync), argCount - 1);\n        return [];\n      });\n    }\n\n  \n  \n  function integerReadValueFromPointer(name, shift, signed) {\n      // integers are quite common, so generate very specialized functions\n      switch (shift) {\n          case 0: return signed ?\n              function readS8FromPointer(pointer) { return HEAP8[pointer]; } :\n              function readU8FromPointer(pointer) { return HEAPU8[pointer]; };\n          case 1: return signed ?\n              function readS16FromPointer(pointer) { return HEAP16[pointer >> 1]; } :\n              function readU16FromPointer(pointer) { return HEAPU16[pointer >> 1]; };\n          case 2: return signed ?\n              function readS32FromPointer(pointer) { return HEAP32[pointer >> 2]; } :\n              function readU32FromPointer(pointer) { return HEAPU32[pointer >> 2]; };\n          default:\n              throw new TypeError(\"Unknown integer type: \" + name);\n      }\n    }\n  \n  \n  function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\n      name = readLatin1String(name);\n      // LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come\n      // out as 'i32 -1'. Always treat those as max u32.\n      if (maxRange === -1) {\n          maxRange = 4294967295;\n      }\n  \n      var shift = getShiftFromSize(size);\n  \n      var fromWireType = (value) => value;\n  \n      if (minRange === 0) {\n          var bitshift = 32 - 8*size;\n          fromWireType = (value) => (value << bitshift) >>> bitshift;\n      }\n  \n      var isUnsignedType = (name.includes('unsigned'));\n      var checkAssertions = (value, toTypeName) => {\n        if (typeof value != \"number\" && typeof value != \"boolean\") {\n          throw new TypeError('Cannot convert \"' + embindRepr(value) + '\" to ' + toTypeName);\n        }\n        if (value < minRange || value > maxRange) {\n          throw new TypeError('Passing a number \"' + embindRepr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name + '\", which is outside the valid range [' + minRange + ', ' + maxRange + ']!');\n        }\n      }\n      var toWireType;\n      if (isUnsignedType) {\n        toWireType = function(destructors, value) {\n          checkAssertions(value, this.name);\n          return value >>> 0;\n        }\n      } else {\n        toWireType = function(destructors, value) {\n          checkAssertions(value, this.name);\n          // The VM will perform JS to Wasm value conversion, according to the spec:\n          // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\n          return value;\n        }\n      }\n      registerType(primitiveType, {\n        name: name,\n        'fromWireType': fromWireType,\n        'toWireType': toWireType,\n        'argPackAdvance': 8,\n        'readValueFromPointer': integerReadValueFromPointer(name, shift, minRange !== 0),\n        destructorFunction: null, // This type does not need a destructor\n      });\n    }\n\n  \n  function __embind_register_memory_view(rawType, dataTypeIndex, name) {\n      var typeMapping = [\n        Int8Array,\n        Uint8Array,\n        Int16Array,\n        Uint16Array,\n        Int32Array,\n        Uint32Array,\n        Float32Array,\n        Float64Array,\n      ];\n  \n      var TA = typeMapping[dataTypeIndex];\n  \n      function decodeMemoryView(handle) {\n        handle = handle >> 2;\n        var heap = HEAPU32;\n        var size = heap[handle]; // in elements\n        var data = heap[handle + 1]; // byte offset into emscripten heap\n        return new TA(heap.buffer, data, size);\n      }\n  \n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        'fromWireType': decodeMemoryView,\n        'argPackAdvance': 8,\n        'readValueFromPointer': decodeMemoryView,\n      }, {\n        ignoreDuplicateRegistrations: true,\n      });\n    }\n\n  \n  \n  \n  \n  function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n      // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\n      // undefined and false each don't write out any bytes.\n      if (!(maxBytesToWrite > 0))\n        return 0;\n  \n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n        // unit, not a Unicode code point of the character! So decode\n        // UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\n        // and https://www.ietf.org/rfc/rfc2279.txt\n        // and https://tools.ietf.org/html/rfc3629\n        var u = str.charCodeAt(i); // possibly a lead surrogate\n        if (u >= 0xD800 && u <= 0xDFFF) {\n          var u1 = str.charCodeAt(++i);\n          u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\n        }\n        if (u <= 0x7F) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 0x7FF) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 0xC0 | (u >> 6);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else if (u <= 0xFFFF) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 0xE0 | (u >> 12);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          if (u > 0x10FFFF) warnOnce('Invalid Unicode code point ' + ptrToString(u) + ' encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).');\n          heap[outIdx++] = 0xF0 | (u >> 18);\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        }\n      }\n      // Null-terminate the pointer to the buffer.\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    }\n  function stringToUTF8(str, outPtr, maxBytesToWrite) {\n      assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n      return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);\n    }\n  \n  function lengthBytesUTF8(str) {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n        // unit, not a Unicode code point of the character! So decode\n        // UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var c = str.charCodeAt(i); // possibly a lead surrogate\n        if (c <= 0x7F) {\n          len++;\n        } else if (c <= 0x7FF) {\n          len += 2;\n        } else if (c >= 0xD800 && c <= 0xDFFF) {\n          len += 4; ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    }\n  \n  var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n  \n    /**\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\n     * array that contains uint8 values, returns a copy of that string as a\n     * Javascript String object.\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\n     * @param {number} idx\n     * @param {number=} maxBytesToRead\n     * @return {string}\n     */\n  function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\n      // null terminator by itself.  Also, use the length info to avoid running tiny\n      // strings through TextDecoder, since .subarray() allocates garbage.\n      // (As a tiny code save trick, compare endPtr against endIdx using a negation,\n      // so that undefined means Infinity)\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n  \n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = '';\n      // If building with TextDecoder, we have already computed the string length\n      // above, so test loop end condition against that\n      while (idx < endPtr) {\n        // For UTF8 byte structure, see:\n        // http://en.wikipedia.org/wiki/UTF-8#Description\n        // https://www.ietf.org/rfc/rfc2279.txt\n        // https://tools.ietf.org/html/rfc3629\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xF0) == 0xE0) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          if ((u0 & 0xF8) != 0xF0) warnOnce('Invalid UTF-8 leading byte ' + ptrToString(u0) + ' encountered when deserializing a UTF-8 string in wasm memory to a JS string!');\n          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\n        }\n  \n        if (u0 < 0x10000) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 0x10000;\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n        }\n      }\n      return str;\n    }\n  \n  \n    /**\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\n     *\n     * @param {number} ptr\n     * @param {number=} maxBytesToRead - An optional length that specifies the\n     *   maximum number of bytes to read. You can omit this parameter to scan the\n     *   string until the first \u0000 byte. If maxBytesToRead is passed, and the string\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\n     * @return {string}\n     */\n  function UTF8ToString(ptr, maxBytesToRead) {\n      assert(typeof ptr == 'number');\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n    }\n  function __embind_register_std_string(rawType, name) {\n      name = readLatin1String(name);\n      var stdStringIsUTF8\n      //process only std::string bindings with UTF8 support, in contrast to e.g. std::basic_string<unsigned char>\n      = (name === \"std::string\");\n  \n      registerType(rawType, {\n        name: name,\n        'fromWireType': function(value) {\n          var length = HEAPU32[((value)>>2)];\n          var payload = value + 4;\n  \n          var str;\n          if (stdStringIsUTF8) {\n            var decodeStartPtr = payload;\n            // Looping here to support possible embedded '0' bytes\n            for (var i = 0; i <= length; ++i) {\n              var currentBytePtr = payload + i;\n              if (i == length || HEAPU8[currentBytePtr] == 0) {\n                var maxRead = currentBytePtr - decodeStartPtr;\n                var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                if (str === undefined) {\n                  str = stringSegment;\n                } else {\n                  str += String.fromCharCode(0);\n                  str += stringSegment;\n                }\n                decodeStartPtr = currentBytePtr + 1;\n              }\n            }\n          } else {\n            var a = new Array(length);\n            for (var i = 0; i < length; ++i) {\n              a[i] = String.fromCharCode(HEAPU8[payload + i]);\n            }\n            str = a.join('');\n          }\n  \n          _free(value);\n  \n          return str;\n        },\n        'toWireType': function(destructors, value) {\n          if (value instanceof ArrayBuffer) {\n            value = new Uint8Array(value);\n          }\n  \n          var length;\n          var valueIsOfTypeString = (typeof value == 'string');\n  \n          if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n            throwBindingError('Cannot pass non-string to std::string');\n          }\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            length = lengthBytesUTF8(value);\n          } else {\n            length = value.length;\n          }\n  \n          // assumes 4-byte alignment\n          var base = _malloc(4 + length + 1);\n          var ptr = base + 4;\n          HEAPU32[((base)>>2)] = length;\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            stringToUTF8(value, ptr, length + 1);\n          } else {\n            if (valueIsOfTypeString) {\n              for (var i = 0; i < length; ++i) {\n                var charCode = value.charCodeAt(i);\n                if (charCode > 255) {\n                  _free(ptr);\n                  throwBindingError('String has UTF-16 code units that do not fit in 8 bits');\n                }\n                HEAPU8[ptr + i] = charCode;\n              }\n            } else {\n              for (var i = 0; i < length; ++i) {\n                HEAPU8[ptr + i] = value[i];\n              }\n            }\n          }\n  \n          if (destructors !== null) {\n            destructors.push(_free, base);\n          }\n          return base;\n        },\n        'argPackAdvance': 8,\n        'readValueFromPointer': simpleReadValueFromPointer,\n        destructorFunction: function(ptr) { _free(ptr); },\n      });\n    }\n\n  \n  \n  \n  var UTF16Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf-16le') : undefined;;\n  function UTF16ToString(ptr, maxBytesToRead) {\n      assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');\n      var endPtr = ptr;\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\n      // null terminator by itself.\n      // Also, use the length info to avoid running tiny strings through\n      // TextDecoder, since .subarray() allocates garbage.\n      var idx = endPtr >> 1;\n      var maxIdx = idx + maxBytesToRead / 2;\n      // If maxBytesToRead is not passed explicitly, it will be undefined, and this\n      // will always evaluate to true. This saves on code size.\n      while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;\n      endPtr = idx << 1;\n  \n      if (endPtr - ptr > 32 && UTF16Decoder)\n        return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n  \n      // Fallback: decode without UTF16Decoder\n      var str = '';\n  \n      // If maxBytesToRead is not passed explicitly, it will be undefined, and the\n      // for-loop's condition will always evaluate to true. The loop is then\n      // terminated on the first null char.\n      for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n        var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];\n        if (codeUnit == 0) break;\n        // fromCharCode constructs a character from a UTF-16 code unit, so we can\n        // pass the UTF16 string right through.\n        str += String.fromCharCode(codeUnit);\n      }\n  \n      return str;\n    }\n  \n  function stringToUTF16(str, outPtr, maxBytesToWrite) {\n      assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');\n      assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n      // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n      if (maxBytesToWrite === undefined) {\n        maxBytesToWrite = 0x7FFFFFFF;\n      }\n      if (maxBytesToWrite < 2) return 0;\n      maxBytesToWrite -= 2; // Null terminator.\n      var startPtr = outPtr;\n      var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;\n      for (var i = 0; i < numCharsToWrite; ++i) {\n        // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\n        var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n        HEAP16[((outPtr)>>1)] = codeUnit;\n        outPtr += 2;\n      }\n      // Null-terminate the pointer to the HEAP.\n      HEAP16[((outPtr)>>1)] = 0;\n      return outPtr - startPtr;\n    }\n  \n  function lengthBytesUTF16(str) {\n      return str.length*2;\n    }\n  \n  function UTF32ToString(ptr, maxBytesToRead) {\n      assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');\n      var i = 0;\n  \n      var str = '';\n      // If maxBytesToRead is not passed explicitly, it will be undefined, and this\n      // will always evaluate to true. This saves on code size.\n      while (!(i >= maxBytesToRead / 4)) {\n        var utf32 = HEAP32[(((ptr)+(i*4))>>2)];\n        if (utf32 == 0) break;\n        ++i;\n        // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        if (utf32 >= 0x10000) {\n          var ch = utf32 - 0x10000;\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n        } else {\n          str += String.fromCharCode(utf32);\n        }\n      }\n      return str;\n    }\n  \n  function stringToUTF32(str, outPtr, maxBytesToWrite) {\n      assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');\n      assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n      // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n      if (maxBytesToWrite === undefined) {\n        maxBytesToWrite = 0x7FFFFFFF;\n      }\n      if (maxBytesToWrite < 4) return 0;\n      var startPtr = outPtr;\n      var endPtr = startPtr + maxBytesToWrite - 4;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n        if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {\n          var trailSurrogate = str.charCodeAt(++i);\n          codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);\n        }\n        HEAP32[((outPtr)>>2)] = codeUnit;\n        outPtr += 4;\n        if (outPtr + 4 > endPtr) break;\n      }\n      // Null-terminate the pointer to the HEAP.\n      HEAP32[((outPtr)>>2)] = 0;\n      return outPtr - startPtr;\n    }\n  \n  function lengthBytesUTF32(str) {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var codeUnit = str.charCodeAt(i);\n        if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.\n        len += 4;\n      }\n  \n      return len;\n    }\n  function __embind_register_std_wstring(rawType, charSize, name) {\n      name = readLatin1String(name);\n      var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n      if (charSize === 2) {\n        decodeString = UTF16ToString;\n        encodeString = stringToUTF16;\n        lengthBytesUTF = lengthBytesUTF16;\n        getHeap = () => HEAPU16;\n        shift = 1;\n      } else if (charSize === 4) {\n        decodeString = UTF32ToString;\n        encodeString = stringToUTF32;\n        lengthBytesUTF = lengthBytesUTF32;\n        getHeap = () => HEAPU32;\n        shift = 2;\n      }\n      registerType(rawType, {\n        name: name,\n        'fromWireType': function(value) {\n          // Code mostly taken from _embind_register_std_string fromWireType\n          var length = HEAPU32[value >> 2];\n          var HEAP = getHeap();\n          var str;\n  \n          var decodeStartPtr = value + 4;\n          // Looping here to support possible embedded '0' bytes\n          for (var i = 0; i <= length; ++i) {\n            var currentBytePtr = value + 4 + i * charSize;\n            if (i == length || HEAP[currentBytePtr >> shift] == 0) {\n              var maxReadBytes = currentBytePtr - decodeStartPtr;\n              var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n              if (str === undefined) {\n                str = stringSegment;\n              } else {\n                str += String.fromCharCode(0);\n                str += stringSegment;\n              }\n              decodeStartPtr = currentBytePtr + charSize;\n            }\n          }\n  \n          _free(value);\n  \n          return str;\n        },\n        'toWireType': function(destructors, value) {\n          if (!(typeof value == 'string')) {\n            throwBindingError('Cannot pass non-string to C++ string type ' + name);\n          }\n  \n          // assumes 4-byte alignment\n          var length = lengthBytesUTF(value);\n          var ptr = _malloc(4 + length + charSize);\n          HEAPU32[ptr >> 2] = length >> shift;\n  \n          encodeString(value, ptr + 4, length + charSize);\n  \n          if (destructors !== null) {\n            destructors.push(_free, ptr);\n          }\n          return ptr;\n        },\n        'argPackAdvance': 8,\n        'readValueFromPointer': simpleReadValueFromPointer,\n        destructorFunction: function(ptr) { _free(ptr); },\n      });\n    }\n\n  \n  function __embind_register_void(rawType, name) {\n      name = readLatin1String(name);\n      registerType(rawType, {\n          isVoid: true, // void return values can be optimized out sometimes\n          name: name,\n          'argPackAdvance': 0,\n          'fromWireType': function() {\n              return undefined;\n          },\n          'toWireType': function(destructors, o) {\n              // TODO: assert if anything else is given?\n              return undefined;\n          },\n      });\n    }\n\n  function _emscripten_memcpy_big(dest, src, num) {\n      HEAPU8.copyWithin(dest, src, src + num);\n    }\n\n  function getHeapMax() {\n      return HEAPU8.length;\n    }\n  \n  function abortOnCannotGrowMemory(requestedSize) {\n      abort('Cannot enlarge memory arrays to size ' + requestedSize + ' bytes (OOM). Either (1) compile with -sINITIAL_MEMORY=X with X higher than the current value ' + HEAP8.length + ', (2) compile with -sALLOW_MEMORY_GROWTH which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with -sABORTING_MALLOC=0');\n    }\n  function _emscripten_resize_heap(requestedSize) {\n      var oldSize = HEAPU8.length;\n      requestedSize = requestedSize >>> 0;\n      abortOnCannotGrowMemory(requestedSize);\n    }\n\n  var SYSCALLS = {varargs:undefined,get:function() {\n        assert(SYSCALLS.varargs != undefined);\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];\n        return ret;\n      },getStr:function(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      }};\n  function _fd_close(fd) {\n      abort('fd_close called without SYSCALLS_REQUIRE_FILESYSTEM');\n    }\n\n  function convertI32PairToI53Checked(lo, hi) {\n      assert(lo == (lo >>> 0) || lo == (lo|0)); // lo should either be a i32 or a u32\n      assert(hi === (hi|0));                    // hi should be a i32\n      return ((hi + 0x200000) >>> 0 < 0x400001 - !!lo) ? (lo >>> 0) + hi * 4294967296 : NaN;\n    }\n  \n  \n  \n  \n  function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n      return 70;\n    }\n\n  var printCharBuffers = [null,[],[]];\n  \n  function printChar(stream, curr) {\n      var buffer = printCharBuffers[stream];\n      assert(buffer);\n      if (curr === 0 || curr === 10) {\n        (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n        buffer.length = 0;\n      } else {\n        buffer.push(curr);\n      }\n    }\n  \n  function flush_NO_FILESYSTEM() {\n      // flush anything remaining in the buffers during shutdown\n      _fflush(0);\n      if (printCharBuffers[1].length) printChar(1, 10);\n      if (printCharBuffers[2].length) printChar(2, 10);\n    }\n  \n  \n  function _fd_write(fd, iov, iovcnt, pnum) {\n      // hack to support printf in SYSCALLS_REQUIRE_FILESYSTEM=0\n      var num = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[((iov)>>2)];\n        var len = HEAPU32[(((iov)+(4))>>2)];\n        iov += 8;\n        for (var j = 0; j < len; j++) {\n          printChar(fd, HEAPU8[ptr+j]);\n        }\n        num += len;\n      }\n      HEAPU32[((pnum)>>2)] = num;\n      return 0;\n    }\n\n  function getCFunc(ident) {\n      var func = Module['_' + ident]; // closure exported function\n      assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');\n      return func;\n    }\n  \n  function writeArrayToMemory(array, buffer) {\n      assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)')\n      HEAP8.set(array, buffer);\n    }\n  \n  \n  function stringToUTF8OnStack(str) {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = stackAlloc(size);\n      stringToUTF8(str, ret, size);\n      return ret;\n    }\n  \n  \n    /**\n     * @param {string|null=} returnType\n     * @param {Array=} argTypes\n     * @param {Arguments|Array=} args\n     * @param {Object=} opts\n     */\n  function ccall(ident, returnType, argTypes, args, opts) {\n      // For fast lookup of conversion functions\n      var toC = {\n        'string': (str) => {\n          var ret = 0;\n          if (str !== null && str !== undefined && str !== 0) { // null string\n            // at most 4 bytes per UTF-8 code point, +1 for the trailing '\\0'\n            ret = stringToUTF8OnStack(str);\n          }\n          return ret;\n        },\n        'array': (arr) => {\n          var ret = stackAlloc(arr.length);\n          writeArrayToMemory(arr, ret);\n          return ret;\n        }\n      };\n  \n      function convertReturnValue(ret) {\n        if (returnType === 'string') {\n          \n          return UTF8ToString(ret);\n        }\n        if (returnType === 'boolean') return Boolean(ret);\n        return ret;\n      }\n  \n      var func = getCFunc(ident);\n      var cArgs = [];\n      var stack = 0;\n      assert(returnType !== 'array', 'Return type should not be \"array\".');\n      if (args) {\n        for (var i = 0; i < args.length; i++) {\n          var converter = toC[argTypes[i]];\n          if (converter) {\n            if (stack === 0) stack = stackSave();\n            cArgs[i] = converter(args[i]);\n          } else {\n            cArgs[i] = args[i];\n          }\n        }\n      }\n      var ret = func.apply(null, cArgs);\n      function onDone(ret) {\n        if (stack !== 0) stackRestore(stack);\n        return convertReturnValue(ret);\n      }\n  \n      ret = onDone(ret);\n      return ret;\n    }\n\n  \n  \n    /**\n     * @param {string=} returnType\n     * @param {Array=} argTypes\n     * @param {Object=} opts\n     */\n  function cwrap(ident, returnType, argTypes, opts) {\n      return function() {\n        return ccall(ident, returnType, argTypes, arguments, opts);\n      }\n    }\nembind_init_charCodes();\nBindingError = Module['BindingError'] = extendError(Error, 'BindingError');;\nInternalError = Module['InternalError'] = extendError(Error, 'InternalError');;\ninit_emval();;\nUnboundTypeError = Module['UnboundTypeError'] = extendError(Error, 'UnboundTypeError');;\nfunction checkIncomingModuleAPI() {\n  ignoredModuleProp('fetchSettings');\n}\nvar wasmImports = {\n  \"_embind_register_bigint\": __embind_register_bigint,\n  \"_embind_register_bool\": __embind_register_bool,\n  \"_embind_register_emval\": __embind_register_emval,\n  \"_embind_register_float\": __embind_register_float,\n  \"_embind_register_function\": __embind_register_function,\n  \"_embind_register_integer\": __embind_register_integer,\n  \"_embind_register_memory_view\": __embind_register_memory_view,\n  \"_embind_register_std_string\": __embind_register_std_string,\n  \"_embind_register_std_wstring\": __embind_register_std_wstring,\n  \"_embind_register_void\": __embind_register_void,\n  \"emscripten_memcpy_big\": _emscripten_memcpy_big,\n  \"emscripten_resize_heap\": _emscripten_resize_heap,\n  \"fd_close\": _fd_close,\n  \"fd_seek\": _fd_seek,\n  \"fd_write\": _fd_write\n};\nvar asm = createWasm();\n/** @type {function(...*):?} */\nvar ___wasm_call_ctors = createExportWrapper(\"__wasm_call_ctors\");\n/** @type {function(...*):?} */\nvar ___getTypeName = Module[\"___getTypeName\"] = createExportWrapper(\"__getTypeName\");\n/** @type {function(...*):?} */\nvar __embind_initialize_bindings = Module[\"__embind_initialize_bindings\"] = createExportWrapper(\"_embind_initialize_bindings\");\n/** @type {function(...*):?} */\nvar ___errno_location = createExportWrapper(\"__errno_location\");\n/** @type {function(...*):?} */\nvar _fflush = Module[\"_fflush\"] = createExportWrapper(\"fflush\");\n/** @type {function(...*):?} */\nvar _malloc = createExportWrapper(\"malloc\");\n/** @type {function(...*):?} */\nvar _free = createExportWrapper(\"free\");\n/** @type {function(...*):?} */\nvar _emscripten_stack_init = function() {\n  return (_emscripten_stack_init = Module[\"asm\"][\"emscripten_stack_init\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_free = function() {\n  return (_emscripten_stack_get_free = Module[\"asm\"][\"emscripten_stack_get_free\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_base = function() {\n  return (_emscripten_stack_get_base = Module[\"asm\"][\"emscripten_stack_get_base\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_end = function() {\n  return (_emscripten_stack_get_end = Module[\"asm\"][\"emscripten_stack_get_end\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar stackSave = createExportWrapper(\"stackSave\");\n/** @type {function(...*):?} */\nvar stackRestore = createExportWrapper(\"stackRestore\");\n/** @type {function(...*):?} */\nvar stackAlloc = createExportWrapper(\"stackAlloc\");\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_current = function() {\n  return (_emscripten_stack_get_current = Module[\"asm\"][\"emscripten_stack_get_current\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = createExportWrapper(\"dynCall_jiji\");\n\n\n// include: postamble.js\n// === Auto-generated postamble setup entry stuff ===\n\nModule[\"ccall\"] = ccall;\nModule[\"cwrap\"] = cwrap;\nvar missingLibrarySymbols = [\n  'zeroMemory',\n  'exitJS',\n  'emscripten_realloc_buffer',\n  'isLeapYear',\n  'ydayFromDate',\n  'arraySum',\n  'addDays',\n  'setErrNo',\n  'inetPton4',\n  'inetNtop4',\n  'inetPton6',\n  'inetNtop6',\n  'readSockaddr',\n  'writeSockaddr',\n  'getHostByName',\n  'initRandomFill',\n  'randomFill',\n  'traverseStack',\n  'getCallstack',\n  'emscriptenLog',\n  'convertPCtoSourceLocation',\n  'readEmAsmArgs',\n  'jstoi_q',\n  'jstoi_s',\n  'getExecutableName',\n  'listenOnce',\n  'autoResumeAudioContext',\n  'handleException',\n  'runtimeKeepalivePush',\n  'runtimeKeepalivePop',\n  'callUserCallback',\n  'maybeExit',\n  'safeSetTimeout',\n  'asmjsMangle',\n  'asyncLoad',\n  'alignMemory',\n  'mmapAlloc',\n  'getNativeTypeSize',\n  'STACK_SIZE',\n  'STACK_ALIGN',\n  'POINTER_SIZE',\n  'ASSERTIONS',\n  'writeI53ToI64',\n  'writeI53ToI64Clamped',\n  'writeI53ToI64Signaling',\n  'writeI53ToU64Clamped',\n  'writeI53ToU64Signaling',\n  'readI53FromI64',\n  'readI53FromU64',\n  'convertI32PairToI53',\n  'convertU32PairToI53',\n  'uleb128Encode',\n  'sigToWasmTypes',\n  'generateFuncType',\n  'convertJsFunctionToWasm',\n  'getEmptyTableSlot',\n  'updateTableMap',\n  'getFunctionAddress',\n  'addFunction',\n  'removeFunction',\n  'reallyNegative',\n  'unSign',\n  'strLen',\n  'reSign',\n  'formatString',\n  'intArrayFromString',\n  'intArrayToString',\n  'AsciiToString',\n  'stringToAscii',\n  'stringToNewUTF8',\n  'getSocketFromFD',\n  'getSocketAddress',\n  'registerKeyEventCallback',\n  'maybeCStringToJsString',\n  'findEventTarget',\n  'findCanvasEventTarget',\n  'getBoundingClientRect',\n  'fillMouseEventData',\n  'registerMouseEventCallback',\n  'registerWheelEventCallback',\n  'registerUiEventCallback',\n  'registerFocusEventCallback',\n  'fillDeviceOrientationEventData',\n  'registerDeviceOrientationEventCallback',\n  'fillDeviceMotionEventData',\n  'registerDeviceMotionEventCallback',\n  'screenOrientation',\n  'fillOrientationChangeEventData',\n  'registerOrientationChangeEventCallback',\n  'fillFullscreenChangeEventData',\n  'registerFullscreenChangeEventCallback',\n  'JSEvents_requestFullscreen',\n  'JSEvents_resizeCanvasForFullscreen',\n  'registerRestoreOldStyle',\n  'hideEverythingExceptGivenElement',\n  'restoreHiddenElements',\n  'setLetterbox',\n  'softFullscreenResizeWebGLRenderTarget',\n  'doRequestFullscreen',\n  'fillPointerlockChangeEventData',\n  'registerPointerlockChangeEventCallback',\n  'registerPointerlockErrorEventCallback',\n  'requestPointerLock',\n  'fillVisibilityChangeEventData',\n  'registerVisibilityChangeEventCallback',\n  'registerTouchEventCallback',\n  'fillGamepadEventData',\n  'registerGamepadEventCallback',\n  'registerBeforeUnloadEventCallback',\n  'fillBatteryEventData',\n  'battery',\n  'registerBatteryEventCallback',\n  'setCanvasElementSize',\n  'getCanvasElementSize',\n  'demangle',\n  'demangleAll',\n  'jsStackTrace',\n  'stackTrace',\n  'getEnvStrings',\n  'checkWasiClock',\n  'wasiRightsToMuslOFlags',\n  'wasiOFlagsToMuslOFlags',\n  'createDyncallWrapper',\n  'setImmediateWrapped',\n  'clearImmediateWrapped',\n  'polyfillSetImmediate',\n  'getPromise',\n  'makePromise',\n  'makePromiseCallback',\n  'ExceptionInfo',\n  'exception_addRef',\n  'exception_decRef',\n  'setMainLoop',\n  '_setNetworkCallback',\n  'heapObjectForWebGLType',\n  'heapAccessShiftForWebGLHeap',\n  'webgl_enable_ANGLE_instanced_arrays',\n  'webgl_enable_OES_vertex_array_object',\n  'webgl_enable_WEBGL_draw_buffers',\n  'webgl_enable_WEBGL_multi_draw',\n  'emscriptenWebGLGet',\n  'computeUnpackAlignedImageSize',\n  'colorChannelsInGlTextureFormat',\n  'emscriptenWebGLGetTexPixelData',\n  '__glGenObject',\n  'emscriptenWebGLGetUniform',\n  'webglGetUniformLocation',\n  'webglPrepareUniformLocationsBeforeFirstUse',\n  'webglGetLeftBracePos',\n  'emscriptenWebGLGetVertexAttrib',\n  '__glGetActiveAttribOrUniform',\n  'writeGLArray',\n  'registerWebGlEventCallback',\n  'runAndAbortIfError',\n  'SDL_unicode',\n  'SDL_ttfContext',\n  'SDL_audio',\n  'GLFW_Window',\n  'ALLOC_NORMAL',\n  'ALLOC_STACK',\n  'allocate',\n  'writeStringToMemory',\n  'writeAsciiToMemory',\n  'init_embind',\n  'getBasestPointer',\n  'registerInheritedInstance',\n  'unregisterInheritedInstance',\n  'getInheritedInstance',\n  'getInheritedInstanceCount',\n  'getLiveInheritedInstances',\n  'requireRegisteredType',\n  'enumReadValueFromPointer',\n  'genericPointerToWireType',\n  'constNoSmartPtrRawPointerToWireType',\n  'nonConstNoSmartPtrRawPointerToWireType',\n  'init_RegisteredPointer',\n  'RegisteredPointer',\n  'RegisteredPointer_getPointee',\n  'RegisteredPointer_destructor',\n  'RegisteredPointer_deleteObject',\n  'RegisteredPointer_fromWireType',\n  'runDestructor',\n  'releaseClassHandle',\n  'detachFinalizer',\n  'attachFinalizer',\n  'makeClassHandle',\n  'init_ClassHandle',\n  'ClassHandle',\n  'ClassHandle_isAliasOf',\n  'throwInstanceAlreadyDeleted',\n  'ClassHandle_clone',\n  'ClassHandle_delete',\n  'ClassHandle_isDeleted',\n  'ClassHandle_deleteLater',\n  'flushPendingDeletes',\n  'setDelayFunction',\n  'RegisteredClass',\n  'shallowCopyInternalPointer',\n  'downcastPointer',\n  'upcastPointer',\n  'validateThis',\n  'getStringOrSymbol',\n  'craftEmvalAllocator',\n  'emval_get_global',\n  'emval_lookupTypes',\n  'emval_allocateDestructors',\n  'emval_addMethodCaller',\n];\nmissingLibrarySymbols.forEach(missingLibrarySymbol)\n\nvar unexportedSymbols = [\n  'run',\n  'addOnPreRun',\n  'addOnInit',\n  'addOnPreMain',\n  'addOnExit',\n  'addOnPostRun',\n  'addRunDependency',\n  'removeRunDependency',\n  'FS_createFolder',\n  'FS_createPath',\n  'FS_createDataFile',\n  'FS_createPreloadedFile',\n  'FS_createLazyFile',\n  'FS_createLink',\n  'FS_createDevice',\n  'FS_unlink',\n  'out',\n  'err',\n  'callMain',\n  'abort',\n  'keepRuntimeAlive',\n  'wasmMemory',\n  'stackAlloc',\n  'stackSave',\n  'stackRestore',\n  'getTempRet0',\n  'setTempRet0',\n  'writeStackCookie',\n  'checkStackCookie',\n  'ptrToString',\n  'getHeapMax',\n  'abortOnCannotGrowMemory',\n  'ENV',\n  'MONTH_DAYS_REGULAR',\n  'MONTH_DAYS_LEAP',\n  'MONTH_DAYS_REGULAR_CUMULATIVE',\n  'MONTH_DAYS_LEAP_CUMULATIVE',\n  'ERRNO_CODES',\n  'ERRNO_MESSAGES',\n  'DNS',\n  'Protocols',\n  'Sockets',\n  'timers',\n  'warnOnce',\n  'UNWIND_CACHE',\n  'readEmAsmArgsArray',\n  'dynCallLegacy',\n  'getDynCaller',\n  'dynCall',\n  'HandleAllocator',\n  'convertI32PairToI53Checked',\n  'getCFunc',\n  'freeTableIndexes',\n  'functionsInTableMap',\n  'setValue',\n  'getValue',\n  'PATH',\n  'PATH_FS',\n  'UTF8Decoder',\n  'UTF8ArrayToString',\n  'UTF8ToString',\n  'stringToUTF8Array',\n  'stringToUTF8',\n  'lengthBytesUTF8',\n  'UTF16Decoder',\n  'UTF16ToString',\n  'stringToUTF16',\n  'lengthBytesUTF16',\n  'UTF32ToString',\n  'stringToUTF32',\n  'lengthBytesUTF32',\n  'stringToUTF8OnStack',\n  'writeArrayToMemory',\n  'SYSCALLS',\n  'JSEvents',\n  'specialHTMLTargets',\n  'currentFullscreenStrategy',\n  'restoreOldWindowedStyle',\n  'ExitStatus',\n  'flush_NO_FILESYSTEM',\n  'dlopenMissingError',\n  'promiseMap',\n  'uncaughtExceptionCount',\n  'exceptionLast',\n  'exceptionCaught',\n  'Browser',\n  'wget',\n  'FS',\n  'MEMFS',\n  'TTY',\n  'PIPEFS',\n  'SOCKFS',\n  'tempFixedLengthArray',\n  'miniTempWebGLFloatBuffers',\n  'miniTempWebGLIntBuffers',\n  'GL',\n  'emscripten_webgl_power_preferences',\n  'AL',\n  'GLUT',\n  'EGL',\n  'GLEW',\n  'IDBStore',\n  'SDL',\n  'SDL_gfx',\n  'GLFW',\n  'allocateUTF8',\n  'allocateUTF8OnStack',\n  'InternalError',\n  'BindingError',\n  'UnboundTypeError',\n  'PureVirtualError',\n  'throwInternalError',\n  'throwBindingError',\n  'throwUnboundTypeError',\n  'ensureOverloadTable',\n  'exposePublicSymbol',\n  'replacePublicSymbol',\n  'extendError',\n  'createNamedFunction',\n  'embindRepr',\n  'registeredInstances',\n  'registeredTypes',\n  'awaitingDependencies',\n  'typeDependencies',\n  'registeredPointers',\n  'registerType',\n  'whenDependentTypesAreResolved',\n  'embind_charCodes',\n  'embind_init_charCodes',\n  'readLatin1String',\n  'getTypeName',\n  'heap32VectorToArray',\n  'getShiftFromSize',\n  'integerReadValueFromPointer',\n  'floatReadValueFromPointer',\n  'simpleReadValueFromPointer',\n  'runDestructors',\n  'newFunc',\n  'craftInvokerFunction',\n  'embind__requireFunction',\n  'tupleRegistrations',\n  'structRegistrations',\n  'finalizationRegistry',\n  'detachFinalizer_deps',\n  'deletionQueue',\n  'delayFunction',\n  'char_0',\n  'char_9',\n  'makeLegalFunctionName',\n  'emval_handles',\n  'emval_symbols',\n  'init_emval',\n  'count_emval_handles',\n  'Emval',\n  'emval_newers',\n  'emval_methodCallers',\n  'emval_registeredMethods',\n];\nunexportedSymbols.forEach(unexportedRuntimeSymbol);\n\n\n\nvar calledRun;\n\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!calledRun) run();\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n};\n\nfunction stackCheckInit() {\n  // This is normally called automatically during __wasm_call_ctors but need to\n  // get these values before even running any of the ctors so we call it redundantly\n  // here.\n  _emscripten_stack_init();\n  // TODO(sbc): Move writeStackCookie to native to to avoid this.\n  writeStackCookie();\n}\n\nfunction run() {\n\n  if (runDependencies > 0) {\n    return;\n  }\n\n    stackCheckInit();\n\n  preRun();\n\n  // a preRun added a dependency, run will be called later\n  if (runDependencies > 0) {\n    return;\n  }\n\n  function doRun() {\n    // run may have just been called through dependencies being fulfilled just in this very frame,\n    // or while the async setStatus time below was happening\n    if (calledRun) return;\n    calledRun = true;\n    Module['calledRun'] = true;\n\n    if (ABORT) return;\n\n    initRuntime();\n\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n    assert(!Module['_main'], 'compiled without a main, but one is present. if you added it from JS, use Module[\"onRuntimeInitialized\"]');\n\n    postRun();\n  }\n\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function() {\n      setTimeout(function() {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else\n  {\n    doRun();\n  }\n  checkStackCookie();\n}\n\nfunction checkUnflushedContent() {\n  // Compiler settings do not allow exiting the runtime, so flushing\n  // the streams is not possible. but in ASSERTIONS mode we check\n  // if there was something to flush, and if so tell the user they\n  // should request that the runtime be exitable.\n  // Normally we would not even include flush() at all, but in ASSERTIONS\n  // builds we do so just for this check, and here we see if there is any\n  // content to flush, that is, we check if there would have been\n  // something a non-ASSERTIONS build would have not seen.\n  // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0\n  // mode (which has its own special function for this; otherwise, all\n  // the code is inside libc)\n  var oldOut = out;\n  var oldErr = err;\n  var has = false;\n  out = err = (x) => {\n    has = true;\n  }\n  try { // it doesn't matter if it fails\n    flush_NO_FILESYSTEM();\n  } catch(e) {}\n  out = oldOut;\n  err = oldErr;\n  if (has) {\n    warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.');\n    warnOnce('(this may also be due to not including full filesystem support - try building with -sFORCE_FILESYSTEM)');\n  }\n}\n\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\n\nrun();\n\n\n// end include: postamble.js\n"],"mappings":"wIAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAI,CAAAA,MAAM,CAAG,MAAO,CAAAA,MAAM,EAAI,WAAW,CAAGA,MAAM,CAAG,CAAC,CAAC,CAEvD;AACA;AAGA;AACA;AACA;AACA;AACA;AACA,GAAI,CAAAC,eAAe,CAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAAEH,MAAM,CAAC,CAE/C,GAAI,CAAAI,UAAU,CAAG,EAAE,CACnB,GAAI,CAAAC,WAAW,CAAG,gBAAgB,CAClC,GAAI,CAAAC,KAAK,CAAG,SAAAA,MAACC,MAAM,CAAEC,OAAO,CAAK,CAC/B,KAAM,CAAAA,OAAO,CACf,CAAC,CAED;AACA;AAEA;AACA,GAAI,CAAAC,kBAAkB,CAAG,MAAO,CAAAC,MAAM,EAAI,QAAQ,CAClD,GAAI,CAAAC,qBAAqB,CAAG,MAAO,CAAAC,aAAa,EAAI,UAAU,CAC9D;AACA;AACA,GAAI,CAAAC,mBAAmB,CAAG,MAAO,CAAAC,OAAO,EAAI,QAAQ,EAAI,MAAO,CAAAA,OAAO,CAACC,QAAQ,EAAI,QAAQ,EAAI,MAAO,CAAAD,OAAO,CAACC,QAAQ,CAACC,IAAI,EAAI,QAAQ,CACvI,GAAI,CAAAC,oBAAoB,CAAG,CAACR,kBAAkB,EAAI,CAACI,mBAAmB,EAAI,CAACF,qBAAqB,CAEhG,GAAIX,MAAM,CAAC,aAAa,CAAC,CAAE,CACzB,KAAM,IAAI,CAAAkB,KAAK,CAAC,kKAAkK,CAAC,CACrL,CAEA;AACA,GAAI,CAAAC,eAAe,CAAG,EAAE,CACxB,QAAS,CAAAC,UAAUA,CAACC,IAAI,CAAE,CACxB,GAAIrB,MAAM,CAAC,YAAY,CAAC,CAAE,CACxB,MAAO,CAAAA,MAAM,CAAC,YAAY,CAAC,CAACqB,IAAI,CAAEF,eAAe,CAAC,CACpD,CACA,MAAO,CAAAA,eAAe,CAAGE,IAAI,CAC/B,CAEA;AACA,GAAI,CAAAC,KAAK,CACLC,SAAS,CACTC,UAAU,CACVC,cAAc,CAElB,GAAIZ,mBAAmB,CAAE,CACvB,GAAI,MAAO,CAAAC,OAAO,EAAI,WAAW,EAAI,CAACA,OAAO,CAACY,OAAO,EAAIZ,OAAO,CAACY,OAAO,CAACC,IAAI,GAAK,MAAM,CAAE,KAAM,IAAI,CAAAT,KAAK,CAAC,wLAAwL,CAAC,CAEnS,GAAI,CAAAU,WAAW,CAAGd,OAAO,CAACC,QAAQ,CAACC,IAAI,CACvC,GAAI,CAAAa,cAAc,CAAGD,WAAW,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CACvDF,cAAc,CAAIA,cAAc,CAAC,CAAC,CAAC,CAAG,KAAK,CAAKA,cAAc,CAAC,CAAC,CAAC,CAAG,GAAI,CAAIA,cAAc,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAG,CAAE,CAChH,GAAI,CAAAE,UAAU,CAAG,MAAM,CACvB,GAAIH,cAAc,CAAG,MAAM,CAAE,CAC3B,KAAM,IAAI,CAAAX,KAAK,CAAC,sEAAsE,CAAGU,WAAW,CAAG,GAAG,CAAC,CAC7G,CAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAI,CAAAK,EAAE,CAAGC,OAAO,CAAC,IAAI,CAAC,CACtB,GAAI,CAAAC,QAAQ,CAAGD,OAAO,CAAC,MAAM,CAAC,CAE9B,GAAIvB,qBAAqB,CAAE,CACzBQ,eAAe,CAAGgB,QAAQ,CAACC,OAAO,CAACjB,eAAe,CAAC,CAAG,GAAG,CAC3D,CAAC,IAAM,CACLA,eAAe,CAAGkB,SAAS,CAAG,GAAG,CACnC,CAEF;AACAf,KAAK,CAAG,SAAAA,MAACgB,QAAQ,CAAEC,MAAM,CAAK,CAC5B;AACA;AACAD,QAAQ,CAAGE,SAAS,CAACF,QAAQ,CAAC,CAAG,GAAI,CAAAG,GAAG,CAACH,QAAQ,CAAC,CAAGH,QAAQ,CAACO,SAAS,CAACJ,QAAQ,CAAC,CACjF,MAAO,CAAAL,EAAE,CAACU,YAAY,CAACL,QAAQ,CAAEC,MAAM,CAAGK,SAAS,CAAG,MAAM,CAAC,CAC/D,CAAC,CAEDpB,UAAU,CAAG,SAAAA,WAACc,QAAQ,CAAK,CACzB,GAAI,CAAAO,GAAG,CAAGvB,KAAK,CAACgB,QAAQ,CAAE,IAAI,CAAC,CAC/B,GAAI,CAACO,GAAG,CAACC,MAAM,CAAE,CACfD,GAAG,CAAG,GAAI,CAAAE,UAAU,CAACF,GAAG,CAAC,CAC3B,CACAG,MAAM,CAACH,GAAG,CAACC,MAAM,CAAC,CAClB,MAAO,CAAAD,GAAG,CACZ,CAAC,CAEDtB,SAAS,CAAG,SAAAA,UAACe,QAAQ,CAAEW,MAAM,CAAEC,OAAO,CAAK,CACzC;AACAZ,QAAQ,CAAGE,SAAS,CAACF,QAAQ,CAAC,CAAG,GAAI,CAAAG,GAAG,CAACH,QAAQ,CAAC,CAAGH,QAAQ,CAACO,SAAS,CAACJ,QAAQ,CAAC,CACjFL,EAAE,CAACkB,QAAQ,CAACb,QAAQ,CAAE,SAASc,GAAG,CAAEC,IAAI,CAAE,CACxC,GAAID,GAAG,CAAEF,OAAO,CAACE,GAAG,CAAC,CAAC,IACjB,CAAAH,MAAM,CAACI,IAAI,CAACP,MAAM,CAAC,CAC1B,CAAC,CAAC,CACJ,CAAC,CAED;AACE,GAAI,CAAC9C,MAAM,CAAC,aAAa,CAAC,EAAIc,OAAO,CAACwC,IAAI,CAACC,MAAM,CAAG,CAAC,CAAE,CACrDlD,WAAW,CAAGS,OAAO,CAACwC,IAAI,CAAC,CAAC,CAAC,CAACE,OAAO,CAAC,KAAK,CAAE,GAAG,CAAC,CACnD,CAEApD,UAAU,CAAGU,OAAO,CAACwC,IAAI,CAACvB,KAAK,CAAC,CAAC,CAAC,CAElC,GAAI,MAAO,CAAA0B,MAAM,EAAI,WAAW,CAAE,CAChCA,MAAM,CAAC,SAAS,CAAC,CAAGzD,MAAM,CAC5B,CAEAc,OAAO,CAAC4C,EAAE,CAAC,mBAAmB,CAAE,SAASC,EAAE,CAAE,CAC3C;AACA,GAAIA,EAAE,GAAK,QAAQ,EAAI,EAAEA,EAAE,WAAY,CAAAC,UAAU,CAAC,EAAI,EAAED,EAAE,CAACE,OAAO,WAAY,CAAAD,UAAU,CAAC,CAAE,CACzF,KAAM,CAAAD,EAAE,CACV,CACF,CAAC,CAAC,CAEF;AACA;AACA;AACA;AACA;AACA,GAAI,CAAAG,SAAS,CAAGhD,OAAO,CAACC,QAAQ,CAACC,IAAI,CAACc,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACnD,GAAIgC,SAAS,CAAG,EAAE,CAAE,CAClBhD,OAAO,CAAC4C,EAAE,CAAC,oBAAoB,CAAE,SAASK,MAAM,CAAE,CAAE,KAAM,CAAAA,MAAM,CAAE,CAAC,CAAC,CACtE,CAEAzD,KAAK,CAAG,SAAAA,MAACC,MAAM,CAAEC,OAAO,CAAK,CAC3BM,OAAO,CAACkD,QAAQ,CAAGzD,MAAM,CACzB,KAAM,CAAAC,OAAO,CACf,CAAC,CAEDR,MAAM,CAAC,SAAS,CAAC,CAAG,UAAY,CAAE,MAAO,4BAA4B,CAAE,CAAC,CAE1E,CAAC,IACD,IAAIiB,oBAAoB,CAAE,CAExB,GAAK,MAAO,CAAAH,OAAO,EAAI,QAAQ,EAAI,MAAO,CAAAoB,OAAO,GAAK,UAAU,EAAK,MAAO,CAAAxB,MAAM,EAAI,QAAQ,EAAI,MAAO,CAAAE,aAAa,EAAI,UAAU,CAAE,KAAM,IAAI,CAAAM,KAAK,CAAC,wLAAwL,CAAC,CAE/U,GAAI,MAAO,CAAA+C,IAAI,EAAI,WAAW,CAAE,CAC9B3C,KAAK,CAAG,QAAS,CAAA4C,UAAUA,CAACC,CAAC,CAAE,CAC7B,MAAO,CAAAF,IAAI,CAACE,CAAC,CAAC,CAChB,CAAC,CACH,CAEA3C,UAAU,CAAG,QAAS,CAAAA,UAAUA,CAAC2C,CAAC,CAAE,CAClC,GAAI,CAAAd,IAAI,CACR,GAAI,MAAO,CAAAe,UAAU,EAAI,UAAU,CAAE,CACnC,MAAO,IAAI,CAAArB,UAAU,CAACqB,UAAU,CAACD,CAAC,CAAC,CAAC,CACtC,CACAd,IAAI,CAAGY,IAAI,CAACE,CAAC,CAAE,QAAQ,CAAC,CACxBnB,MAAM,CAAC,MAAO,CAAAK,IAAI,EAAI,QAAQ,CAAC,CAC/B,MAAO,CAAAA,IAAI,CACb,CAAC,CAED9B,SAAS,CAAG,QAAS,CAAAA,SAASA,CAAC4C,CAAC,CAAElB,MAAM,CAAEC,OAAO,CAAE,CACjDmB,UAAU,CAAC,iBAAM,CAAApB,MAAM,CAACzB,UAAU,CAAC2C,CAAC,CAAC,CAAC,GAAE,CAAC,CAAC,CAC5C,CAAC,CAED,GAAI,MAAO,CAAAG,YAAY,EAAI,WAAW,CAAE,CACtCC,UAAU,CAACD,YAAY,CAAG,SAACE,EAAE,CAAK,CAAC,CAAC,CACtC,CAEA,GAAI,MAAO,CAAAC,UAAU,EAAI,WAAW,CAAE,CACpCrE,UAAU,CAAGqE,UAAU,CACzB,CAAC,IAAM,IAAI,MAAO,CAAAC,SAAS,EAAI,WAAW,CAAE,CAC1CtE,UAAU,CAAGsE,SAAS,CACxB,CAEA,GAAI,MAAO,CAAAC,IAAI,EAAI,UAAU,CAAE,CAC7BrE,KAAK,CAAG,SAAAA,MAACC,MAAM,CAAEC,OAAO,CAAK,CAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA6D,UAAU,CAAC,UAAM,CACf,GAAI,EAAE7D,OAAO,WAAY,CAAAoD,UAAU,CAAC,CAAE,CACpC,GAAI,CAAAgB,KAAK,CAAGpE,OAAO,CACnB,GAAIA,OAAO,EAAI,MAAO,CAAAA,OAAO,EAAI,QAAQ,EAAIA,OAAO,CAACqE,KAAK,CAAE,CAC1DD,KAAK,CAAG,CAACpE,OAAO,CAAEA,OAAO,CAACqE,KAAK,CAAC,CAClC,CACAzB,GAAG,CAAC,4BAA4B,CAAGwB,KAAK,CAAC,CAC3C,CACAD,IAAI,CAACpE,MAAM,CAAC,CACd,CAAC,CAAC,CACF,KAAM,CAAAC,OAAO,CACf,CAAC,CACH,CAEA,GAAI,MAAO,CAAAsE,KAAK,EAAI,WAAW,CAAE,CAC/B;AACA,GAAI,MAAO,CAAAC,OAAO,EAAI,WAAW,CAAEA,OAAO,CAAG,sBAAuB,CAAC,CAAE,CACvEA,OAAO,CAACC,GAAG,CAAG,sDAAwDF,KAAM,CAC5EC,OAAO,CAACE,IAAI,CAAGF,OAAO,CAACG,KAAK,CAAG,sDAAwD,MAAO,CAAAC,QAAQ,EAAI,WAAW,CAAGA,QAAQ,CAAGL,KAAM,CAC3I,CAEF,CAAC,IAED;AACA;AACA;AACA,GAAIrE,kBAAkB,EAAIE,qBAAqB,CAAE,CAC/C,GAAIA,qBAAqB,CAAE,CAAE;AAC3BQ,eAAe,CAAGiE,IAAI,CAACC,QAAQ,CAACC,IAAI,CACtC,CAAC,IAAM,IAAI,MAAO,CAAAC,QAAQ,EAAI,WAAW,EAAIA,QAAQ,CAACC,aAAa,CAAE,CAAE;AACrErE,eAAe,CAAGoE,QAAQ,CAACC,aAAa,CAACC,GAAG,CAC9C,CACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAItE,eAAe,CAACuE,OAAO,CAAC,OAAO,CAAC,GAAK,CAAC,CAAE,CAC1CvE,eAAe,CAAGA,eAAe,CAACwE,MAAM,CAAC,CAAC,CAAExE,eAAe,CAACqC,OAAO,CAAC,QAAQ,CAAE,EAAE,CAAC,CAACoC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACvG,CAAC,IAAM,CACLzE,eAAe,CAAG,EAAE,CACtB,CAEA,GAAI,EAAE,MAAO,CAAAT,MAAM,EAAI,QAAQ,EAAI,MAAO,CAAAE,aAAa,EAAI,UAAU,CAAC,CAAE,KAAM,IAAI,CAAAM,KAAK,CAAC,wLAAwL,CAAC,CAEjR;AACA;AACA,CACF;AACAI,KAAK,CAAG,SAAAA,MAACuE,GAAG,CAAK,CACX,GAAI,CAAAC,GAAG,CAAG,GAAI,CAAAC,cAAc,EAAE,CAC9BD,GAAG,CAACE,IAAI,CAAC,KAAK,CAAEH,GAAG,CAAE,KAAK,CAAC,CAC3BC,GAAG,CAACG,IAAI,CAAC,IAAI,CAAC,CACd,MAAO,CAAAH,GAAG,CAACI,YAAY,CAC3B,CAAC,CAED,GAAIvF,qBAAqB,CAAE,CACzBa,UAAU,CAAG,SAAAA,WAACqE,GAAG,CAAK,CAClB,GAAI,CAAAC,GAAG,CAAG,GAAI,CAAAC,cAAc,EAAE,CAC9BD,GAAG,CAACE,IAAI,CAAC,KAAK,CAAEH,GAAG,CAAE,KAAK,CAAC,CAC3BC,GAAG,CAACK,YAAY,CAAG,aAAa,CAChCL,GAAG,CAACG,IAAI,CAAC,IAAI,CAAC,CACd,MAAO,IAAI,CAAAlD,UAAU,CAAC,0BAA2B+C,GAAG,CAACM,QAAQ,CAAE,CACnE,CAAC,CACH,CAEA7E,SAAS,CAAG,SAAAA,UAACsE,GAAG,CAAE5C,MAAM,CAAEC,OAAO,CAAK,CACpC,GAAI,CAAA4C,GAAG,CAAG,GAAI,CAAAC,cAAc,EAAE,CAC9BD,GAAG,CAACE,IAAI,CAAC,KAAK,CAAEH,GAAG,CAAE,IAAI,CAAC,CAC1BC,GAAG,CAACK,YAAY,CAAG,aAAa,CAChCL,GAAG,CAAC7C,MAAM,CAAG,UAAM,CACjB,GAAI6C,GAAG,CAACvF,MAAM,EAAI,GAAG,EAAKuF,GAAG,CAACvF,MAAM,EAAI,CAAC,EAAIuF,GAAG,CAACM,QAAS,CAAE,CAAE;AAC5DnD,MAAM,CAAC6C,GAAG,CAACM,QAAQ,CAAC,CACpB,OACF,CACAlD,OAAO,EAAE,CACX,CAAC,CACD4C,GAAG,CAAC5C,OAAO,CAAGA,OAAO,CACrB4C,GAAG,CAACG,IAAI,CAAC,IAAI,CAAC,CAChB,CAAC,CAEH;AACE,CAEAxE,cAAc,CAAG,SAAAA,eAAC4E,KAAK,QAAK,CAAAd,QAAQ,CAACc,KAAK,CAAGA,KAAK,GACpD,CAAC,IACD,CACE,KAAM,IAAI,CAAAnF,KAAK,CAAC,6BAA6B,CAAC,CAChD,CAEA,GAAI,CAAAoF,GAAG,CAAGtG,MAAM,CAAC,OAAO,CAAC,EAAI+E,OAAO,CAACC,GAAG,CAACuB,IAAI,CAACxB,OAAO,CAAC,CACtD,GAAI,CAAA3B,GAAG,CAAGpD,MAAM,CAAC,UAAU,CAAC,EAAI+E,OAAO,CAACE,IAAI,CAACsB,IAAI,CAACxB,OAAO,CAAC,CAE1D;AACA7E,MAAM,CAACC,MAAM,CAACH,MAAM,CAAEC,eAAe,CAAC,CACtC;AACA;AACAA,eAAe,CAAG,IAAI,CACtBuG,sBAAsB,EAAE,CAExB;AACA;AACA;AACA;AAEA,GAAIxG,MAAM,CAAC,WAAW,CAAC,CAAEI,UAAU,CAAGJ,MAAM,CAAC,WAAW,CAAC,CAACyG,gBAAgB,CAAC,WAAW,CAAE,YAAY,CAAC,CAErG,GAAIzG,MAAM,CAAC,aAAa,CAAC,CAAEK,WAAW,CAAGL,MAAM,CAAC,aAAa,CAAC,CAACyG,gBAAgB,CAAC,aAAa,CAAE,aAAa,CAAC,CAE7G,GAAIzG,MAAM,CAAC,MAAM,CAAC,CAAEM,KAAK,CAAGN,MAAM,CAAC,MAAM,CAAC,CAACyG,gBAAgB,CAAC,MAAM,CAAE,OAAO,CAAC,CAE5E;AACA;AACAzD,MAAM,CAAC,MAAO,CAAAhD,MAAM,CAAC,4BAA4B,CAAC,EAAI,WAAW,CAAE,qFAAqF,CAAC,CACzJgD,MAAM,CAAC,MAAO,CAAAhD,MAAM,CAAC,sBAAsB,CAAC,EAAI,WAAW,CAAE,+EAA+E,CAAC,CAC7IgD,MAAM,CAAC,MAAO,CAAAhD,MAAM,CAAC,wBAAwB,CAAC,EAAI,WAAW,CAAE,iFAAiF,CAAC,CACjJgD,MAAM,CAAC,MAAO,CAAAhD,MAAM,CAAC,sBAAsB,CAAC,EAAI,WAAW,CAAE,+EAA+E,CAAC,CAC7IgD,MAAM,CAAC,MAAO,CAAAhD,MAAM,CAAC,MAAM,CAAC,EAAI,WAAW,CAAE,qDAAqD,CAAC,CACnGgD,MAAM,CAAC,MAAO,CAAAhD,MAAM,CAAC,WAAW,CAAC,EAAI,WAAW,CAAE,8DAA8D,CAAC,CACjHgD,MAAM,CAAC,MAAO,CAAAhD,MAAM,CAAC,YAAY,CAAC,EAAI,WAAW,CAAE,gEAAgE,CAAC,CACpHgD,MAAM,CAAC,MAAO,CAAAhD,MAAM,CAAC,gBAAgB,CAAC,EAAI,WAAW,CAAE,wEAAwE,CAAC,CAChIgD,MAAM,CAAC,MAAO,CAAAhD,MAAM,CAAC,cAAc,CAAC,EAAI,WAAW,CAAE,4DAA4D,CAAC,CAClHyG,gBAAgB,CAAC,MAAM,CAAE,OAAO,CAAC,CACjCA,gBAAgB,CAAC,WAAW,CAAE,WAAW,CAAC,CAC1CA,gBAAgB,CAAC,YAAY,CAAE,YAAY,CAAC,CAC5CA,gBAAgB,CAAC,gBAAgB,CAAE,gBAAgB,CAAC,CACpD,GAAI,CAAAC,KAAK,CAAG,+DAA+D,CAC3E,GAAI,CAAAC,OAAO,CAAG,mEAAmE,CACjF,GAAI,CAAAC,QAAQ,CAAG,qEAAqE,CACpF,GAAI,CAAAC,MAAM,CAAG,iEAAiE,CAE9E7D,MAAM,CAAC,CAAC/B,oBAAoB,CAAE,sGAAsG,CAAC,CAGrI;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAI,CAAA6F,UAAU,CACd,GAAI9G,MAAM,CAAC,YAAY,CAAC,CAAE8G,UAAU,CAAG9G,MAAM,CAAC,YAAY,CAAC,CAACyG,gBAAgB,CAAC,YAAY,CAAE,YAAY,CAAC,CACxG,GAAI,CAAAM,aAAa,CAAG/G,MAAM,CAAC,eAAe,CAAC,EAAI,IAAI,CAACyG,gBAAgB,CAAC,eAAe,CAAE,eAAe,CAAC,CAEtG,GAAI,MAAO,CAAAO,WAAW,EAAI,QAAQ,CAAE,CAClCC,KAAK,CAAC,iCAAiC,CAAC,CAC1C,CAEA;AAEA,GAAI,CAAAC,UAAU,CAEd;AACA;AACA;AAEA;AACA;AACA,GAAI,CAAAC,KAAK,CAAG,KAAK,CAEjB;AACA;AACA;AACA,GAAI,CAAAC,UAAU,CAEd,mCACA,QAAS,CAAApE,MAAMA,CAACqE,SAAS,CAAEC,IAAI,CAAE,CAC/B,GAAI,CAACD,SAAS,CAAE,CACdJ,KAAK,CAAC,kBAAkB,EAAIK,IAAI,CAAG,IAAI,CAAGA,IAAI,CAAG,EAAE,CAAC,CAAC,CACvD,CACF,CAEA;AACA;AAEA;AAEA,GAAI,CAAAC,IAAI,CACR,yBACEC,KAAK,CACP,0BACEC,MAAM,CACR,0BACEC,MAAM,CACR,2BACEC,OAAO,CACT,0BACEC,MAAM,CACR,2BACEC,OAAO,CACT,4BACEC,OAAO,CACT,4BACEC,OAAO,CAET,QAAS,CAAAC,iBAAiBA,CAAA,CAAG,CAC3B,GAAI,CAAAC,CAAC,CAAGf,UAAU,CAACpE,MAAM,CACzB9C,MAAM,CAAC,OAAO,CAAC,CAAGwH,KAAK,CAAG,GAAI,CAAAU,SAAS,CAACD,CAAC,CAAC,CAC1CjI,MAAM,CAAC,QAAQ,CAAC,CAAG0H,MAAM,CAAG,GAAI,CAAAS,UAAU,CAACF,CAAC,CAAC,CAC7CjI,MAAM,CAAC,QAAQ,CAAC,CAAG4H,MAAM,CAAG,GAAI,CAAAQ,UAAU,CAACH,CAAC,CAAC,CAC7CjI,MAAM,CAAC,QAAQ,CAAC,CAAGyH,MAAM,CAAG,GAAI,CAAA1E,UAAU,CAACkF,CAAC,CAAC,CAC7CjI,MAAM,CAAC,SAAS,CAAC,CAAG2H,OAAO,CAAG,GAAI,CAAAU,WAAW,CAACJ,CAAC,CAAC,CAChDjI,MAAM,CAAC,SAAS,CAAC,CAAG6H,OAAO,CAAG,GAAI,CAAAS,WAAW,CAACL,CAAC,CAAC,CAChDjI,MAAM,CAAC,SAAS,CAAC,CAAG8H,OAAO,CAAG,GAAI,CAAAS,YAAY,CAACN,CAAC,CAAC,CACjDjI,MAAM,CAAC,SAAS,CAAC,CAAG+H,OAAO,CAAG,GAAI,CAAAS,YAAY,CAACP,CAAC,CAAC,CACnD,CAEAjF,MAAM,CAAC,CAAChD,MAAM,CAAC,YAAY,CAAC,CAAE,4EAA4E,CAAC,CAE3GgD,MAAM,CAAC,MAAO,CAAAoF,UAAU,EAAI,WAAW,EAAI,MAAO,CAAAI,YAAY,GAAK,WAAW,EAAIJ,UAAU,CAACK,SAAS,CAACC,QAAQ,EAAI9F,SAAS,EAAIwF,UAAU,CAACK,SAAS,CAACE,GAAG,EAAI/F,SAAS,CAC9J,qDAAqD,CAAC,CAE7D;AACAI,MAAM,CAAC,CAAChD,MAAM,CAAC,YAAY,CAAC,CAAE,sFAAsF,CAAC,CACrHgD,MAAM,CAAC,CAAChD,MAAM,CAAC,gBAAgB,CAAC,CAAE,kGAAkG,CAAC,CAErI;AACA;AACA;AACA;AACA,GAAI,CAAA4I,SAAS,CAEb;AACA;AACA;AACA,QAAS,CAAAC,gBAAgBA,CAAA,CAAG,CAC1B,GAAI,CAAAC,GAAG,CAAGC,0BAAyB,EAAE,CACrC/F,MAAM,CAAC,CAAC8F,GAAG,CAAG,CAAC,GAAK,CAAC,CAAC,CACtB;AACA;AACA;AACA,GAAIA,GAAG,EAAI,CAAC,CAAE,CACZA,GAAG,EAAI,CAAC,CACV,CACA;AACA;AACA;AACAjB,OAAO,CAAGiB,GAAG,EAAG,CAAC,CAAE,CAAG,UAAU,CAChCjB,OAAO,CAAIiB,GAAG,CAAG,CAAE,EAAG,CAAC,CAAE,CAAG,UAAU,CACtC;AACAjB,OAAO,CAAC,CAAC,CAAC,CAAG,UAAU,CAAE,YAC3B,CAEA,QAAS,CAAAmB,gBAAgBA,CAAA,CAAG,CAC1B,GAAI7B,KAAK,CAAE,OACX,GAAI,CAAA2B,GAAG,CAAGC,0BAAyB,EAAE,CACrC;AACA,GAAID,GAAG,EAAI,CAAC,CAAE,CACZA,GAAG,EAAI,CAAC,CACV,CACA,GAAI,CAAAG,OAAO,CAAGpB,OAAO,CAAGiB,GAAG,EAAG,CAAC,CAAE,CACjC,GAAI,CAAAI,OAAO,CAAGrB,OAAO,CAAIiB,GAAG,CAAG,CAAE,EAAG,CAAC,CAAE,CACvC,GAAIG,OAAO,EAAI,UAAU,EAAIC,OAAO,EAAI,UAAU,CAAE,CAClDjC,KAAK,CAAC,uDAAuD,CAAGkC,WAAW,CAACL,GAAG,CAAC,CAAG,+DAA+D,CAAGK,WAAW,CAACD,OAAO,CAAC,CAAG,GAAG,CAAGC,WAAW,CAACF,OAAO,CAAC,CAAC,CACzM,CACA;AACA,GAAIpB,OAAO,CAAC,CAAC,CAAC,GAAK,UAAW,aAAc,CAC1CZ,KAAK,CAAC,mFAAmF,CAAC,CAC5F,CACF,CAEA;AACA;AACA;AACA,CAAC,UAAW,CACV,GAAI,CAAAmC,GAAG,CAAG,GAAI,CAAAjB,UAAU,CAAC,CAAC,CAAC,CAC3B,GAAI,CAAAkB,EAAE,CAAG,GAAI,CAAAnB,SAAS,CAACkB,GAAG,CAACtG,MAAM,CAAC,CAClCsG,GAAG,CAAC,CAAC,CAAC,CAAG,MAAM,CACf,GAAIC,EAAE,CAAC,CAAC,CAAC,GAAK,IAAI,EAAIA,EAAE,CAAC,CAAC,CAAC,GAAK,IAAI,CAAE,KAAM,mGAAmG,CACjJ,CAAC,GAAG,CAEJ;AACA,GAAI,CAAAC,YAAY,CAAI,EAAE,CAAE;AACxB,GAAI,CAAAC,UAAU,CAAM,EAAE,CAAE;AACxB,GAAI,CAAAC,UAAU,CAAM,EAAE,CAAE;AACxB,GAAI,CAAAC,aAAa,CAAG,EAAE,CAAE;AAExB,GAAI,CAAAC,kBAAkB,CAAG,KAAK,CAE9B,GAAI,CAAAC,uBAAuB,CAAG,CAAC,CAE/B,QAAS,CAAAC,gBAAgBA,CAAA,CAAG,CAC1B,MAAO,CAAA7C,aAAa,EAAI4C,uBAAuB,CAAG,CAAC,CACrD,CAEA,QAAS,CAAAE,MAAMA,CAAA,CAAG,CAChB,GAAI7J,MAAM,CAAC,QAAQ,CAAC,CAAE,CACpB,GAAI,MAAO,CAAAA,MAAM,CAAC,QAAQ,CAAC,EAAI,UAAU,CAAEA,MAAM,CAAC,QAAQ,CAAC,CAAG,CAACA,MAAM,CAAC,QAAQ,CAAC,CAAC,CAChF,MAAOA,MAAM,CAAC,QAAQ,CAAC,CAACuD,MAAM,CAAE,CAC9BuG,WAAW,CAAC9J,MAAM,CAAC,QAAQ,CAAC,CAAC+J,KAAK,EAAE,CAAC,CACvC,CACF,CACAC,oBAAoB,CAACV,YAAY,CAAC,CACpC,CAEA,QAAS,CAAAW,WAAWA,CAAA,CAAG,CACrBjH,MAAM,CAAC,CAAC0G,kBAAkB,CAAC,CAC3BA,kBAAkB,CAAG,IAAI,CAEzBV,gBAAgB,EAAE,CAGlBgB,oBAAoB,CAACT,UAAU,CAAC,CAClC,CAEA,QAAS,CAAAW,OAAOA,CAAA,CAAG,CACjBlB,gBAAgB,EAAE,CAElB,GAAIhJ,MAAM,CAAC,SAAS,CAAC,CAAE,CACrB,GAAI,MAAO,CAAAA,MAAM,CAAC,SAAS,CAAC,EAAI,UAAU,CAAEA,MAAM,CAAC,SAAS,CAAC,CAAG,CAACA,MAAM,CAAC,SAAS,CAAC,CAAC,CACnF,MAAOA,MAAM,CAAC,SAAS,CAAC,CAACuD,MAAM,CAAE,CAC/B4G,YAAY,CAACnK,MAAM,CAAC,SAAS,CAAC,CAAC+J,KAAK,EAAE,CAAC,CACzC,CACF,CAEAC,oBAAoB,CAACP,aAAa,CAAC,CACrC,CAEA,QAAS,CAAAK,WAAWA,CAACM,EAAE,CAAE,CACvBd,YAAY,CAACe,OAAO,CAACD,EAAE,CAAC,CAC1B,CAEA,QAAS,CAAAE,SAASA,CAACF,EAAE,CAAE,CACrBb,UAAU,CAACc,OAAO,CAACD,EAAE,CAAC,CACxB,CAEA,QAAS,CAAAG,SAASA,CAACH,EAAE,CAAE,CACvB,CAEA,QAAS,CAAAD,YAAYA,CAACC,EAAE,CAAE,CACxBX,aAAa,CAACY,OAAO,CAACD,EAAE,CAAC,CAC3B,CAEA;AACA;AAEA;AAEA;AAEA;AAEApH,MAAM,CAACwH,IAAI,CAACC,IAAI,CAAE,6HAA6H,CAAC,CAChJzH,MAAM,CAACwH,IAAI,CAACE,MAAM,CAAE,+HAA+H,CAAC,CACpJ1H,MAAM,CAACwH,IAAI,CAACG,KAAK,CAAE,8HAA8H,CAAC,CAClJ3H,MAAM,CAACwH,IAAI,CAACI,KAAK,CAAE,8HAA8H,CAAC,CAElJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAI,CAAAC,eAAe,CAAG,CAAC,CACvB,GAAI,CAAAC,oBAAoB,CAAG,IAAI,CAC/B,GAAI,CAAAC,qBAAqB,CAAG,IAAI,CAAE;AAClC,GAAI,CAAAC,qBAAqB,CAAG,CAAC,CAAC,CAE9B,QAAS,CAAAC,sBAAsBA,CAACzG,EAAE,CAAE,CAClC,GAAI,CAAA0G,IAAI,CAAG1G,EAAE,CACb,MAAO,CAAC,CAAE,CACR,GAAI,CAACwG,qBAAqB,CAACxG,EAAE,CAAC,CAAE,MAAO,CAAAA,EAAE,CACzCA,EAAE,CAAG0G,IAAI,CAAGV,IAAI,CAACW,MAAM,EAAE,CAC3B,CACF,CAEA,QAAS,CAAAC,gBAAgBA,CAAC5G,EAAE,CAAE,CAC5BqG,eAAe,EAAE,CAEjB,GAAI7K,MAAM,CAAC,wBAAwB,CAAC,CAAE,CACpCA,MAAM,CAAC,wBAAwB,CAAC,CAAC6K,eAAe,CAAC,CACnD,CAEA,GAAIrG,EAAE,CAAE,CACNxB,MAAM,CAAC,CAACgI,qBAAqB,CAACxG,EAAE,CAAC,CAAC,CAClCwG,qBAAqB,CAACxG,EAAE,CAAC,CAAG,CAAC,CAC7B,GAAIsG,oBAAoB,GAAK,IAAI,EAAI,MAAO,CAAAO,WAAW,EAAI,WAAW,CAAE,CACtE;AACAP,oBAAoB,CAAGO,WAAW,CAAC,UAAW,CAC5C,GAAIlE,KAAK,CAAE,CACTmE,aAAa,CAACR,oBAAoB,CAAC,CACnCA,oBAAoB,CAAG,IAAI,CAC3B,OACF,CACA,GAAI,CAAAS,KAAK,CAAG,KAAK,CACjB,IAAK,GAAI,CAAAC,GAAG,GAAI,CAAAR,qBAAqB,CAAE,CACrC,GAAI,CAACO,KAAK,CAAE,CACVA,KAAK,CAAG,IAAI,CACZnI,GAAG,CAAC,oCAAoC,CAAC,CAC3C,CACAA,GAAG,CAAC,cAAc,CAAGoI,GAAG,CAAC,CAC3B,CACA,GAAID,KAAK,CAAE,CACTnI,GAAG,CAAC,eAAe,CAAC,CACtB,CACF,CAAC,CAAE,KAAK,CAAC,CACX,CACF,CAAC,IAAM,CACLA,GAAG,CAAC,0CAA0C,CAAC,CACjD,CACF,CAEA,QAAS,CAAAqI,mBAAmBA,CAACjH,EAAE,CAAE,CAC/BqG,eAAe,EAAE,CAEjB,GAAI7K,MAAM,CAAC,wBAAwB,CAAC,CAAE,CACpCA,MAAM,CAAC,wBAAwB,CAAC,CAAC6K,eAAe,CAAC,CACnD,CAEA,GAAIrG,EAAE,CAAE,CACNxB,MAAM,CAACgI,qBAAqB,CAACxG,EAAE,CAAC,CAAC,CACjC,MAAO,CAAAwG,qBAAqB,CAACxG,EAAE,CAAC,CAClC,CAAC,IAAM,CACLpB,GAAG,CAAC,4CAA4C,CAAC,CACnD,CACA,GAAIyH,eAAe,EAAI,CAAC,CAAE,CACxB,GAAIC,oBAAoB,GAAK,IAAI,CAAE,CACjCQ,aAAa,CAACR,oBAAoB,CAAC,CACnCA,oBAAoB,CAAG,IAAI,CAC7B,CACA,GAAIC,qBAAqB,CAAE,CACzB,GAAI,CAAAW,QAAQ,CAAGX,qBAAqB,CACpCA,qBAAqB,CAAG,IAAI,CAC5BW,QAAQ,EAAE,CAAE;AACd,CACF,CACF,CAEA,mCACA,QAAS,CAAAzE,KAAKA,CAAC0E,IAAI,CAAE,CACnB,GAAI3L,MAAM,CAAC,SAAS,CAAC,CAAE,CACrBA,MAAM,CAAC,SAAS,CAAC,CAAC2L,IAAI,CAAC,CACzB,CAEAA,IAAI,CAAG,UAAU,CAAGA,IAAI,CAAG,GAAG,CAC9B;AACA;AACAvI,GAAG,CAACuI,IAAI,CAAC,CAETxE,KAAK,CAAG,IAAI,CACZC,UAAU,CAAG,CAAC,CAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA,6BACA,GAAI,CAAAwE,CAAC,CAAG,GAAI,CAAA5E,WAAW,CAAC6E,YAAY,CAACF,IAAI,CAAC,CAE1C;AACA;AACA;AACA,KAAM,CAAAC,CAAC,CACT,CAEA;AACA;AACA;AACA,GAAI,CAAAE,EAAE,CAAG,CACP5G,KAAK,CAAE,SAAAA,MAAA,CAAW,CAChB+B,KAAK,CAAC,8OAA8O,CAAC,CACvP,CAAC,CACD8E,IAAI,CAAE,SAAAA,KAAA,CAAW,CAAED,EAAE,CAAC5G,KAAK,EAAE,CAAC,CAAC,CAC/B8G,cAAc,CAAE,SAAAA,eAAA,CAAW,CAAEF,EAAE,CAAC5G,KAAK,EAAE,CAAC,CAAC,CACzC+G,mBAAmB,CAAE,SAAAA,oBAAA,CAAW,CAAEH,EAAE,CAAC5G,KAAK,EAAE,CAAC,CAAC,CAC9CgH,cAAc,CAAE,SAAAA,eAAA,CAAW,CAAEJ,EAAE,CAAC5G,KAAK,EAAE,CAAC,CAAC,CACzCc,IAAI,CAAE,SAAAA,KAAA,CAAW,CAAE8F,EAAE,CAAC5G,KAAK,EAAE,CAAC,CAAC,CAC/BiH,KAAK,CAAE,SAAAA,MAAA,CAAW,CAAEL,EAAE,CAAC5G,KAAK,EAAE,CAAC,CAAC,CAChCkH,cAAc,CAAE,SAAAA,eAAA,CAAW,CAAEN,EAAE,CAAC5G,KAAK,EAAE,CAAC,CAAC,CACzCmH,WAAW,CAAE,SAAAA,YAAA,CAAW,CAAEP,EAAE,CAAC5G,KAAK,EAAE,CAAC,CAAC,CAEtCoH,UAAU,CAAE,QAAS,CAAAA,UAAUA,CAAA,CAAG,CAAER,EAAE,CAAC5G,KAAK,EAAE,CAAC,CACjD,CAAC,CACDlF,MAAM,CAAC,mBAAmB,CAAC,CAAG8L,EAAE,CAACE,cAAc,CAC/ChM,MAAM,CAAC,wBAAwB,CAAC,CAAG8L,EAAE,CAACG,mBAAmB,CAEzD;AACA;AACA,GAAI,CAAAM,aAAa,CAAG,uCAAuC,CAE3D;AACA,QAAS,CAAAC,SAASA,CAAClK,QAAQ,CAAE,CAC3B;AACA,MAAO,CAAAA,QAAQ,CAACmK,UAAU,CAACF,aAAa,CAAC,CAC3C,CAEA;AACA,QAAS,CAAA/J,SAASA,CAACF,QAAQ,CAAE,CAC3B,MAAO,CAAAA,QAAQ,CAACmK,UAAU,CAAC,SAAS,CAAC,CACvC,CAEA;AACA,iCACA,QAAS,CAAAC,mBAAmBA,CAAC/K,IAAI,CAAEgL,QAAQ,CAAE,CAC3C,MAAO,WAAW,CAChB,GAAI,CAAAC,WAAW,CAAGjL,IAAI,CACtB,GAAI,CAAAkL,GAAG,CAAGF,QAAQ,CAClB,GAAI,CAACA,QAAQ,CAAE,CACbE,GAAG,CAAG7M,MAAM,CAAC,KAAK,CAAC,CACrB,CACAgD,MAAM,CAAC0G,kBAAkB,CAAE,mBAAmB,CAAGkD,WAAW,CAAG,wCAAwC,CAAC,CACxG,GAAI,CAACC,GAAG,CAAClL,IAAI,CAAC,CAAE,CACdqB,MAAM,CAAC6J,GAAG,CAAClL,IAAI,CAAC,CAAE,4BAA4B,CAAGiL,WAAW,CAAG,aAAa,CAAC,CAC/E,CACA,MAAO,CAAAC,GAAG,CAAClL,IAAI,CAAC,CAACmL,KAAK,CAAC,IAAI,CAAEpI,SAAS,CAAC,CACzC,CAAC,CACH,CAEA;AACA;AACA,GAAI,CAAAqI,cAAc,CAChBA,cAAc,CAAG,UAAU,CAC3B,GAAI,CAACP,SAAS,CAACO,cAAc,CAAC,CAAE,CAC9BA,cAAc,CAAG3L,UAAU,CAAC2L,cAAc,CAAC,CAC7C,CAEF,QAAS,CAAAC,SAASA,CAACC,IAAI,CAAE,CACvB,GAAI,CACF,GAAIA,IAAI,EAAIF,cAAc,EAAIjG,UAAU,CAAE,CACxC,MAAO,IAAI,CAAA/D,UAAU,CAAC+D,UAAU,CAAC,CACnC,CACA,GAAItF,UAAU,CAAE,CACd,MAAO,CAAAA,UAAU,CAACyL,IAAI,CAAC,CACzB,CACA,KAAM,iDAAiD,CACzD,CACA,MAAO7J,GAAG,CAAE,CACV6D,KAAK,CAAC7D,GAAG,CAAC,CACZ,CACF,CAEA,QAAS,CAAA8J,gBAAgBA,CAACC,UAAU,CAAE,CACpC;AACA;AACA;AACA;AACA;AACA,GAAI,CAACrG,UAAU,GAAKrG,kBAAkB,EAAIE,qBAAqB,CAAC,CAAE,CAChE,GAAI,MAAO,CAAAyM,KAAK,EAAI,UAAU,EACzB,CAAC5K,SAAS,CAAC2K,UAAU,CAAC,CACzB,CACA,MAAO,CAAAC,KAAK,CAACD,UAAU,CAAE,CAAEE,WAAW,CAAE,aAAc,CAAC,CAAC,CAACC,IAAI,CAAC,SAASlH,QAAQ,CAAE,CAC/E,GAAI,CAACA,QAAQ,CAAC,IAAI,CAAC,CAAE,CACnB,KAAM,sCAAsC,CAAG+G,UAAU,CAAG,GAAG,CACjE,CACA,MAAO,CAAA/G,QAAQ,CAAC,aAAa,CAAC,EAAE,CAClC,CAAC,CAAC,CAACmH,KAAK,CAAC,UAAY,CACjB,MAAO,CAAAP,SAAS,CAACG,UAAU,CAAC,CAChC,CAAC,CAAC,CACJ,CAAC,IACI,CACH,GAAI5L,SAAS,CAAE,CACb;AACA,MAAO,IAAI,CAAAiM,OAAO,CAAC,SAASC,OAAO,CAAEC,MAAM,CAAE,CAC3CnM,SAAS,CAAC4L,UAAU,CAAE,SAAS/G,QAAQ,CAAE,CAAEqH,OAAO,CAAC,GAAI,CAAA1K,UAAU,CAAC,0BAA2BqD,QAAQ,CAAE,CAAC,CAAC,CAAC,CAAEsH,MAAM,CAAC,CACrH,CAAC,CAAC,CACJ,CACF,CACF,CAEA;AACA,MAAO,CAAAF,OAAO,CAACC,OAAO,EAAE,CAACH,IAAI,CAAC,UAAW,CAAE,MAAO,CAAAN,SAAS,CAACG,UAAU,CAAC,CAAE,CAAC,CAAC,CAC7E,CAEA,QAAS,CAAAQ,sBAAsBA,CAACR,UAAU,CAAES,OAAO,CAAEC,QAAQ,CAAE,CAC7D,MAAO,CAAAX,gBAAgB,CAACC,UAAU,CAAC,CAACG,IAAI,CAAC,SAAS/K,MAAM,CAAE,CACxD,MAAO,CAAAyE,WAAW,CAAC8G,WAAW,CAACvL,MAAM,CAAEqL,OAAO,CAAC,CACjD,CAAC,CAAC,CAACN,IAAI,CAAC,SAAUS,QAAQ,CAAE,CAC1B,MAAO,CAAAA,QAAQ,CACjB,CAAC,CAAC,CAACT,IAAI,CAACO,QAAQ,CAAE,SAAS9J,MAAM,CAAE,CACjCX,GAAG,CAAC,yCAAyC,CAAGW,MAAM,CAAC,CAEvD;AACA,GAAIvB,SAAS,CAACuK,cAAc,CAAC,CAAE,CAC7B3J,GAAG,CAAC,oCAAoC,CAAG2J,cAAc,CAAG,gMAAgM,CAAC,CAC/P,CACA9F,KAAK,CAAClD,MAAM,CAAC,CACf,CAAC,CAAC,CACJ,CAEA,QAAS,CAAAiK,gBAAgBA,CAACzL,MAAM,CAAE4K,UAAU,CAAES,OAAO,CAAElC,QAAQ,CAAE,CAC/D,GAAI,CAACnJ,MAAM,EACP,MAAO,CAAAyE,WAAW,CAACiH,oBAAoB,EAAI,UAAU,EACrD,CAACzB,SAAS,CAACW,UAAU,CAAC,EACtB;AACA,CAAC3K,SAAS,CAAC2K,UAAU,CAAC,EACtB;AACA;AACA;AACA;AACA;AACA;AACA,CAACtM,mBAAmB,EACpB,MAAO,CAAAuM,KAAK,EAAI,UAAU,CAAE,CAC9B,MAAO,CAAAA,KAAK,CAACD,UAAU,CAAE,CAAEE,WAAW,CAAE,aAAc,CAAC,CAAC,CAACC,IAAI,CAAC,SAASlH,QAAQ,CAAE,CAC/E;AACA;AACA;AACA;AACA,6BACA,GAAI,CAAA8H,MAAM,CAAGlH,WAAW,CAACiH,oBAAoB,CAAC7H,QAAQ,CAAEwH,OAAO,CAAC,CAEhE,MAAO,CAAAM,MAAM,CAACZ,IAAI,CAChB5B,QAAQ,CACR,SAAS3H,MAAM,CAAE,CACf;AACA;AACAX,GAAG,CAAC,iCAAiC,CAAGW,MAAM,CAAC,CAC/CX,GAAG,CAAC,2CAA2C,CAAC,CAChD,MAAO,CAAAuK,sBAAsB,CAACR,UAAU,CAAES,OAAO,CAAElC,QAAQ,CAAC,CAC9D,CAAC,CAAC,CACN,CAAC,CAAC,CACJ,CAAC,IAAM,CACL,MAAO,CAAAiC,sBAAsB,CAACR,UAAU,CAAES,OAAO,CAAElC,QAAQ,CAAC,CAC9D,CACF,CAEA;AACA;AACA,QAAS,CAAAyC,UAAUA,CAAA,CAAG,CACpB;AACA,GAAI,CAAAC,IAAI,CAAG,CACT,KAAK,CAAEC,WAAW,CAClB,wBAAwB,CAAEA,WAC5B,CAAC,CACD;AACA;AACA;AACA,yCACA,QAAS,CAAAC,eAAeA,CAACP,QAAQ,CAAEtK,MAAM,CAAE,CACzC,GAAI,CAAA8K,OAAO,CAAGR,QAAQ,CAACQ,OAAO,CAE9BvO,MAAM,CAAC,KAAK,CAAC,CAAGuO,OAAO,CAEvBrH,UAAU,CAAGlH,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CACpCgD,MAAM,CAACkE,UAAU,CAAE,kCAAkC,CAAC,CACtD;AACA;AACA;AACA;AACAc,iBAAiB,EAAE,CAEnBY,SAAS,CAAG5I,MAAM,CAAC,KAAK,CAAC,CAAC,2BAA2B,CAAC,CACtDgD,MAAM,CAAC4F,SAAS,CAAE,iCAAiC,CAAC,CAEpD0B,SAAS,CAACtK,MAAM,CAAC,KAAK,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAE7CyL,mBAAmB,CAAC,kBAAkB,CAAC,CAEvC,MAAO,CAAA8C,OAAO,CAChB,CACA;AACAnD,gBAAgB,CAAC,kBAAkB,CAAC,CAEpC;AACA;AACA;AACA;AACA,GAAI,CAAAoD,UAAU,CAAGxO,MAAM,CACvB,QAAS,CAAAyO,0BAA0BA,CAACP,MAAM,CAAE,CAC1C;AACA;AACAlL,MAAM,CAAChD,MAAM,GAAKwO,UAAU,CAAE,kHAAkH,CAAC,CACjJA,UAAU,CAAG,IAAI,CACjB;AACA;AACAF,eAAe,CAACJ,MAAM,CAAC,UAAU,CAAC,CAAC,CACrC,CAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAIlO,MAAM,CAAC,iBAAiB,CAAC,CAAE,CAE7B,GAAI,CACF,MAAO,CAAAA,MAAM,CAAC,iBAAiB,CAAC,CAACoO,IAAI,CAAEE,eAAe,CAAC,CACzD,CAAE,MAAM1C,CAAC,CAAE,CACTxI,GAAG,CAAC,qDAAqD,CAAGwI,CAAC,CAAC,CAC5D,MAAO,MAAK,CAChB,CACF,CAEAoC,gBAAgB,CAAClH,UAAU,CAAEiG,cAAc,CAAEqB,IAAI,CAAEK,0BAA0B,CAAC,CAC9E,MAAO,CAAC,CAAC,CAAE;AACb,CAEA;AACA,GAAI,CAAAC,UAAU,CACd,GAAI,CAAAC,OAAO,CAEX;AACA,QAAS,CAAAlI,gBAAgBA,CAACmI,IAAI,CAAEC,OAAO,CAAE,CACvC,GAAI,CAAC3O,MAAM,CAAC4O,wBAAwB,CAAC9O,MAAM,CAAE4O,IAAI,CAAC,CAAE,CAClD1O,MAAM,CAAC6O,cAAc,CAAC/O,MAAM,CAAE4O,IAAI,CAAE,CAClCI,YAAY,CAAE,IAAI,CAClBC,GAAG,CAAE,SAAAA,IAAA,CAAW,CACdhI,KAAK,CAAC,SAAS,CAAG2H,IAAI,CAAG,gCAAgC,CAAGC,OAAO,CAAG,iIAAiI,CAAC,CAC1M,CACF,CAAC,CAAC,CACJ,CACF,CAEA,QAAS,CAAAK,iBAAiBA,CAACN,IAAI,CAAE,CAC/B,GAAI1O,MAAM,CAAC4O,wBAAwB,CAAC9O,MAAM,CAAE4O,IAAI,CAAC,CAAE,CACjD3H,KAAK,CAAC,UAAU,CAAG2H,IAAI,CAAG,sBAAsB,CAAGA,IAAI,CAAG,0CAA0C,CAAC,CACvG,CACF,CAEA;AACA,QAAS,CAAAO,2BAA2BA,CAACxN,IAAI,CAAE,CACzC,MAAO,CAAAA,IAAI,GAAK,eAAe,EACxBA,IAAI,GAAK,mBAAmB,EAC5BA,IAAI,GAAK,wBAAwB,EACjCA,IAAI,GAAK,WAAW,EACpBA,IAAI,GAAK,kBAAkB,EAC3B;AACAA,IAAI,GAAK,mBAAmB,EAC5BA,IAAI,GAAK,iBAAiB,EAC1BA,IAAI,GAAK,qBAAqB,CACvC,CAEA,QAAS,CAAAyN,aAAaA,CAACC,GAAG,CAAEC,GAAG,CAAE,CAC/B,GAAI,MAAO,CAAA/K,UAAU,GAAK,WAAW,CAAE,CACrCrE,MAAM,CAAC6O,cAAc,CAACxK,UAAU,CAAE8K,GAAG,CAAE,CACrCL,YAAY,CAAE,IAAI,CAClBC,GAAG,CAAE,SAAAA,IAAA,CAAW,CACdM,QAAQ,CAAC,GAAG,CAAGF,GAAG,CAAG,yCAAyC,CAAGC,GAAG,CAAC,CACrE,MAAO,CAAA1M,SAAS,CAClB,CACF,CAAC,CAAC,CACJ,CACF,CAEAwM,aAAa,CAAC,QAAQ,CAAE,8CAA8C,CAAC,CAEvE,QAAS,CAAAI,oBAAoBA,CAACH,GAAG,CAAE,CACjC,GAAI,MAAO,CAAA9K,UAAU,GAAK,WAAW,EAAI,CAACrE,MAAM,CAAC4O,wBAAwB,CAACvK,UAAU,CAAE8K,GAAG,CAAC,CAAE,CAC1FnP,MAAM,CAAC6O,cAAc,CAACxK,UAAU,CAAE8K,GAAG,CAAE,CACrCL,YAAY,CAAE,IAAI,CAClBC,GAAG,CAAE,SAAAA,IAAA,CAAW,CACd;AACA;AACA,GAAI,CAAAK,GAAG,CAAG,GAAG,CAAGD,GAAG,CAAG,gJAAgJ,CACtK;AACA;AACA;AACA,GAAI,CAAAI,aAAa,CAAGJ,GAAG,CACvB,GAAI,CAACI,aAAa,CAAChD,UAAU,CAAC,GAAG,CAAC,CAAE,CAClCgD,aAAa,CAAG,GAAG,CAAGJ,GAAG,CAC3B,CACAC,GAAG,EAAI,4CAA4C,CAAGG,aAAa,CAAG,GAAG,CACzE,GAAIN,2BAA2B,CAACE,GAAG,CAAC,CAAE,CACpCC,GAAG,EAAI,0FAA0F,CACnG,CACAC,QAAQ,CAACD,GAAG,CAAC,CACb,MAAO,CAAA1M,SAAS,CAClB,CACF,CAAC,CAAC,CACJ,CACA;AACA;AACA8M,uBAAuB,CAACL,GAAG,CAAC,CAC9B,CAEA,QAAS,CAAAK,uBAAuBA,CAACL,GAAG,CAAE,CACpC,GAAI,CAACnP,MAAM,CAAC4O,wBAAwB,CAAC9O,MAAM,CAAEqP,GAAG,CAAC,CAAE,CACjDnP,MAAM,CAAC6O,cAAc,CAAC/O,MAAM,CAAEqP,GAAG,CAAE,CACjCL,YAAY,CAAE,IAAI,CAClBC,GAAG,CAAE,SAAAA,IAAA,CAAW,CACd,GAAI,CAAAK,GAAG,CAAG,GAAG,CAAGD,GAAG,CAAG,sEAAsE,CAC5F,GAAIF,2BAA2B,CAACE,GAAG,CAAC,CAAE,CACpCC,GAAG,EAAI,0FAA0F,CACnG,CACArI,KAAK,CAACqI,GAAG,CAAC,CACZ,CACF,CAAC,CAAC,CACJ,CACF,CAEA;AACA,QAAS,CAAAK,GAAGA,CAACrI,IAAI,CAAE,CACjB;AACA;AACAvC,OAAO,CAACG,KAAK,CAACoC,IAAI,CAAC,CACrB,CAEA;AACA;AAGA;AAEE,mBACA,QAAS,CAAA1D,UAAUA,CAACrD,MAAM,CAAE,CACxB,IAAI,CAACoB,IAAI,CAAG,YAAY,CACxB,IAAI,CAACiO,OAAO,CAAG,+BAA+B,CAAGrP,MAAM,CAAG,GAAG,CAC7D,IAAI,CAACA,MAAM,CAAGA,MAAM,CACtB,CAEF,QAAS,CAAAyJ,oBAAoBA,CAAC6F,SAAS,CAAE,CACrC,MAAOA,SAAS,CAACtM,MAAM,CAAG,CAAC,CAAE,CAC3B;AACAsM,SAAS,CAAC9F,KAAK,EAAE,CAAC/J,MAAM,CAAC,CAC3B,CACF,CAGA;AACJ;AACA;AACA,OACE,QAAS,CAAA8P,QAAQA,CAACC,GAAG,CAAe,IAAb,CAAAC,IAAI,CAAAtL,SAAA,CAAAnB,MAAA,IAAAmB,SAAA,MAAA9B,SAAA,CAAA8B,SAAA,IAAG,IAAI,CAChC,GAAIsL,IAAI,CAACC,QAAQ,CAAC,GAAG,CAAC,CAAED,IAAI,CAAG,GAAG,CAClC,OAAQA,IAAI,EACV,IAAK,IAAI,CAAE,MAAO,CAAAxI,KAAK,CAAGuI,GAAG,EAAG,CAAC,CAAE,CACnC,IAAK,IAAI,CAAE,MAAO,CAAAvI,KAAK,CAAGuI,GAAG,EAAG,CAAC,CAAE,CACnC,IAAK,KAAK,CAAE,MAAO,CAAArI,MAAM,CAAGqI,GAAG,EAAG,CAAC,CAAE,CACrC,IAAK,KAAK,CAAE,MAAO,CAAAnI,MAAM,CAAGmI,GAAG,EAAG,CAAC,CAAE,CACrC,IAAK,KAAK,CAAE,MAAO,CAAAnI,MAAM,CAAGmI,GAAG,EAAG,CAAC,CAAE,CACrC,IAAK,OAAO,CAAE,MAAO,CAAAjI,OAAO,CAAGiI,GAAG,EAAG,CAAC,CAAE,CACxC,IAAK,QAAQ,CAAE,MAAO,CAAAhI,OAAO,CAAGgI,GAAG,EAAG,CAAC,CAAE,CACzC,IAAK,GAAG,CAAE,MAAO,CAAAlI,OAAO,CAAGkI,GAAG,EAAG,CAAC,CAAE,CACpC,QAAS9I,KAAK,CAAC,6BAA6B,CAAG+I,IAAI,CAAC,CAAC,CAEzD,CAEA,QAAS,CAAA7G,WAAWA,CAAC4G,GAAG,CAAE,CACtB/M,MAAM,CAAC,MAAO,CAAA+M,GAAG,GAAK,QAAQ,CAAC,CAC/B,MAAO,IAAI,CAAGA,GAAG,CAACG,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CACjD,CAGA;AACJ;AACA;AACA;AACA,OACE,QAAS,CAAAC,QAAQA,CAACL,GAAG,CAAEM,KAAK,CAAe,IAAb,CAAAL,IAAI,CAAAtL,SAAA,CAAAnB,MAAA,IAAAmB,SAAA,MAAA9B,SAAA,CAAA8B,SAAA,IAAG,IAAI,CACvC,GAAIsL,IAAI,CAACC,QAAQ,CAAC,GAAG,CAAC,CAAED,IAAI,CAAG,GAAG,CAClC,OAAQA,IAAI,EACV,IAAK,IAAI,CAAExI,KAAK,CAAGuI,GAAG,EAAG,CAAC,CAAE,CAAGM,KAAK,CAAE,MACtC,IAAK,IAAI,CAAE7I,KAAK,CAAGuI,GAAG,EAAG,CAAC,CAAE,CAAGM,KAAK,CAAE,MACtC,IAAK,KAAK,CAAE3I,MAAM,CAAGqI,GAAG,EAAG,CAAC,CAAE,CAAGM,KAAK,CAAE,MACxC,IAAK,KAAK,CAAEzI,MAAM,CAAGmI,GAAG,EAAG,CAAC,CAAE,CAAGM,KAAK,CAAE,MACxC,IAAK,KAAK,CAAG1B,OAAO,CAAG,CAAC0B,KAAK,GAAG,CAAC,EAAE3B,UAAU,CAAC2B,KAAK,CAAE,CAAE7F,IAAI,CAAC8F,GAAG,CAAC5B,UAAU,CAAE,EAAK,GAAG,CAAIA,UAAU,CAAG,GAAG,CAAG,CAAElE,IAAI,CAAC+F,GAAG,CAAE,CAAE/F,IAAI,CAACgG,KAAK,CAAE9B,UAAU,CAAE,YAAY,CAAE,CAAG,YAAY,CAAC,CAAE,CAAC,IAAI,CAAC,CAAI,CAAC,CAAG,CAAElE,IAAI,CAACiG,IAAI,CAAC,CAAC/B,UAAU,CAAG,EAAI,CAAC,CAAEA,UAAW,GAAK,CAAC,CAAC,EAAE,YAAY,CAAI,GAAI,CAAC,CAAI,CAAC,EAAE,CAAC9G,MAAM,CAAGmI,GAAG,EAAG,CAAC,CAAE,CAAGpB,OAAO,CAAC,CAAC,CAAC,CAAC/G,MAAM,CAAImI,GAAG,CAAG,CAAE,EAAG,CAAC,CAAE,CAAGpB,OAAO,CAAC,CAAC,CAAC,CAAG,MACzV,IAAK,OAAO,CAAE7G,OAAO,CAAGiI,GAAG,EAAG,CAAC,CAAE,CAAGM,KAAK,CAAE,MAC3C,IAAK,QAAQ,CAAEtI,OAAO,CAAGgI,GAAG,EAAG,CAAC,CAAE,CAAGM,KAAK,CAAE,MAC5C,IAAK,GAAG,CAAExI,OAAO,CAAGkI,GAAG,EAAG,CAAC,CAAE,CAAGM,KAAK,CAAE,MACvC,QAASpJ,KAAK,CAAC,6BAA6B,CAAG+I,IAAI,CAAC,CAAC,CAEzD,CAEA,QAAS,CAAAT,QAAQA,CAACjI,IAAI,CAAE,CACpB,GAAI,CAACiI,QAAQ,CAAChE,KAAK,CAAEgE,QAAQ,CAAChE,KAAK,CAAG,CAAC,CAAC,CACxC,GAAI,CAACgE,QAAQ,CAAChE,KAAK,CAACjE,IAAI,CAAC,CAAE,CACzBiI,QAAQ,CAAChE,KAAK,CAACjE,IAAI,CAAC,CAAG,CAAC,CACxB,GAAIzG,mBAAmB,CAAEyG,IAAI,CAAG,WAAW,CAAGA,IAAI,CAClDlE,GAAG,CAACkE,IAAI,CAAC,CACX,CACF,CAEF,QAAS,CAAAoJ,wBAAwBA,CAACC,aAAa,CAAEhP,IAAI,CAAEiP,IAAI,CAAEC,QAAQ,CAAEC,QAAQ,CAAE,CAAC,CAElF,QAAS,CAAAC,gBAAgBA,CAACH,IAAI,CAAE,CAC5B,OAAQA,IAAI,EACR,IAAK,EAAC,CAAE,MAAO,EAAC,CAChB,IAAK,EAAC,CAAE,MAAO,EAAC,CAChB,IAAK,EAAC,CAAE,MAAO,EAAC,CAChB,IAAK,EAAC,CAAE,MAAO,EAAC,CAChB,QACI,KAAM,IAAI,CAAAI,SAAS,CAAC,qBAAqB,CAAGJ,IAAI,CAAC,CAAC,CAE5D,CAEF,QAAS,CAAAK,qBAAqBA,CAAA,CAAG,CAC7B,GAAI,CAAAC,KAAK,CAAG,GAAI,CAAAC,KAAK,CAAC,GAAG,CAAC,CAC1B,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG,GAAG,CAAE,EAAEA,CAAC,CAAE,CAC1BF,KAAK,CAACE,CAAC,CAAC,CAAGC,MAAM,CAACC,YAAY,CAACF,CAAC,CAAC,CACrC,CACAG,gBAAgB,CAAGL,KAAK,CAC1B,CACF,GAAI,CAAAK,gBAAgB,CAAG3O,SAAS,CAChC,QAAS,CAAA4O,gBAAgBA,CAACzB,GAAG,CAAE,CAC3B,GAAI,CAAAlN,GAAG,CAAG,EAAE,CACZ,GAAI,CAAA4O,CAAC,CAAG1B,GAAG,CACX,MAAOtI,MAAM,CAACgK,CAAC,CAAC,CAAE,CACd5O,GAAG,EAAI0O,gBAAgB,CAAC9J,MAAM,CAACgK,CAAC,EAAE,CAAC,CAAC,CACxC,CACA,MAAO,CAAA5O,GAAG,CACZ,CAEF,GAAI,CAAA6O,oBAAoB,CAAG,CAAC,CAAC,CAE7B,GAAI,CAAAC,eAAe,CAAG,CAAC,CAAC,CAExB,GAAI,CAAAC,gBAAgB,CAAG,CAAC,CAAC,CAEzB,GAAI,CAAAC,MAAM,CAAG,EAAE,CAEf,GAAI,CAAAC,MAAM,CAAG,EAAE,CACf,QAAS,CAAAC,qBAAqBA,CAACpQ,IAAI,CAAE,CACjC,GAAIiB,SAAS,GAAKjB,IAAI,CAAE,CACtB,MAAO,UAAU,CACnB,CACAA,IAAI,CAAGA,IAAI,CAAC6B,OAAO,CAAC,gBAAgB,CAAE,GAAG,CAAC,CAC1C,GAAI,CAAAW,CAAC,CAAGxC,IAAI,CAACqQ,UAAU,CAAC,CAAC,CAAC,CAC1B,GAAI7N,CAAC,EAAI0N,MAAM,EAAI1N,CAAC,EAAI2N,MAAM,CAAE,CAC9B,MAAO,GAAG,CAAGnQ,IAAI,CACnB,CACA,MAAO,CAAAA,IAAI,CACb,CACF,QAAS,CAAAsQ,mBAAmBA,CAACtQ,IAAI,CAAEuQ,IAAI,CAAE,CACrCvQ,IAAI,CAAGoQ,qBAAqB,CAACpQ,IAAI,CAAC,CAClC;AACA;AACA,MAAO,CAAAwQ,eAAA,IACJxQ,IAAI,CAAG,UAAW,CACjB,MAAO,CAAAuQ,IAAI,CAACpF,KAAK,CAAC,IAAI,CAAEpI,SAAS,CAAC,CACpC,CAAC,EACD/C,IAAI,CAAC,CACT,CACF,QAAS,CAAAyQ,WAAWA,CAACC,aAAa,CAAEC,SAAS,CAAE,CAC3C,GAAI,CAAAC,UAAU,CAAGN,mBAAmB,CAACK,SAAS,CAAE,SAAS1C,OAAO,CAAE,CAChE,IAAI,CAACjO,IAAI,CAAG2Q,SAAS,CACrB,IAAI,CAAC1C,OAAO,CAAGA,OAAO,CAEtB,GAAI,CAAA/K,KAAK,CAAI,GAAI,CAAA3D,KAAK,CAAC0O,OAAO,CAAC,CAAE/K,KAAK,CACtC,GAAIA,KAAK,GAAKjC,SAAS,CAAE,CACvB,IAAI,CAACiC,KAAK,CAAG,IAAI,CAACqL,QAAQ,EAAE,CAAG,IAAI,CAC/BrL,KAAK,CAACrB,OAAO,CAAC,oBAAoB,CAAE,EAAE,CAAC,CAC7C,CACF,CAAC,CAAC,CACF+O,UAAU,CAAC9J,SAAS,CAAGvI,MAAM,CAACsS,MAAM,CAACH,aAAa,CAAC5J,SAAS,CAAC,CAC7D8J,UAAU,CAAC9J,SAAS,CAACgK,WAAW,CAAGF,UAAU,CAC7CA,UAAU,CAAC9J,SAAS,CAACyH,QAAQ,CAAG,UAAW,CACzC,GAAI,IAAI,CAACN,OAAO,GAAKhN,SAAS,CAAE,CAC9B,MAAO,KAAI,CAACjB,IAAI,CAClB,CAAC,IAAM,CACL,MAAO,KAAI,CAACA,IAAI,CAAG,IAAI,CAAG,IAAI,CAACiO,OAAO,CACxC,CACF,CAAC,CAED,MAAO,CAAA2C,UAAU,CACnB,CACF,GAAI,CAAAG,YAAY,CAAG9P,SAAS,CAC5B,QAAS,CAAA+P,iBAAiBA,CAAC/C,OAAO,CAAE,CAChC,KAAM,IAAI,CAAA8C,YAAY,CAAC9C,OAAO,CAAC,CACjC,CAKF,GAAI,CAAAgD,aAAa,CAAGhQ,SAAS,CAC7B,QAAS,CAAAiQ,kBAAkBA,CAACjD,OAAO,CAAE,CACjC,KAAM,IAAI,CAAAgD,aAAa,CAAChD,OAAO,CAAC,CAClC,CACF,QAAS,CAAAkD,6BAA6BA,CAACC,OAAO,CAAEC,cAAc,CAAEC,iBAAiB,CAAE,CAC/EF,OAAO,CAACG,OAAO,CAAC,SAASlD,IAAI,CAAE,CAC3B4B,gBAAgB,CAAC5B,IAAI,CAAC,CAAGgD,cAAc,CAC3C,CAAC,CAAC,CAEF,QAAS,CAAAG,UAAUA,CAACC,cAAc,CAAE,CAChC,GAAI,CAAAC,gBAAgB,CAAGJ,iBAAiB,CAACG,cAAc,CAAC,CACxD,GAAIC,gBAAgB,CAAC9P,MAAM,GAAKwP,OAAO,CAACxP,MAAM,CAAE,CAC5CsP,kBAAkB,CAAC,iCAAiC,CAAC,CACzD,CACA,IAAK,GAAI,CAAAzB,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG2B,OAAO,CAACxP,MAAM,CAAE,EAAE6N,CAAC,CAAE,CACrCkC,YAAY,CAACP,OAAO,CAAC3B,CAAC,CAAC,CAAEiC,gBAAgB,CAACjC,CAAC,CAAC,CAAC,CACjD,CACJ,CAEA,GAAI,CAAAgC,cAAc,CAAG,GAAI,CAAAjC,KAAK,CAAC6B,cAAc,CAACzP,MAAM,CAAC,CACrD,GAAI,CAAAgQ,iBAAiB,CAAG,EAAE,CAC1B,GAAI,CAAAC,UAAU,CAAG,CAAC,CAClBR,cAAc,CAACE,OAAO,CAAC,SAACO,EAAE,CAAErC,CAAC,CAAK,CAChC,GAAIO,eAAe,CAAC+B,cAAc,CAACD,EAAE,CAAC,CAAE,CACtCL,cAAc,CAAChC,CAAC,CAAC,CAAGO,eAAe,CAAC8B,EAAE,CAAC,CACzC,CAAC,IAAM,CACLF,iBAAiB,CAACI,IAAI,CAACF,EAAE,CAAC,CAC1B,GAAI,CAAC/B,oBAAoB,CAACgC,cAAc,CAACD,EAAE,CAAC,CAAE,CAC5C/B,oBAAoB,CAAC+B,EAAE,CAAC,CAAG,EAAE,CAC/B,CACA/B,oBAAoB,CAAC+B,EAAE,CAAC,CAACE,IAAI,CAAC,UAAM,CAClCP,cAAc,CAAChC,CAAC,CAAC,CAAGO,eAAe,CAAC8B,EAAE,CAAC,CACvC,EAAED,UAAU,CACZ,GAAIA,UAAU,GAAKD,iBAAiB,CAAChQ,MAAM,CAAE,CAC3C4P,UAAU,CAACC,cAAc,CAAC,CAC5B,CACF,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CACF,GAAI,CAAC,GAAKG,iBAAiB,CAAChQ,MAAM,CAAE,CAClC4P,UAAU,CAACC,cAAc,CAAC,CAC5B,CACF,CACF,+BACA,QAAS,CAAAE,YAAYA,CAACM,OAAO,CAAEC,kBAAkB,CAAgB,IAAd,CAAAC,OAAO,CAAApP,SAAA,CAAAnB,MAAA,IAAAmB,SAAA,MAAA9B,SAAA,CAAA8B,SAAA,IAAG,CAAC,CAAC,CAC3D,GAAI,EAAE,gBAAgB,EAAI,CAAAmP,kBAAkB,CAAC,CAAE,CAC3C,KAAM,IAAI,CAAA7C,SAAS,CAAC,yDAAyD,CAAC,CAClF,CAEA,GAAI,CAAArP,IAAI,CAAGkS,kBAAkB,CAAClS,IAAI,CAClC,GAAI,CAACiS,OAAO,CAAE,CACVjB,iBAAiB,CAAC,QAAQ,CAAGhR,IAAI,CAAG,+CAA+C,CAAC,CACxF,CACA,GAAIgQ,eAAe,CAAC+B,cAAc,CAACE,OAAO,CAAC,CAAE,CACzC,GAAIE,OAAO,CAACC,4BAA4B,CAAE,CACtC,OACJ,CAAC,IAAM,CACHpB,iBAAiB,CAAC,wBAAwB,CAAGhR,IAAI,CAAG,SAAS,CAAC,CAClE,CACJ,CAEAgQ,eAAe,CAACiC,OAAO,CAAC,CAAGC,kBAAkB,CAC7C,MAAO,CAAAjC,gBAAgB,CAACgC,OAAO,CAAC,CAEhC,GAAIlC,oBAAoB,CAACgC,cAAc,CAACE,OAAO,CAAC,CAAE,CAChD,GAAI,CAAA/D,SAAS,CAAG6B,oBAAoB,CAACkC,OAAO,CAAC,CAC7C,MAAO,CAAAlC,oBAAoB,CAACkC,OAAO,CAAC,CACpC/D,SAAS,CAACqD,OAAO,CAAC,SAAC9I,EAAE,QAAK,CAAAA,EAAE,EAAE,GAAC,CACjC,CACF,CACF,QAAS,CAAA4J,sBAAsBA,CAACJ,OAAO,CAAEjS,IAAI,CAAEiP,IAAI,CAAEqD,SAAS,CAAEC,UAAU,CAAE,CACxE,GAAI,CAAAnK,KAAK,CAAGgH,gBAAgB,CAACH,IAAI,CAAC,CAElCjP,IAAI,CAAG6P,gBAAgB,CAAC7P,IAAI,CAAC,CAC7B2R,YAAY,CAACM,OAAO,CAAE,CAClBjS,IAAI,CAAEA,IAAI,CACV,cAAc,CAAE,SAAAwS,aAASC,EAAE,CAAE,CACzB;AACA;AACA,MAAO,CAAC,CAACA,EAAE,CACf,CAAC,CACD,YAAY,CAAE,SAAAC,WAASC,WAAW,CAAEC,CAAC,CAAE,CACnC,MAAO,CAAAA,CAAC,CAAGN,SAAS,CAAGC,UAAU,CACrC,CAAC,CACD,gBAAgB,CAAE,CAAC,CACnB,sBAAsB,CAAE,SAAAM,qBAASC,OAAO,CAAE,CACtC;AACA,GAAI,CAAAC,IAAI,CACR,GAAI9D,IAAI,GAAK,CAAC,CAAE,CACZ8D,IAAI,CAAGlN,KAAK,CAChB,CAAC,IAAM,IAAIoJ,IAAI,GAAK,CAAC,CAAE,CACnB8D,IAAI,CAAGhN,MAAM,CACjB,CAAC,IAAM,IAAIkJ,IAAI,GAAK,CAAC,CAAE,CACnB8D,IAAI,CAAG9M,MAAM,CACjB,CAAC,IAAM,CACH,KAAM,IAAI,CAAAoJ,SAAS,CAAC,6BAA6B,CAAGrP,IAAI,CAAC,CAC7D,CACA,MAAO,KAAI,CAAC,cAAc,CAAC,CAAC+S,IAAI,CAACD,OAAO,EAAI1K,KAAK,CAAC,CAAC,CACvD,CAAC,CACD4K,kBAAkB,CAAE,IAAM;AAC9B,CAAC,CAAC,CACJ,CAEF,mBACA,QAAS,CAAAC,eAAeA,CAAA,CAAG,CACvB;AACA,IAAI,CAACC,SAAS,CAAG,CAACjS,SAAS,CAAC,CAC5B,IAAI,CAACkS,QAAQ,CAAG,EAAE,CAClB,IAAI,CAAC7F,GAAG,CAAG,SAASzK,EAAE,CAAE,CACtBxB,MAAM,CAAC,IAAI,CAAC6R,SAAS,CAACrQ,EAAE,CAAC,GAAK5B,SAAS,CAAE,kBAAkB,CAAG4B,EAAE,CAAC,CACjE,MAAO,KAAI,CAACqQ,SAAS,CAACrQ,EAAE,CAAC,CAC3B,CAAC,CACD,IAAI,CAACuQ,QAAQ,CAAG,SAASC,MAAM,CAAE,CAC/B,GAAI,CAAAxQ,EAAE,CAAG,IAAI,CAACsQ,QAAQ,CAACG,GAAG,EAAE,EAAI,IAAI,CAACJ,SAAS,CAACtR,MAAM,CACrD,IAAI,CAACsR,SAAS,CAACrQ,EAAE,CAAC,CAAGwQ,MAAM,CAC3B,MAAO,CAAAxQ,EAAE,CACX,CAAC,CACD,IAAI,CAAC0Q,IAAI,CAAG,SAAS1Q,EAAE,CAAE,CACvBxB,MAAM,CAAC,IAAI,CAAC6R,SAAS,CAACrQ,EAAE,CAAC,GAAK5B,SAAS,CAAC,CACxC;AACA;AACA,IAAI,CAACiS,SAAS,CAACrQ,EAAE,CAAC,CAAG5B,SAAS,CAC9B,IAAI,CAACkS,QAAQ,CAACnB,IAAI,CAACnP,EAAE,CAAC,CACxB,CAAC,CACH,CACF,GAAI,CAAA2Q,aAAa,CAAG,GAAI,CAAAP,eAAe,EAAE,CAAC,CAC1C,QAAS,CAAAQ,cAAcA,CAACJ,MAAM,CAAE,CAC5B,GAAIA,MAAM,EAAIG,aAAa,CAACE,QAAQ,EAAI,CAAC,GAAK,EAAEF,aAAa,CAAClG,GAAG,CAAC+F,MAAM,CAAC,CAACM,QAAQ,CAAE,CAClFH,aAAa,CAACD,IAAI,CAACF,MAAM,CAAC,CAC5B,CACF,CAIF,QAAS,CAAAO,mBAAmBA,CAAA,CAAG,CAC3B,GAAI,CAAAC,KAAK,CAAG,CAAC,CACb,IAAK,GAAI,CAAApE,CAAC,CAAG+D,aAAa,CAACE,QAAQ,CAAEjE,CAAC,CAAG+D,aAAa,CAACN,SAAS,CAACtR,MAAM,CAAE,EAAE6N,CAAC,CAAE,CAC5E,GAAI+D,aAAa,CAACN,SAAS,CAACzD,CAAC,CAAC,GAAKxO,SAAS,CAAE,CAC5C,EAAE4S,KAAK,CACT,CACF,CACA,MAAO,CAAAA,KAAK,CACd,CAEF,QAAS,CAAAC,UAAUA,CAAA,CAAG,CAClB;AACA;AACAN,aAAa,CAACN,SAAS,CAAClB,IAAI,CAC1B,CAACtD,KAAK,CAAEzN,SAAS,CAAC,CAClB,CAACyN,KAAK,CAAE,IAAI,CAAC,CACb,CAACA,KAAK,CAAE,IAAI,CAAC,CACb,CAACA,KAAK,CAAE,KAAK,CAAC,CACf,CACD8E,aAAa,CAACE,QAAQ,CAAGF,aAAa,CAACN,SAAS,CAACtR,MAAM,CACvDvD,MAAM,CAAC,qBAAqB,CAAC,CAAGuV,mBAAmB,CACrD,CACF,GAAI,CAAAG,KAAK,CAAG,CAACC,OAAO,CAAC,SAAAA,QAACX,MAAM,CAAK,CAC3B,GAAI,CAACA,MAAM,CAAE,CACTrC,iBAAiB,CAAC,mCAAmC,CAAGqC,MAAM,CAAC,CACnE,CACA,MAAO,CAAAG,aAAa,CAAClG,GAAG,CAAC+F,MAAM,CAAC,CAAC3E,KAAK,CACxC,CAAC,CAACuF,QAAQ,CAAC,SAAAA,SAACvF,KAAK,CAAK,CACpB,OAAQA,KAAK,EACX,IAAK,CAAAzN,SAAS,CAAE,MAAO,EAAC,CACxB,IAAK,KAAI,CAAE,MAAO,EAAC,CACnB,IAAK,KAAI,CAAE,MAAO,EAAC,CACnB,IAAK,MAAK,CAAE,MAAO,EAAC,CACpB,QAAQ,CACN,MAAO,CAAAuS,aAAa,CAACJ,QAAQ,CAAC,CAACO,QAAQ,CAAE,CAAC,CAAEjF,KAAK,CAAEA,KAAK,CAAC,CAAC,CAC5D,CAAC,CAEL,CAAC,CAAC,CAIN,QAAS,CAAAwF,0BAA0BA,CAACpB,OAAO,CAAE,CACzC,MAAO,KAAI,CAAC,cAAc,CAAC,CAAC7M,MAAM,CAAG6M,OAAO,EAAG,CAAC,CAAE,CAAC,CACrD,CACF,QAAS,CAAAqB,uBAAuBA,CAAClC,OAAO,CAAEjS,IAAI,CAAE,CAC5CA,IAAI,CAAG6P,gBAAgB,CAAC7P,IAAI,CAAC,CAC7B2R,YAAY,CAACM,OAAO,CAAE,CACpBjS,IAAI,CAAEA,IAAI,CACV,cAAc,CAAE,SAAAwS,aAASa,MAAM,CAAE,CAC/B,GAAI,CAAAe,EAAE,CAAGL,KAAK,CAACC,OAAO,CAACX,MAAM,CAAC,CAC9BI,cAAc,CAACJ,MAAM,CAAC,CACtB,MAAO,CAAAe,EAAE,CACX,CAAC,CACD,YAAY,CAAE,SAAA1B,WAASC,WAAW,CAAEjE,KAAK,CAAE,CACzC,MAAO,CAAAqF,KAAK,CAACE,QAAQ,CAACvF,KAAK,CAAC,CAC9B,CAAC,CACD,gBAAgB,CAAE,CAAC,CACnB,sBAAsB,CAAEwF,0BAA0B,CAClDlB,kBAAkB,CAAE,IAAM;AAE1B;AACA;AACF,CAAC,CAAC,CACJ,CAEF,QAAS,CAAAqB,UAAUA,CAACC,CAAC,CAAE,CACnB,GAAIA,CAAC,GAAK,IAAI,CAAE,CACZ,MAAO,MAAM,CACjB,CACA,GAAI,CAAAC,CAAC,CAAG,MAAO,CAAAD,CAAC,CAChB,GAAIC,CAAC,GAAK,QAAQ,EAAIA,CAAC,GAAK,OAAO,EAAIA,CAAC,GAAK,UAAU,CAAE,CACrD,MAAO,CAAAD,CAAC,CAAC/F,QAAQ,EAAE,CACvB,CAAC,IAAM,CACH,MAAO,EAAE,CAAG+F,CAAC,CACjB,CACF,CAEF,QAAS,CAAAE,yBAAyBA,CAACxU,IAAI,CAAEoI,KAAK,CAAE,CAC5C,OAAQA,KAAK,EACT,IAAK,EAAC,CAAE,MAAO,UAAS0K,OAAO,CAAE,CAC7B,MAAO,KAAI,CAAC,cAAc,CAAC,CAAC3M,OAAO,CAAC2M,OAAO,EAAI,CAAC,CAAC,CAAC,CACtD,CAAC,CACD,IAAK,EAAC,CAAE,MAAO,UAASA,OAAO,CAAE,CAC7B,MAAO,KAAI,CAAC,cAAc,CAAC,CAAC1M,OAAO,CAAC0M,OAAO,EAAI,CAAC,CAAC,CAAC,CACtD,CAAC,CACD,QACI,KAAM,IAAI,CAAAzD,SAAS,CAAC,sBAAsB,CAAGrP,IAAI,CAAC,CAAC,CAE7D,CAIF,QAAS,CAAAyU,uBAAuBA,CAACxC,OAAO,CAAEjS,IAAI,CAAEiP,IAAI,CAAE,CAClD,GAAI,CAAA7G,KAAK,CAAGgH,gBAAgB,CAACH,IAAI,CAAC,CAClCjP,IAAI,CAAG6P,gBAAgB,CAAC7P,IAAI,CAAC,CAC7B2R,YAAY,CAACM,OAAO,CAAE,CACpBjS,IAAI,CAAEA,IAAI,CACV,cAAc,CAAE,SAAAwS,aAAS9D,KAAK,CAAE,CAC7B,MAAO,CAAAA,KAAK,CACf,CAAC,CACD,YAAY,CAAE,SAAAgE,WAASC,WAAW,CAAEjE,KAAK,CAAE,CACzC,GAAI,MAAO,CAAAA,KAAK,EAAI,QAAQ,EAAI,MAAO,CAAAA,KAAK,EAAI,SAAS,CAAE,CACzD,KAAM,IAAI,CAAAW,SAAS,CAAC,kBAAkB,CAAGgF,UAAU,CAAC3F,KAAK,CAAC,CAAG,OAAO,CAAG,IAAI,CAAC1O,IAAI,CAAC,CACnF,CACA;AACA;AACA,MAAO,CAAA0O,KAAK,CACd,CAAC,CACD,gBAAgB,CAAE,CAAC,CACnB,sBAAsB,CAAE8F,yBAAyB,CAACxU,IAAI,CAAEoI,KAAK,CAAC,CAC9D4K,kBAAkB,CAAE,IAAM;AAC5B,CAAC,CAAC,CACJ,CAGF,QAAS,CAAA0B,cAAcA,CAAC/B,WAAW,CAAE,CACjC,MAAOA,WAAW,CAAC/Q,MAAM,CAAE,CACzB,GAAI,CAAAwM,GAAG,CAAGuE,WAAW,CAACW,GAAG,EAAE,CAC3B,GAAI,CAAAqB,GAAG,CAAGhC,WAAW,CAACW,GAAG,EAAE,CAC3BqB,GAAG,CAACvG,GAAG,CAAC,CACV,CACF,CAGF,QAAS,CAAAwG,OAAOA,CAAC9D,WAAW,CAAE+D,YAAY,CAAE,CACxC,GAAI,EAAE/D,WAAW,WAAY,CAAAgE,QAAQ,CAAC,CAAE,CACtC,KAAM,IAAI,CAAAzF,SAAS,CAAC,oCAAoC,CAAG,MAAO,CAAAyB,WAAY,CAAG,0BAA0B,CAAC,CAC9G,CACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACM,GAAI,CAAAiE,KAAK,CAAGzE,mBAAmB,CAACQ,WAAW,CAAC9Q,IAAI,EAAI,qBAAqB,CAAE,UAAU,CAAC,CAAC,CAAC,CACxF+U,KAAK,CAACjO,SAAS,CAAGgK,WAAW,CAAChK,SAAS,CACvC,GAAI,CAAAkO,GAAG,CAAG,GAAI,CAAAD,KAAK,GAEnB,GAAI,CAAAE,CAAC,CAAGnE,WAAW,CAAC3F,KAAK,CAAC6J,GAAG,CAAEH,YAAY,CAAC,CAC5C,MAAQ,CAAAI,CAAC,WAAY,CAAA1W,MAAM,CAAI0W,CAAC,CAAGD,GAAG,CACxC,CACF,QAAS,CAAAE,oBAAoBA,CAACC,SAAS,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,cAAc,CAAEC,aAAa,CAAEC,OAAO,CAAE,CAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAI,CAAAC,QAAQ,CAAGL,QAAQ,CAACxT,MAAM,CAE9B,GAAI6T,QAAQ,CAAG,CAAC,CAAE,CAChBzE,iBAAiB,CAAC,gFAAgF,CAAC,CACrG,CAEA3P,MAAM,CAAC,CAACmU,OAAO,CAAE,8CAA8C,CAAC,CAEhE,GAAI,CAAAE,iBAAiB,CAAIN,QAAQ,CAAC,CAAC,CAAC,GAAK,IAAI,EAAIC,SAAS,GAAK,IAAK,CAEpE;AACJ;AACA;AACA;AACA;AAEI;AACA;AACA,GAAI,CAAAM,oBAAoB,CAAG,KAAK,CAEhC,IAAK,GAAI,CAAAlG,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG2F,QAAQ,CAACxT,MAAM,CAAE,EAAE6N,CAAC,CAAE,CAAE;AAC1C,GAAI2F,QAAQ,CAAC3F,CAAC,CAAC,GAAK,IAAI,EAAI2F,QAAQ,CAAC3F,CAAC,CAAC,CAACuD,kBAAkB,GAAK/R,SAAS,CAAE,CAAE;AAC1E0U,oBAAoB,CAAG,IAAI,CAC3B,MACF,CACF,CAEA,GAAI,CAAAC,OAAO,CAAIR,QAAQ,CAAC,CAAC,CAAC,CAACpV,IAAI,GAAK,MAAO,CAE3C,GAAI,CAAA6V,QAAQ,CAAG,EAAE,CACjB,GAAI,CAAAC,aAAa,CAAG,EAAE,CACtB,IAAK,GAAI,CAAArG,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGgG,QAAQ,CAAG,CAAC,CAAE,EAAEhG,CAAC,CAAE,CACrCoG,QAAQ,EAAI,CAACpG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAACA,CAAC,CACnCqG,aAAa,EAAI,CAACrG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAACA,CAAC,CAAC,OAAO,CAClD,CAEA,GAAI,CAAAsG,aAAa,CACb,kBAAkB,CAAC3F,qBAAqB,CAAC+E,SAAS,CAAC,CAAC,GAAG,CAACU,QAAQ,CAAC,OAAO,CACxE,2BAA2B,EAAEJ,QAAQ,CAAG,CAAC,CAAC,CAAC,OAAO,CAC9C,8BAA8B,CAACN,SAAS,CAAC,4DAA4D,EAAEM,QAAQ,CAAG,CAAC,CAAC,CAAC,aAAa,CACtI,KAAK,CAET,GAAIE,oBAAoB,CAAE,CACxBI,aAAa,EAAI,yBAAyB,CAC5C,CAEA,GAAI,CAAAC,SAAS,CAAGL,oBAAoB,CAAG,aAAa,CAAG,MAAM,CAC7D,GAAI,CAAAM,KAAK,CAAG,CAAC,mBAAmB,CAAE,SAAS,CAAE,IAAI,CAAE,gBAAgB,CAAE,SAAS,CAAE,YAAY,CAAC,CAC7F,GAAI,CAAAC,KAAK,CAAG,CAAClF,iBAAiB,CAAEsE,cAAc,CAAEC,aAAa,CAAEb,cAAc,CAAEU,QAAQ,CAAC,CAAC,CAAC,CAAEA,QAAQ,CAAC,CAAC,CAAC,CAAC,CAExG,GAAIM,iBAAiB,CAAE,CACrBK,aAAa,EAAI,wCAAwC,CAACC,SAAS,CAAC,YAAY,CAClF,CAEA,IAAK,GAAI,CAAAvG,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGgG,QAAQ,CAAG,CAAC,CAAE,EAAEhG,CAAC,CAAE,CACrCsG,aAAa,EAAI,SAAS,CAACtG,CAAC,CAAC,iBAAiB,CAACA,CAAC,CAAC,cAAc,CAACuG,SAAS,CAAC,OAAO,CAACvG,CAAC,CAAC,QAAQ,CAAC2F,QAAQ,CAAC3F,CAAC,CAAC,CAAC,CAAC,CAACzP,IAAI,CAAC,IAAI,CACpHiW,KAAK,CAACjE,IAAI,CAAC,SAAS,CAACvC,CAAC,CAAC,CACvByG,KAAK,CAAClE,IAAI,CAACoD,QAAQ,CAAC3F,CAAC,CAAC,CAAC,CAAC,CAAC,CAC3B,CAEA,GAAIiG,iBAAiB,CAAE,CACrBI,aAAa,CAAG,WAAW,EAAIA,aAAa,CAAClU,MAAM,CAAG,CAAC,CAAG,IAAI,CAAG,EAAE,CAAC,CAAGkU,aAAa,CACtF,CAEAC,aAAa,EACT,CAACH,OAAO,EAAIJ,OAAO,CAAG,WAAW,CAAC,EAAE,EAAI,YAAY,EAAEM,aAAa,CAAClU,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAACkU,aAAa,CAAC,MAAM,CAE9G,GAAIH,oBAAoB,CAAE,CACxBI,aAAa,EAAI,gCAAgC,CACnD,CAAC,IAAM,CACL,IAAK,GAAI,CAAAtG,CAAC,CAAGiG,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAEjG,CAAC,CAAG2F,QAAQ,CAACxT,MAAM,CAAE,EAAE6N,CAAC,CAAE,CAAE;AAC9D,GAAI,CAAA0G,SAAS,CAAI1G,CAAC,GAAK,CAAC,CAAG,WAAW,CAAI,KAAK,EAAEA,CAAC,CAAG,CAAC,CAAC,CAAC,OAAS,CACjE,GAAI2F,QAAQ,CAAC3F,CAAC,CAAC,CAACuD,kBAAkB,GAAK,IAAI,CAAE,CAC3C+C,aAAa,EAAII,SAAS,CAAC,QAAQ,CAACA,SAAS,CAAC,QAAQ,CAACf,QAAQ,CAAC3F,CAAC,CAAC,CAACzP,IAAI,CAAC,IAAI,CAC5EiW,KAAK,CAACjE,IAAI,CAACmE,SAAS,CAAC,OAAO,CAAC,CAC7BD,KAAK,CAAClE,IAAI,CAACoD,QAAQ,CAAC3F,CAAC,CAAC,CAACuD,kBAAkB,CAAC,CAC5C,CACF,CACF,CAEA,GAAI4C,OAAO,CAAE,CACXG,aAAa,EAAI,uCAAuC,CACvC,eAAe,CAClC,CAAC,IAAM,CACP,CAEAA,aAAa,EAAI,KAAK,CAEtBE,KAAK,CAACjE,IAAI,CAAC+D,aAAa,CAAC,CAEzB,MAAO,CAAAnB,OAAO,CAACE,QAAQ,CAAEmB,KAAK,CAAC,CAAC9K,KAAK,CAAC,IAAI,CAAE+K,KAAK,CAAC,CACpD,CAEF,QAAS,CAAAE,mBAAmBA,CAACC,KAAK,CAAEC,UAAU,CAAEnB,SAAS,CAAE,CACvD,GAAIlU,SAAS,GAAKoV,KAAK,CAACC,UAAU,CAAC,CAACC,aAAa,CAAE,CACjD,GAAI,CAAAC,QAAQ,CAAGH,KAAK,CAACC,UAAU,CAAC,CAChC;AACAD,KAAK,CAACC,UAAU,CAAC,CAAG,UAAW,CAC7B;AACA,GAAI,CAACD,KAAK,CAACC,UAAU,CAAC,CAACC,aAAa,CAACxE,cAAc,CAAChP,SAAS,CAACnB,MAAM,CAAC,CAAE,CACnEoP,iBAAiB,CAAC,YAAY,CAAGmE,SAAS,CAAG,gDAAgD,CAAGpS,SAAS,CAACnB,MAAM,CAAG,sBAAsB,CAAGyU,KAAK,CAACC,UAAU,CAAC,CAACC,aAAa,CAAG,IAAI,CAAC,CACvL,CACA,MAAO,CAAAF,KAAK,CAACC,UAAU,CAAC,CAACC,aAAa,CAACxT,SAAS,CAACnB,MAAM,CAAC,CAACuJ,KAAK,CAAC,IAAI,CAAEpI,SAAS,CAAC,CACjF,CAAC,CACD;AACAsT,KAAK,CAACC,UAAU,CAAC,CAACC,aAAa,CAAG,EAAE,CACpCF,KAAK,CAACC,UAAU,CAAC,CAACC,aAAa,CAACC,QAAQ,CAACf,QAAQ,CAAC,CAAGe,QAAQ,CAC/D,CACF,CAEF,oCACA,QAAS,CAAAC,kBAAkBA,CAACzW,IAAI,CAAE0O,KAAK,CAAEgI,YAAY,CAAE,CACnD,GAAIrY,MAAM,CAAC0T,cAAc,CAAC/R,IAAI,CAAC,CAAE,CAC/B,GAAIiB,SAAS,GAAKyV,YAAY,EAAKzV,SAAS,GAAK5C,MAAM,CAAC2B,IAAI,CAAC,CAACuW,aAAa,EAAItV,SAAS,GAAK5C,MAAM,CAAC2B,IAAI,CAAC,CAACuW,aAAa,CAACG,YAAY,CAAE,CAAE,CACtI1F,iBAAiB,CAAC,+BAA+B,CAAGhR,IAAI,CAAG,SAAS,CAAC,CACvE,CAEA;AACA;AACAoW,mBAAmB,CAAC/X,MAAM,CAAE2B,IAAI,CAAEA,IAAI,CAAC,CACvC,GAAI3B,MAAM,CAAC0T,cAAc,CAAC2E,YAAY,CAAC,CAAE,CACrC1F,iBAAiB,CAAC,sFAAsF,CAAG0F,YAAY,CAAG,IAAI,CAAC,CACnI,CACA;AACArY,MAAM,CAAC2B,IAAI,CAAC,CAACuW,aAAa,CAACG,YAAY,CAAC,CAAGhI,KAAK,CAClD,CAAC,IACI,CACHrQ,MAAM,CAAC2B,IAAI,CAAC,CAAG0O,KAAK,CACpB,GAAIzN,SAAS,GAAKyV,YAAY,CAAE,CAC9BrY,MAAM,CAAC2B,IAAI,CAAC,CAAC0W,YAAY,CAAGA,YAAY,CAC1C,CACF,CACF,CAEF,QAAS,CAAAC,mBAAmBA,CAAC9C,KAAK,CAAE+C,YAAY,CAAE,CAC9C,GAAI,CAAAC,KAAK,CAAG,EAAE,CACd,IAAK,GAAI,CAAApH,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGoE,KAAK,CAAEpE,CAAC,EAAE,CAAE,CAC5B;AACA;AACAoH,KAAK,CAAC7E,IAAI,CAAC9L,OAAO,CAAI0Q,YAAY,CAAGnH,CAAC,CAAG,CAAE,EAAG,CAAC,CAAE,CAAC,CACtD,CACA,MAAO,CAAAoH,KAAK,CACd,CAGF,oCACA,QAAS,CAAAC,mBAAmBA,CAAC9W,IAAI,CAAE0O,KAAK,CAAEgI,YAAY,CAAE,CACpD,GAAI,CAACrY,MAAM,CAAC0T,cAAc,CAAC/R,IAAI,CAAC,CAAE,CAChCkR,kBAAkB,CAAC,qCAAqC,CAAC,CAC3D,CACA;AACA,GAAIjQ,SAAS,GAAK5C,MAAM,CAAC2B,IAAI,CAAC,CAACuW,aAAa,EAAItV,SAAS,GAAKyV,YAAY,CAAE,CAC1ErY,MAAM,CAAC2B,IAAI,CAAC,CAACuW,aAAa,CAACG,YAAY,CAAC,CAAGhI,KAAK,CAClD,CAAC,IACI,CACHrQ,MAAM,CAAC2B,IAAI,CAAC,CAAG0O,KAAK,CACpBrQ,MAAM,CAAC2B,IAAI,CAAC,CAACyV,QAAQ,CAAGiB,YAAY,CACtC,CACF,CAIF,QAAS,CAAAK,aAAaA,CAACC,GAAG,CAAE5I,GAAG,CAAE6I,IAAI,CAAE,CACnC5V,MAAM,CAAE,UAAU,CAAG2V,GAAG,GAAK,CAAA3Y,MAAM,CAAE,mEAAmE,CAAG2Y,GAAG,CAAG,IAAI,CAAC,CACtH,GAAIC,IAAI,EAAIA,IAAI,CAACrV,MAAM,CAAE,CACvB;AACAP,MAAM,CAAC4V,IAAI,CAACrV,MAAM,GAAKoV,GAAG,CAACE,SAAS,CAAC,CAAC,CAAC,CAACrV,OAAO,CAAC,IAAI,CAAE,IAAI,CAAC,CAACD,MAAM,CAAC,CACrE,CAAC,IAAM,CACLP,MAAM,CAAC2V,GAAG,CAACpV,MAAM,EAAI,CAAC,CAAC,CACzB,CACA,GAAI,CAAAY,CAAC,CAAGnE,MAAM,CAAC,UAAU,CAAG2Y,GAAG,CAAC,CAChC,MAAO,CAAAC,IAAI,EAAIA,IAAI,CAACrV,MAAM,CAAGY,CAAC,CAAC2I,KAAK,CAAC,IAAI,CAAE,CAACiD,GAAG,CAAC,CAAC+I,MAAM,CAACF,IAAI,CAAC,CAAC,CAAGzU,CAAC,CAAC4U,IAAI,CAAC,IAAI,CAAEhJ,GAAG,CAAC,CACpF,CAEF,GAAI,CAAAiJ,eAAe,CAAG,EAAE,CAExB,QAAS,CAAAC,iBAAiBA,CAACC,OAAO,CAAE,CAChC,GAAI,CAAAC,IAAI,CAAGH,eAAe,CAACE,OAAO,CAAC,CACnC,GAAI,CAACC,IAAI,CAAE,CACT,GAAID,OAAO,EAAIF,eAAe,CAACzV,MAAM,CAAEyV,eAAe,CAACzV,MAAM,CAAG2V,OAAO,CAAG,CAAC,CAC3EF,eAAe,CAACE,OAAO,CAAC,CAAGC,IAAI,CAAGvQ,SAAS,CAACqG,GAAG,CAACiK,OAAO,CAAC,CAC1D,CACAlW,MAAM,CAAC4F,SAAS,CAACqG,GAAG,CAACiK,OAAO,CAAC,EAAIC,IAAI,CAAE,4DAA4D,CAAC,CACpG,MAAO,CAAAA,IAAI,CACb,CAEF,4BACA,QAAS,CAAAC,OAAOA,CAACT,GAAG,CAAE5I,GAAG,CAAE6I,IAAI,CAAE,CAC7B;AACA;AACA;AACA,GAAID,GAAG,CAACU,QAAQ,CAAC,GAAG,CAAC,CAAE,CACrB,MAAO,CAAAX,aAAa,CAACC,GAAG,CAAE5I,GAAG,CAAE6I,IAAI,CAAC,CACtC,CACA5V,MAAM,CAACiW,iBAAiB,CAAClJ,GAAG,CAAC,CAAE,kCAAkC,CAAGA,GAAG,CAAC,CACxE,GAAI,CAAAuJ,GAAG,CAAGL,iBAAiB,CAAClJ,GAAG,CAAC,CAACjD,KAAK,CAAC,IAAI,CAAE8L,IAAI,CAAC,CAClD,MAAO,CAAAU,GAAG,CACZ,CAEF,QAAS,CAAAC,YAAYA,CAACZ,GAAG,CAAE5I,GAAG,CAAE,CAC5B/M,MAAM,CAAC2V,GAAG,CAACU,QAAQ,CAAC,GAAG,CAAC,EAAIV,GAAG,CAACU,QAAQ,CAAC,GAAG,CAAC,CAAE,kDAAkD,CAAC,CAClG,GAAI,CAAAG,QAAQ,CAAG,EAAE,CACjB,MAAO,WAAW,CAChBA,QAAQ,CAACjW,MAAM,CAAG,CAAC,CACnBrD,MAAM,CAACC,MAAM,CAACqZ,QAAQ,CAAE9U,SAAS,CAAC,CAClC,MAAO,CAAA0U,OAAO,CAACT,GAAG,CAAE5I,GAAG,CAAEyJ,QAAQ,CAAC,CACpC,CAAC,CACH,CAGF,QAAS,CAAAC,uBAAuBA,CAACC,SAAS,CAAEC,WAAW,CAAE,CACrDD,SAAS,CAAGlI,gBAAgB,CAACkI,SAAS,CAAC,CAEvC,QAAS,CAAAE,aAAaA,CAAA,CAAG,CACvB,GAAIF,SAAS,CAACL,QAAQ,CAAC,GAAG,CAAC,CAAE,CAC3B,MAAO,CAAAE,YAAY,CAACG,SAAS,CAAEC,WAAW,CAAC,CAC7C,CACA,MAAO,CAAAV,iBAAiB,CAACU,WAAW,CAAC,CACvC,CAEA,GAAI,CAAAE,EAAE,CAAGD,aAAa,EAAE,CACxB,GAAI,MAAO,CAAAC,EAAE,EAAI,UAAU,CAAE,CACzBlH,iBAAiB,CAAC,0CAA0C,CAAG+G,SAAS,CAAG,IAAI,CAAGC,WAAW,CAAC,CAClG,CACA,MAAO,CAAAE,EAAE,CACX,CAIF,GAAI,CAAAC,gBAAgB,CAAGlX,SAAS,CAGhC,QAAS,CAAAmX,WAAWA,CAAC/J,IAAI,CAAE,CACvB,GAAI,CAAAD,GAAG,CAAGiK,cAAc,CAAChK,IAAI,CAAC,CAC9B,GAAI,CAAA+F,EAAE,CAAGvE,gBAAgB,CAACzB,GAAG,CAAC,CAC9BkK,KAAK,CAAClK,GAAG,CAAC,CACV,MAAO,CAAAgG,EAAE,CACX,CACF,QAAS,CAAAmE,qBAAqBA,CAACtK,OAAO,CAAEuK,KAAK,CAAE,CAC3C,GAAI,CAAAC,YAAY,CAAG,EAAE,CACrB,GAAI,CAAAC,IAAI,CAAG,CAAC,CAAC,CACb,QAAS,CAAAC,KAAKA,CAACtK,IAAI,CAAE,CACnB,GAAIqK,IAAI,CAACrK,IAAI,CAAC,CAAE,CACd,OACF,CACA,GAAI2B,eAAe,CAAC3B,IAAI,CAAC,CAAE,CACzB,OACF,CACA,GAAI4B,gBAAgB,CAAC5B,IAAI,CAAC,CAAE,CAC1B4B,gBAAgB,CAAC5B,IAAI,CAAC,CAACkD,OAAO,CAACoH,KAAK,CAAC,CACrC,OACF,CACAF,YAAY,CAACzG,IAAI,CAAC3D,IAAI,CAAC,CACvBqK,IAAI,CAACrK,IAAI,CAAC,CAAG,IAAI,CACnB,CACAmK,KAAK,CAACjH,OAAO,CAACoH,KAAK,CAAC,CAEpB,KAAM,IAAI,CAAAR,gBAAgB,CAAClK,OAAO,CAAG,IAAI,CAAGwK,YAAY,CAACG,GAAG,CAACR,WAAW,CAAC,CAACS,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CACzF,CAEF,QAAS,CAAAC,0BAA0BA,CAAC9Y,IAAI,CAAEyV,QAAQ,CAAEsD,eAAe,CAAEhB,SAAS,CAAEiB,UAAU,CAAEC,EAAE,CAAEzD,OAAO,CAAE,CACrG,GAAI,CAAAJ,QAAQ,CAAGuB,mBAAmB,CAAClB,QAAQ,CAAEsD,eAAe,CAAC,CAC7D/Y,IAAI,CAAG6P,gBAAgB,CAAC7P,IAAI,CAAC,CAE7BgZ,UAAU,CAAGlB,uBAAuB,CAACC,SAAS,CAAEiB,UAAU,CAAC,CAE3DvC,kBAAkB,CAACzW,IAAI,CAAE,UAAW,CAClCuY,qBAAqB,CAAC,cAAc,CAAGvY,IAAI,CAAG,uBAAuB,CAAEoV,QAAQ,CAAC,CAClF,CAAC,CAAEK,QAAQ,CAAG,CAAC,CAAC,CAEhBtE,6BAA6B,CAAC,EAAE,CAAEiE,QAAQ,CAAE,SAASA,QAAQ,CAAE,CAC7D,GAAI,CAAA8D,gBAAgB,CAAG,CAAC9D,QAAQ,CAAC,CAAC,CAAE,mBAAoB,IAAK,qBAAqB,CAAC+B,MAAM,CAAC/B,QAAQ,CAAChV,KAAK,CAAC,CAAC,CAAE,oBAAoB,CAChI0W,mBAAmB,CAAC9W,IAAI,CAAEkV,oBAAoB,CAAClV,IAAI,CAAEkZ,gBAAgB,CAAE,IAAK,qBAAsBF,UAAU,CAAEC,EAAE,CAAEzD,OAAO,CAAC,CAAEC,QAAQ,CAAG,CAAC,CAAC,CACzI,MAAO,EAAE,CACX,CAAC,CAAC,CACJ,CAIF,QAAS,CAAA0D,2BAA2BA,CAACnZ,IAAI,CAAEoI,KAAK,CAAEgR,MAAM,CAAE,CACtD;AACA,OAAQhR,KAAK,EACT,IAAK,EAAC,CAAE,MAAO,CAAAgR,MAAM,CACjB,QAAS,CAAAC,iBAAiBA,CAACvG,OAAO,CAAE,CAAE,MAAO,CAAAjN,KAAK,CAACiN,OAAO,CAAC,CAAE,CAAC,CAC9D,QAAS,CAAAwG,iBAAiBA,CAACxG,OAAO,CAAE,CAAE,MAAO,CAAAhN,MAAM,CAACgN,OAAO,CAAC,CAAE,CAAC,CACnE,IAAK,EAAC,CAAE,MAAO,CAAAsG,MAAM,CACjB,QAAS,CAAAG,kBAAkBA,CAACzG,OAAO,CAAE,CAAE,MAAO,CAAA/M,MAAM,CAAC+M,OAAO,EAAI,CAAC,CAAC,CAAE,CAAC,CACrE,QAAS,CAAA0G,kBAAkBA,CAAC1G,OAAO,CAAE,CAAE,MAAO,CAAA9M,OAAO,CAAC8M,OAAO,EAAI,CAAC,CAAC,CAAE,CAAC,CAC1E,IAAK,EAAC,CAAE,MAAO,CAAAsG,MAAM,CACjB,QAAS,CAAAK,kBAAkBA,CAAC3G,OAAO,CAAE,CAAE,MAAO,CAAA7M,MAAM,CAAC6M,OAAO,EAAI,CAAC,CAAC,CAAE,CAAC,CACrE,QAAS,CAAA4G,kBAAkBA,CAAC5G,OAAO,CAAE,CAAE,MAAO,CAAA5M,OAAO,CAAC4M,OAAO,EAAI,CAAC,CAAC,CAAE,CAAC,CAC1E,QACI,KAAM,IAAI,CAAAzD,SAAS,CAAC,wBAAwB,CAAGrP,IAAI,CAAC,CAAC,CAE/D,CAGF,QAAS,CAAA2Z,yBAAyBA,CAAC3K,aAAa,CAAEhP,IAAI,CAAEiP,IAAI,CAAEC,QAAQ,CAAEC,QAAQ,CAAE,CAC9EnP,IAAI,CAAG6P,gBAAgB,CAAC7P,IAAI,CAAC,CAC7B;AACA;AACA,GAAImP,QAAQ,GAAK,CAAC,CAAC,CAAE,CACjBA,QAAQ,CAAG,UAAU,CACzB,CAEA,GAAI,CAAA/G,KAAK,CAAGgH,gBAAgB,CAACH,IAAI,CAAC,CAElC,GAAI,CAAAuD,YAAY,CAAG,SAAAA,aAAC9D,KAAK,QAAK,CAAAA,KAAK,GAEnC,GAAIQ,QAAQ,GAAK,CAAC,CAAE,CAChB,GAAI,CAAA0K,QAAQ,CAAG,EAAE,CAAG,CAAC,CAAC3K,IAAI,CAC1BuD,YAAY,CAAG,SAAAA,aAAC9D,KAAK,QAAM,CAAAA,KAAK,EAAIkL,QAAQ,GAAMA,QAAQ,GAC9D,CAEA,GAAI,CAAAC,cAAc,CAAI7Z,IAAI,CAAC0X,QAAQ,CAAC,UAAU,CAAE,CAChD,GAAI,CAAAoC,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAIpL,KAAK,CAAEqL,UAAU,CAAK,CAC3C,GAAI,MAAO,CAAArL,KAAK,EAAI,QAAQ,EAAI,MAAO,CAAAA,KAAK,EAAI,SAAS,CAAE,CACzD,KAAM,IAAI,CAAAW,SAAS,CAAC,kBAAkB,CAAGgF,UAAU,CAAC3F,KAAK,CAAC,CAAG,OAAO,CAAGqL,UAAU,CAAC,CACpF,CACA,GAAIrL,KAAK,CAAGQ,QAAQ,EAAIR,KAAK,CAAGS,QAAQ,CAAE,CACxC,KAAM,IAAI,CAAAE,SAAS,CAAC,oBAAoB,CAAGgF,UAAU,CAAC3F,KAAK,CAAC,CAAG,uDAAuD,CAAG1O,IAAI,CAAG,uCAAuC,CAAGkP,QAAQ,CAAG,IAAI,CAAGC,QAAQ,CAAG,IAAI,CAAC,CAC9M,CACF,CAAC,CACD,GAAI,CAAAuD,UAAU,CACd,GAAImH,cAAc,CAAE,CAClBnH,UAAU,CAAG,SAAAA,WAASC,WAAW,CAAEjE,KAAK,CAAE,CACxCoL,eAAe,CAACpL,KAAK,CAAE,IAAI,CAAC1O,IAAI,CAAC,CACjC,MAAO,CAAA0O,KAAK,GAAK,CAAC,CACpB,CAAC,CACH,CAAC,IAAM,CACLgE,UAAU,CAAG,SAAAA,WAASC,WAAW,CAAEjE,KAAK,CAAE,CACxCoL,eAAe,CAACpL,KAAK,CAAE,IAAI,CAAC1O,IAAI,CAAC,CACjC;AACA;AACA,MAAO,CAAA0O,KAAK,CACd,CAAC,CACH,CACAiD,YAAY,CAAC3C,aAAa,CAAE,CAC1BhP,IAAI,CAAEA,IAAI,CACV,cAAc,CAAEwS,YAAY,CAC5B,YAAY,CAAEE,UAAU,CACxB,gBAAgB,CAAE,CAAC,CACnB,sBAAsB,CAAEyG,2BAA2B,CAACnZ,IAAI,CAAEoI,KAAK,CAAE8G,QAAQ,GAAK,CAAC,CAAC,CAChF8D,kBAAkB,CAAE,IAAM;AAC5B,CAAC,CAAC,CACJ,CAGF,QAAS,CAAAgH,6BAA6BA,CAAC/H,OAAO,CAAEgI,aAAa,CAAEja,IAAI,CAAE,CACjE,GAAI,CAAAka,WAAW,CAAG,CAChB3T,SAAS,CACTnF,UAAU,CACVoF,UAAU,CACVE,WAAW,CACXD,UAAU,CACVE,WAAW,CACXC,YAAY,CACZC,YAAY,CACb,CAED,GAAI,CAAAsT,EAAE,CAAGD,WAAW,CAACD,aAAa,CAAC,CAEnC,QAAS,CAAAG,gBAAgBA,CAAC/G,MAAM,CAAE,CAChCA,MAAM,CAAGA,MAAM,EAAI,CAAC,CACpB,GAAI,CAAAN,IAAI,CAAG7M,OAAO,CAClB,GAAI,CAAA+I,IAAI,CAAG8D,IAAI,CAACM,MAAM,CAAC,CAAE;AACzB,GAAI,CAAA3R,IAAI,CAAGqR,IAAI,CAACM,MAAM,CAAG,CAAC,CAAC,CAAE;AAC7B,MAAO,IAAI,CAAA8G,EAAE,CAACpH,IAAI,CAAC5R,MAAM,CAAEO,IAAI,CAAEuN,IAAI,CAAC,CACxC,CAEAjP,IAAI,CAAG6P,gBAAgB,CAAC7P,IAAI,CAAC,CAC7B2R,YAAY,CAACM,OAAO,CAAE,CACpBjS,IAAI,CAAEA,IAAI,CACV,cAAc,CAAEoa,gBAAgB,CAChC,gBAAgB,CAAE,CAAC,CACnB,sBAAsB,CAAEA,gBAC1B,CAAC,CAAE,CACDhI,4BAA4B,CAAE,IAChC,CAAC,CAAC,CACJ,CAMF,QAAS,CAAAiI,iBAAiBA,CAACC,GAAG,CAAEvH,IAAI,CAAEwH,MAAM,CAAEC,eAAe,CAAE,CAC3D;AACA;AACA,GAAI,EAAEA,eAAe,CAAG,CAAC,CAAC,CACxB,MAAO,EAAC,CAEV,GAAI,CAAAC,QAAQ,CAAGF,MAAM,CACrB,GAAI,CAAAG,MAAM,CAAGH,MAAM,CAAGC,eAAe,CAAG,CAAC,CAAE;AAC3C,IAAK,GAAI,CAAA/K,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG6K,GAAG,CAAC1Y,MAAM,CAAE,EAAE6N,CAAC,CAAE,CACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAI,CAAAkL,CAAC,CAAGL,GAAG,CAACjK,UAAU,CAACZ,CAAC,CAAC,CAAE;AAC3B,GAAIkL,CAAC,EAAI,MAAM,EAAIA,CAAC,EAAI,MAAM,CAAE,CAC9B,GAAI,CAAAC,EAAE,CAAGN,GAAG,CAACjK,UAAU,CAAC,EAAEZ,CAAC,CAAC,CAC5BkL,CAAC,CAAG,OAAO,EAAI,CAACA,CAAC,CAAG,KAAK,GAAK,EAAE,CAAC,CAAIC,EAAE,CAAG,KAAM,CAClD,CACA,GAAID,CAAC,EAAI,IAAI,CAAE,CACb,GAAIJ,MAAM,EAAIG,MAAM,CAAE,MACtB3H,IAAI,CAACwH,MAAM,EAAE,CAAC,CAAGI,CAAC,CACpB,CAAC,IAAM,IAAIA,CAAC,EAAI,KAAK,CAAE,CACrB,GAAIJ,MAAM,CAAG,CAAC,EAAIG,MAAM,CAAE,MAC1B3H,IAAI,CAACwH,MAAM,EAAE,CAAC,CAAG,IAAI,CAAII,CAAC,EAAI,CAAE,CAChC5H,IAAI,CAACwH,MAAM,EAAE,CAAC,CAAG,IAAI,CAAII,CAAC,CAAG,EAAG,CAClC,CAAC,IAAM,IAAIA,CAAC,EAAI,MAAM,CAAE,CACtB,GAAIJ,MAAM,CAAG,CAAC,EAAIG,MAAM,CAAE,MAC1B3H,IAAI,CAACwH,MAAM,EAAE,CAAC,CAAG,IAAI,CAAII,CAAC,EAAI,EAAG,CACjC5H,IAAI,CAACwH,MAAM,EAAE,CAAC,CAAG,IAAI,CAAKI,CAAC,EAAI,CAAC,CAAI,EAAG,CACvC5H,IAAI,CAACwH,MAAM,EAAE,CAAC,CAAG,IAAI,CAAII,CAAC,CAAG,EAAG,CAClC,CAAC,IAAM,CACL,GAAIJ,MAAM,CAAG,CAAC,EAAIG,MAAM,CAAE,MAC1B,GAAIC,CAAC,CAAG,QAAQ,CAAE/M,QAAQ,CAAC,6BAA6B,CAAGpG,WAAW,CAACmT,CAAC,CAAC,CAAG,wIAAwI,CAAC,CACrN5H,IAAI,CAACwH,MAAM,EAAE,CAAC,CAAG,IAAI,CAAII,CAAC,EAAI,EAAG,CACjC5H,IAAI,CAACwH,MAAM,EAAE,CAAC,CAAG,IAAI,CAAKI,CAAC,EAAI,EAAE,CAAI,EAAG,CACxC5H,IAAI,CAACwH,MAAM,EAAE,CAAC,CAAG,IAAI,CAAKI,CAAC,EAAI,CAAC,CAAI,EAAG,CACvC5H,IAAI,CAACwH,MAAM,EAAE,CAAC,CAAG,IAAI,CAAII,CAAC,CAAG,EAAG,CAClC,CACF,CACA;AACA5H,IAAI,CAACwH,MAAM,CAAC,CAAG,CAAC,CAChB,MAAO,CAAAA,MAAM,CAAGE,QAAQ,CAC1B,CACF,QAAS,CAAAI,YAAYA,CAACP,GAAG,CAAEQ,MAAM,CAAEN,eAAe,CAAE,CAChDnZ,MAAM,CAAC,MAAO,CAAAmZ,eAAe,EAAI,QAAQ,CAAE,2HAA2H,CAAC,CACvK,MAAO,CAAAH,iBAAiB,CAACC,GAAG,CAAExU,MAAM,CAACgV,MAAM,CAAEN,eAAe,CAAC,CAC/D,CAEF,QAAS,CAAAO,eAAeA,CAACT,GAAG,CAAE,CAC1B,GAAI,CAAAU,GAAG,CAAG,CAAC,CACX,IAAK,GAAI,CAAAvL,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG6K,GAAG,CAAC1Y,MAAM,CAAE,EAAE6N,CAAC,CAAE,CACnC;AACA;AACA;AACA;AACA,GAAI,CAAAK,CAAC,CAAGwK,GAAG,CAACjK,UAAU,CAACZ,CAAC,CAAC,CAAE;AAC3B,GAAIK,CAAC,EAAI,IAAI,CAAE,CACbkL,GAAG,EAAE,CACP,CAAC,IAAM,IAAIlL,CAAC,EAAI,KAAK,CAAE,CACrBkL,GAAG,EAAI,CAAC,CACV,CAAC,IAAM,IAAIlL,CAAC,EAAI,MAAM,EAAIA,CAAC,EAAI,MAAM,CAAE,CACrCkL,GAAG,EAAI,CAAC,CAAE,EAAEvL,CAAC,CACf,CAAC,IAAM,CACLuL,GAAG,EAAI,CAAC,CACV,CACF,CACA,MAAO,CAAAA,GAAG,CACZ,CAEF,GAAI,CAAAC,WAAW,CAAG,MAAO,CAAAC,WAAW,EAAI,WAAW,CAAG,GAAI,CAAAA,WAAW,CAAC,MAAM,CAAC,CAAGja,SAAS,CAEvF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OACE,QAAS,CAAAka,iBAAiBA,CAACC,WAAW,CAAEC,GAAG,CAAEC,cAAc,CAAE,CACzD,GAAI,CAAAZ,MAAM,CAAGW,GAAG,CAAGC,cAAc,CACjC,GAAI,CAAAC,MAAM,CAAGF,GAAG,CAChB;AACA;AACA;AACA;AACA;AACA,MAAOD,WAAW,CAACG,MAAM,CAAC,EAAI,EAAEA,MAAM,EAAIb,MAAM,CAAC,CAAE,EAAEa,MAAM,CAE3D,GAAIA,MAAM,CAAGF,GAAG,CAAG,EAAE,EAAID,WAAW,CAACja,MAAM,EAAI8Z,WAAW,CAAE,CAC1D,MAAO,CAAAA,WAAW,CAACO,MAAM,CAACJ,WAAW,CAACrU,QAAQ,CAACsU,GAAG,CAAEE,MAAM,CAAC,CAAC,CAC9D,CACA,GAAI,CAAAjB,GAAG,CAAG,EAAE,CACZ;AACA;AACA,MAAOe,GAAG,CAAGE,MAAM,CAAE,CACnB;AACA;AACA;AACA;AACA,GAAI,CAAAE,EAAE,CAAGL,WAAW,CAACC,GAAG,EAAE,CAAC,CAC3B,GAAI,EAAEI,EAAE,CAAG,IAAI,CAAC,CAAE,CAAEnB,GAAG,EAAI5K,MAAM,CAACC,YAAY,CAAC8L,EAAE,CAAC,CAAE,SAAU,CAC9D,GAAI,CAAAb,EAAE,CAAGQ,WAAW,CAACC,GAAG,EAAE,CAAC,CAAG,EAAE,CAChC,GAAI,CAACI,EAAE,CAAG,IAAI,GAAK,IAAI,CAAE,CAAEnB,GAAG,EAAI5K,MAAM,CAACC,YAAY,CAAE,CAAC8L,EAAE,CAAG,EAAE,GAAK,CAAC,CAAIb,EAAE,CAAC,CAAE,SAAU,CACxF,GAAI,CAAAc,EAAE,CAAGN,WAAW,CAACC,GAAG,EAAE,CAAC,CAAG,EAAE,CAChC,GAAI,CAACI,EAAE,CAAG,IAAI,GAAK,IAAI,CAAE,CACvBA,EAAE,CAAI,CAACA,EAAE,CAAG,EAAE,GAAK,EAAE,CAAKb,EAAE,EAAI,CAAE,CAAGc,EAAE,CACzC,CAAC,IAAM,CACL,GAAI,CAACD,EAAE,CAAG,IAAI,GAAK,IAAI,CAAE7N,QAAQ,CAAC,6BAA6B,CAAGpG,WAAW,CAACiU,EAAE,CAAC,CAAG,+EAA+E,CAAC,CACpKA,EAAE,CAAI,CAACA,EAAE,CAAG,CAAC,GAAK,EAAE,CAAKb,EAAE,EAAI,EAAG,CAAIc,EAAE,EAAI,CAAE,CAAIN,WAAW,CAACC,GAAG,EAAE,CAAC,CAAG,EAAG,CAC5E,CAEA,GAAII,EAAE,CAAG,OAAO,CAAE,CAChBnB,GAAG,EAAI5K,MAAM,CAACC,YAAY,CAAC8L,EAAE,CAAC,CAChC,CAAC,IAAM,CACL,GAAI,CAAAE,EAAE,CAAGF,EAAE,CAAG,OAAO,CACrBnB,GAAG,EAAI5K,MAAM,CAACC,YAAY,CAAC,MAAM,CAAIgM,EAAE,EAAI,EAAG,CAAE,MAAM,CAAIA,EAAE,CAAG,KAAM,CAAC,CACxE,CACF,CACA,MAAO,CAAArB,GAAG,CACZ,CAGA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OACE,QAAS,CAAAsB,YAAYA,CAACxN,GAAG,CAAEkN,cAAc,CAAE,CACvCja,MAAM,CAAC,MAAO,CAAA+M,GAAG,EAAI,QAAQ,CAAC,CAC9B,MAAO,CAAAA,GAAG,CAAG+M,iBAAiB,CAACrV,MAAM,CAAEsI,GAAG,CAAEkN,cAAc,CAAC,CAAG,EAAE,CAClE,CACF,QAAS,CAAAO,4BAA4BA,CAAC5J,OAAO,CAAEjS,IAAI,CAAE,CACjDA,IAAI,CAAG6P,gBAAgB,CAAC7P,IAAI,CAAC,CAC7B,GAAI,CAAA8b,eACJ;AAAA,CACG9b,IAAI,GAAK,aAAc,CAE1B2R,YAAY,CAACM,OAAO,CAAE,CACpBjS,IAAI,CAAEA,IAAI,CACV,cAAc,CAAE,SAAAwS,aAAS9D,KAAK,CAAE,CAC9B,GAAI,CAAA9M,MAAM,CAAGsE,OAAO,CAAGwI,KAAK,EAAG,CAAC,CAAE,CAClC,GAAI,CAAAqN,OAAO,CAAGrN,KAAK,CAAG,CAAC,CAEvB,GAAI,CAAA4L,GAAG,CACP,GAAIwB,eAAe,CAAE,CACnB,GAAI,CAAAE,cAAc,CAAGD,OAAO,CAC5B;AACA,IAAK,GAAI,CAAAtM,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAI7N,MAAM,CAAE,EAAE6N,CAAC,CAAE,CAChC,GAAI,CAAAwM,cAAc,CAAGF,OAAO,CAAGtM,CAAC,CAChC,GAAIA,CAAC,EAAI7N,MAAM,EAAIkE,MAAM,CAACmW,cAAc,CAAC,EAAI,CAAC,CAAE,CAC9C,GAAI,CAAAC,OAAO,CAAGD,cAAc,CAAGD,cAAc,CAC7C,GAAI,CAAAG,aAAa,CAAGP,YAAY,CAACI,cAAc,CAAEE,OAAO,CAAC,CACzD,GAAI5B,GAAG,GAAKrZ,SAAS,CAAE,CACrBqZ,GAAG,CAAG6B,aAAa,CACrB,CAAC,IAAM,CACL7B,GAAG,EAAI5K,MAAM,CAACC,YAAY,CAAC,CAAC,CAAC,CAC7B2K,GAAG,EAAI6B,aAAa,CACtB,CACAH,cAAc,CAAGC,cAAc,CAAG,CAAC,CACrC,CACF,CACF,CAAC,IAAM,CACL,GAAI,CAAAG,CAAC,CAAG,GAAI,CAAA5M,KAAK,CAAC5N,MAAM,CAAC,CACzB,IAAK,GAAI,CAAA6N,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG7N,MAAM,CAAE,EAAE6N,CAAC,CAAE,CAC/B2M,CAAC,CAAC3M,CAAC,CAAC,CAAGC,MAAM,CAACC,YAAY,CAAC7J,MAAM,CAACiW,OAAO,CAAGtM,CAAC,CAAC,CAAC,CACjD,CACA6K,GAAG,CAAG8B,CAAC,CAACvD,IAAI,CAAC,EAAE,CAAC,CAClB,CAEAP,KAAK,CAAC5J,KAAK,CAAC,CAEZ,MAAO,CAAA4L,GAAG,CACZ,CAAC,CACD,YAAY,CAAE,SAAA5H,WAASC,WAAW,CAAEjE,KAAK,CAAE,CACzC,GAAIA,KAAK,WAAY,CAAA2N,WAAW,CAAE,CAChC3N,KAAK,CAAG,GAAI,CAAAtN,UAAU,CAACsN,KAAK,CAAC,CAC/B,CAEA,GAAI,CAAA9M,MAAM,CACV,GAAI,CAAA0a,mBAAmB,CAAI,MAAO,CAAA5N,KAAK,EAAI,QAAS,CAEpD,GAAI,EAAE4N,mBAAmB,EAAI5N,KAAK,WAAY,CAAAtN,UAAU,EAAIsN,KAAK,WAAY,CAAA6N,iBAAiB,EAAI7N,KAAK,WAAY,CAAAnI,SAAS,CAAC,CAAE,CAC7HyK,iBAAiB,CAAC,uCAAuC,CAAC,CAC5D,CACA,GAAI8K,eAAe,EAAIQ,mBAAmB,CAAE,CAC1C1a,MAAM,CAAGmZ,eAAe,CAACrM,KAAK,CAAC,CACjC,CAAC,IAAM,CACL9M,MAAM,CAAG8M,KAAK,CAAC9M,MAAM,CACvB,CAEA;AACA,GAAI,CAAA4a,IAAI,CAAGC,OAAO,CAAC,CAAC,CAAG7a,MAAM,CAAG,CAAC,CAAC,CAClC,GAAI,CAAAwM,GAAG,CAAGoO,IAAI,CAAG,CAAC,CAClBtW,OAAO,CAAGsW,IAAI,EAAG,CAAC,CAAE,CAAG5a,MAAM,CAC7B,GAAIka,eAAe,EAAIQ,mBAAmB,CAAE,CAC1CzB,YAAY,CAACnM,KAAK,CAAEN,GAAG,CAAExM,MAAM,CAAG,CAAC,CAAC,CACtC,CAAC,IAAM,CACL,GAAI0a,mBAAmB,CAAE,CACvB,IAAK,GAAI,CAAA7M,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG7N,MAAM,CAAE,EAAE6N,CAAC,CAAE,CAC/B,GAAI,CAAAiN,QAAQ,CAAGhO,KAAK,CAAC2B,UAAU,CAACZ,CAAC,CAAC,CAClC,GAAIiN,QAAQ,CAAG,GAAG,CAAE,CAClBpE,KAAK,CAAClK,GAAG,CAAC,CACV4C,iBAAiB,CAAC,wDAAwD,CAAC,CAC7E,CACAlL,MAAM,CAACsI,GAAG,CAAGqB,CAAC,CAAC,CAAGiN,QAAQ,CAC5B,CACF,CAAC,IAAM,CACL,IAAK,GAAI,CAAAjN,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG7N,MAAM,CAAE,EAAE6N,CAAC,CAAE,CAC/B3J,MAAM,CAACsI,GAAG,CAAGqB,CAAC,CAAC,CAAGf,KAAK,CAACe,CAAC,CAAC,CAC5B,CACF,CACF,CAEA,GAAIkD,WAAW,GAAK,IAAI,CAAE,CACxBA,WAAW,CAACX,IAAI,CAACsG,KAAK,CAAEkE,IAAI,CAAC,CAC/B,CACA,MAAO,CAAAA,IAAI,CACb,CAAC,CACD,gBAAgB,CAAE,CAAC,CACnB,sBAAsB,CAAEtI,0BAA0B,CAClDlB,kBAAkB,CAAE,SAAAA,mBAAS5E,GAAG,CAAE,CAAEkK,KAAK,CAAClK,GAAG,CAAC,CAAE,CAClD,CAAC,CAAC,CACJ,CAKF,GAAI,CAAAuO,YAAY,CAAG,MAAO,CAAAzB,WAAW,EAAI,WAAW,CAAG,GAAI,CAAAA,WAAW,CAAC,UAAU,CAAC,CAAGja,SAAS,CAAC,CAC/F,QAAS,CAAA2b,aAAaA,CAACxO,GAAG,CAAEkN,cAAc,CAAE,CACxCja,MAAM,CAAC+M,GAAG,CAAG,CAAC,EAAI,CAAC,CAAE,+DAA+D,CAAC,CACrF,GAAI,CAAAmN,MAAM,CAAGnN,GAAG,CAChB;AACA;AACA;AACA;AACA,GAAI,CAAAiN,GAAG,CAAGE,MAAM,EAAI,CAAC,CACrB,GAAI,CAAAsB,MAAM,CAAGxB,GAAG,CAAGC,cAAc,CAAG,CAAC,CACrC;AACA;AACA,MAAO,EAAED,GAAG,EAAIwB,MAAM,CAAC,EAAI7W,OAAO,CAACqV,GAAG,CAAC,CAAE,EAAEA,GAAG,CAC9CE,MAAM,CAAGF,GAAG,EAAI,CAAC,CAEjB,GAAIE,MAAM,CAAGnN,GAAG,CAAG,EAAE,EAAIuO,YAAY,CACnC,MAAO,CAAAA,YAAY,CAACnB,MAAM,CAAC1V,MAAM,CAACiB,QAAQ,CAACqH,GAAG,CAAEmN,MAAM,CAAC,CAAC,CAE1D;AACA,GAAI,CAAAjB,GAAG,CAAG,EAAE,CAEZ;AACA;AACA;AACA,IAAK,GAAI,CAAA7K,CAAC,CAAG,CAAC,CAAE,EAAEA,CAAC,EAAI6L,cAAc,CAAG,CAAC,CAAC,CAAE,EAAE7L,CAAC,CAAE,CAC/C,GAAI,CAAAqN,QAAQ,CAAG/W,MAAM,CAAIqI,GAAG,CAAGqB,CAAC,CAAC,CAAE,EAAG,CAAC,CAAE,CACzC,GAAIqN,QAAQ,EAAI,CAAC,CAAE,MACnB;AACA;AACAxC,GAAG,EAAI5K,MAAM,CAACC,YAAY,CAACmN,QAAQ,CAAC,CACtC,CAEA,MAAO,CAAAxC,GAAG,CACZ,CAEF,QAAS,CAAAyC,aAAaA,CAACzC,GAAG,CAAEQ,MAAM,CAAEN,eAAe,CAAE,CACjDnZ,MAAM,CAACyZ,MAAM,CAAG,CAAC,EAAI,CAAC,CAAE,+DAA+D,CAAC,CACxFzZ,MAAM,CAAC,MAAO,CAAAmZ,eAAe,EAAI,QAAQ,CAAE,4HAA4H,CAAC,CACxK;AACA,GAAIA,eAAe,GAAKvZ,SAAS,CAAE,CACjCuZ,eAAe,CAAG,UAAU,CAC9B,CACA,GAAIA,eAAe,CAAG,CAAC,CAAE,MAAO,EAAC,CACjCA,eAAe,EAAI,CAAC,CAAE;AACtB,GAAI,CAAAwC,QAAQ,CAAGlC,MAAM,CACrB,GAAI,CAAAmC,eAAe,CAAIzC,eAAe,CAAGF,GAAG,CAAC1Y,MAAM,CAAC,CAAC,CAAK4Y,eAAe,CAAG,CAAC,CAAIF,GAAG,CAAC1Y,MAAM,CAC3F,IAAK,GAAI,CAAA6N,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGwN,eAAe,CAAE,EAAExN,CAAC,CAAE,CACxC;AACA,GAAI,CAAAqN,QAAQ,CAAGxC,GAAG,CAACjK,UAAU,CAACZ,CAAC,CAAC,CAAE;AAClC1J,MAAM,CAAG+U,MAAM,EAAG,CAAC,CAAE,CAAGgC,QAAQ,CAChChC,MAAM,EAAI,CAAC,CACb,CACA;AACA/U,MAAM,CAAG+U,MAAM,EAAG,CAAC,CAAE,CAAG,CAAC,CACzB,MAAO,CAAAA,MAAM,CAAGkC,QAAQ,CAC1B,CAEF,QAAS,CAAAE,gBAAgBA,CAAC5C,GAAG,CAAE,CAC3B,MAAO,CAAAA,GAAG,CAAC1Y,MAAM,CAAC,CAAC,CACrB,CAEF,QAAS,CAAAub,aAAaA,CAAC/O,GAAG,CAAEkN,cAAc,CAAE,CACxCja,MAAM,CAAC+M,GAAG,CAAG,CAAC,EAAI,CAAC,CAAE,gEAAgE,CAAC,CACtF,GAAI,CAAAqB,CAAC,CAAG,CAAC,CAET,GAAI,CAAA6K,GAAG,CAAG,EAAE,CACZ;AACA;AACA,MAAO,EAAE7K,CAAC,EAAI6L,cAAc,CAAG,CAAC,CAAC,CAAE,CACjC,GAAI,CAAA8B,KAAK,CAAGnX,MAAM,CAAImI,GAAG,CAAGqB,CAAC,CAAC,CAAE,EAAG,CAAC,CAAE,CACtC,GAAI2N,KAAK,EAAI,CAAC,CAAE,MAChB,EAAE3N,CAAC,CACH;AACA;AACA,GAAI2N,KAAK,EAAI,OAAO,CAAE,CACpB,GAAI,CAAAzB,EAAE,CAAGyB,KAAK,CAAG,OAAO,CACxB9C,GAAG,EAAI5K,MAAM,CAACC,YAAY,CAAC,MAAM,CAAIgM,EAAE,EAAI,EAAG,CAAE,MAAM,CAAIA,EAAE,CAAG,KAAM,CAAC,CACxE,CAAC,IAAM,CACLrB,GAAG,EAAI5K,MAAM,CAACC,YAAY,CAACyN,KAAK,CAAC,CACnC,CACF,CACA,MAAO,CAAA9C,GAAG,CACZ,CAEF,QAAS,CAAA+C,aAAaA,CAAC/C,GAAG,CAAEQ,MAAM,CAAEN,eAAe,CAAE,CACjDnZ,MAAM,CAACyZ,MAAM,CAAG,CAAC,EAAI,CAAC,CAAE,gEAAgE,CAAC,CACzFzZ,MAAM,CAAC,MAAO,CAAAmZ,eAAe,EAAI,QAAQ,CAAE,4HAA4H,CAAC,CACxK;AACA,GAAIA,eAAe,GAAKvZ,SAAS,CAAE,CACjCuZ,eAAe,CAAG,UAAU,CAC9B,CACA,GAAIA,eAAe,CAAG,CAAC,CAAE,MAAO,EAAC,CACjC,GAAI,CAAAwC,QAAQ,CAAGlC,MAAM,CACrB,GAAI,CAAAS,MAAM,CAAGyB,QAAQ,CAAGxC,eAAe,CAAG,CAAC,CAC3C,IAAK,GAAI,CAAA/K,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG6K,GAAG,CAAC1Y,MAAM,CAAE,EAAE6N,CAAC,CAAE,CACnC;AACA;AACA,GAAI,CAAAqN,QAAQ,CAAGxC,GAAG,CAACjK,UAAU,CAACZ,CAAC,CAAC,CAAE;AAClC,GAAIqN,QAAQ,EAAI,MAAM,EAAIA,QAAQ,EAAI,MAAM,CAAE,CAC5C,GAAI,CAAAQ,cAAc,CAAGhD,GAAG,CAACjK,UAAU,CAAC,EAAEZ,CAAC,CAAC,CACxCqN,QAAQ,CAAG,OAAO,EAAI,CAACA,QAAQ,CAAG,KAAK,GAAK,EAAE,CAAC,CAAIQ,cAAc,CAAG,KAAM,CAC5E,CACArX,MAAM,CAAG6U,MAAM,EAAG,CAAC,CAAE,CAAGgC,QAAQ,CAChChC,MAAM,EAAI,CAAC,CACX,GAAIA,MAAM,CAAG,CAAC,CAAGS,MAAM,CAAE,MAC3B,CACA;AACAtV,MAAM,CAAG6U,MAAM,EAAG,CAAC,CAAE,CAAG,CAAC,CACzB,MAAO,CAAAA,MAAM,CAAGkC,QAAQ,CAC1B,CAEF,QAAS,CAAAO,gBAAgBA,CAACjD,GAAG,CAAE,CAC3B,GAAI,CAAAU,GAAG,CAAG,CAAC,CACX,IAAK,GAAI,CAAAvL,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG6K,GAAG,CAAC1Y,MAAM,CAAE,EAAE6N,CAAC,CAAE,CACnC;AACA;AACA,GAAI,CAAAqN,QAAQ,CAAGxC,GAAG,CAACjK,UAAU,CAACZ,CAAC,CAAC,CAChC,GAAIqN,QAAQ,EAAI,MAAM,EAAIA,QAAQ,EAAI,MAAM,CAAE,EAAErN,CAAC,CAAE;AACnDuL,GAAG,EAAI,CAAC,CACV,CAEA,MAAO,CAAAA,GAAG,CACZ,CACF,QAAS,CAAAwC,6BAA6BA,CAACvL,OAAO,CAAEwL,QAAQ,CAAEzd,IAAI,CAAE,CAC5DA,IAAI,CAAG6P,gBAAgB,CAAC7P,IAAI,CAAC,CAC7B,GAAI,CAAA0d,YAAY,CAAEC,YAAY,CAAEC,OAAO,CAAEC,cAAc,CAAEzV,KAAK,CAC9D,GAAIqV,QAAQ,GAAK,CAAC,CAAE,CAClBC,YAAY,CAAGd,aAAa,CAC5Be,YAAY,CAAGZ,aAAa,CAC5Bc,cAAc,CAAGX,gBAAgB,CACjCU,OAAO,CAAG,SAAAA,QAAA,QAAM,CAAA5X,OAAO,GACvBoC,KAAK,CAAG,CAAC,CACX,CAAC,IAAM,IAAIqV,QAAQ,GAAK,CAAC,CAAE,CACzBC,YAAY,CAAGP,aAAa,CAC5BQ,YAAY,CAAGN,aAAa,CAC5BQ,cAAc,CAAGN,gBAAgB,CACjCK,OAAO,CAAG,SAAAA,QAAA,QAAM,CAAA1X,OAAO,GACvBkC,KAAK,CAAG,CAAC,CACX,CACAuJ,YAAY,CAACM,OAAO,CAAE,CACpBjS,IAAI,CAAEA,IAAI,CACV,cAAc,CAAE,SAAAwS,aAAS9D,KAAK,CAAE,CAC9B;AACA,GAAI,CAAA9M,MAAM,CAAGsE,OAAO,CAACwI,KAAK,EAAI,CAAC,CAAC,CAChC,GAAI,CAAA9I,IAAI,CAAGgY,OAAO,EAAE,CACpB,GAAI,CAAAtD,GAAG,CAEP,GAAI,CAAA0B,cAAc,CAAGtN,KAAK,CAAG,CAAC,CAC9B;AACA,IAAK,GAAI,CAAAe,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAI7N,MAAM,CAAE,EAAE6N,CAAC,CAAE,CAChC,GAAI,CAAAwM,cAAc,CAAGvN,KAAK,CAAG,CAAC,CAAGe,CAAC,CAAGgO,QAAQ,CAC7C,GAAIhO,CAAC,EAAI7N,MAAM,EAAIgE,IAAI,CAACqW,cAAc,EAAI7T,KAAK,CAAC,EAAI,CAAC,CAAE,CACrD,GAAI,CAAA0V,YAAY,CAAG7B,cAAc,CAAGD,cAAc,CAClD,GAAI,CAAAG,aAAa,CAAGuB,YAAY,CAAC1B,cAAc,CAAE8B,YAAY,CAAC,CAC9D,GAAIxD,GAAG,GAAKrZ,SAAS,CAAE,CACrBqZ,GAAG,CAAG6B,aAAa,CACrB,CAAC,IAAM,CACL7B,GAAG,EAAI5K,MAAM,CAACC,YAAY,CAAC,CAAC,CAAC,CAC7B2K,GAAG,EAAI6B,aAAa,CACtB,CACAH,cAAc,CAAGC,cAAc,CAAGwB,QAAQ,CAC5C,CACF,CAEAnF,KAAK,CAAC5J,KAAK,CAAC,CAEZ,MAAO,CAAA4L,GAAG,CACZ,CAAC,CACD,YAAY,CAAE,SAAA5H,WAASC,WAAW,CAAEjE,KAAK,CAAE,CACzC,GAAI,EAAE,MAAO,CAAAA,KAAK,EAAI,QAAQ,CAAC,CAAE,CAC/BsC,iBAAiB,CAAC,4CAA4C,CAAGhR,IAAI,CAAC,CACxE,CAEA;AACA,GAAI,CAAA4B,MAAM,CAAGic,cAAc,CAACnP,KAAK,CAAC,CAClC,GAAI,CAAAN,GAAG,CAAGqO,OAAO,CAAC,CAAC,CAAG7a,MAAM,CAAG6b,QAAQ,CAAC,CACxCvX,OAAO,CAACkI,GAAG,EAAI,CAAC,CAAC,CAAGxM,MAAM,EAAIwG,KAAK,CAEnCuV,YAAY,CAACjP,KAAK,CAAEN,GAAG,CAAG,CAAC,CAAExM,MAAM,CAAG6b,QAAQ,CAAC,CAE/C,GAAI9K,WAAW,GAAK,IAAI,CAAE,CACxBA,WAAW,CAACX,IAAI,CAACsG,KAAK,CAAElK,GAAG,CAAC,CAC9B,CACA,MAAO,CAAAA,GAAG,CACZ,CAAC,CACD,gBAAgB,CAAE,CAAC,CACnB,sBAAsB,CAAE8F,0BAA0B,CAClDlB,kBAAkB,CAAE,SAAAA,mBAAS5E,GAAG,CAAE,CAAEkK,KAAK,CAAClK,GAAG,CAAC,CAAE,CAClD,CAAC,CAAC,CACJ,CAGF,QAAS,CAAA2P,sBAAsBA,CAAC9L,OAAO,CAAEjS,IAAI,CAAE,CAC3CA,IAAI,CAAG6P,gBAAgB,CAAC7P,IAAI,CAAC,CAC7B2R,YAAY,CAACM,OAAO,CAAE,CAClB+L,MAAM,CAAE,IAAI,CAAE;AACdhe,IAAI,CAAEA,IAAI,CACV,gBAAgB,CAAE,CAAC,CACnB,cAAc,CAAE,SAAAwS,aAAA,CAAW,CACvB,MAAO,CAAAvR,SAAS,CACpB,CAAC,CACD,YAAY,CAAE,SAAAyR,WAASC,WAAW,CAAEC,CAAC,CAAE,CACnC;AACA,MAAO,CAAA3R,SAAS,CACpB,CACJ,CAAC,CAAC,CACJ,CAEF,QAAS,CAAAgd,sBAAsBA,CAACC,IAAI,CAAEpa,GAAG,CAAEqa,GAAG,CAAE,CAC5CrY,MAAM,CAACsY,UAAU,CAACF,IAAI,CAAEpa,GAAG,CAAEA,GAAG,CAAGqa,GAAG,CAAC,CACzC,CAEF,QAAS,CAAAE,UAAUA,CAAA,CAAG,CAClB,MAAO,CAAAvY,MAAM,CAAClE,MAAM,CACtB,CAEF,QAAS,CAAA0c,uBAAuBA,CAACC,aAAa,CAAE,CAC5CjZ,KAAK,CAAC,uCAAuC,CAAGiZ,aAAa,CAAG,gGAAgG,CAAG1Y,KAAK,CAACjE,MAAM,CAAG,4LAA4L,CAAC,CACjX,CACF,QAAS,CAAA4c,uBAAuBA,CAACD,aAAa,CAAE,CAC5C,GAAI,CAAAE,OAAO,CAAG3Y,MAAM,CAAClE,MAAM,CAC3B2c,aAAa,CAAGA,aAAa,GAAK,CAAC,CACnCD,uBAAuB,CAACC,aAAa,CAAC,CACxC,CAEF,GAAI,CAAAG,QAAQ,CAAG,CAACC,OAAO,CAAC1d,SAAS,CAACqM,GAAG,CAAC,SAAAA,IAAA,CAAW,CAC3CjM,MAAM,CAACqd,QAAQ,CAACC,OAAO,EAAI1d,SAAS,CAAC,CACrCyd,QAAQ,CAACC,OAAO,EAAI,CAAC,CACrB,GAAI,CAAAzd,GAAG,CAAG+E,MAAM,CAAIyY,QAAQ,CAACC,OAAO,CAAG,CAAE,EAAG,CAAC,CAAE,CAC/C,MAAO,CAAAzd,GAAG,CACZ,CAAC,CAAC0d,MAAM,CAAC,SAAAA,OAASxQ,GAAG,CAAE,CACrB,GAAI,CAAAlN,GAAG,CAAG0a,YAAY,CAACxN,GAAG,CAAC,CAC3B,MAAO,CAAAlN,GAAG,CACZ,CAAC,CAAC,CACN,QAAS,CAAA2d,SAASA,CAACC,EAAE,CAAE,CACnBxZ,KAAK,CAAC,qDAAqD,CAAC,CAC9D,CAEF,QAAS,CAAAyZ,0BAA0BA,CAACC,EAAE,CAAEC,EAAE,CAAE,CACxC5d,MAAM,CAAC2d,EAAE,EAAKA,EAAE,GAAK,CAAE,EAAIA,EAAE,GAAKA,EAAE,CAAC,CAAC,CAAC,CAAC,CAAE;AAC1C3d,MAAM,CAAC4d,EAAE,IAAMA,EAAE,CAAC,CAAC,CAAC,CAAC,CAAqB;AAC1C,MAAS,CAAAA,EAAE,CAAG,QAAQ,GAAM,CAAC,CAAG,QAAQ,CAAG,CAAC,CAACD,EAAE,CAAI,CAACA,EAAE,GAAK,CAAC,EAAIC,EAAE,CAAG,UAAU,CAAGC,GAAG,CACvF,CAKF,QAAS,CAAAC,QAAQA,CAACL,EAAE,CAAEM,UAAU,CAAEC,WAAW,CAAEC,MAAM,CAAEC,SAAS,CAAE,CAC9D,MAAO,GAAE,CACX,CAEF,GAAI,CAAAC,gBAAgB,CAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAEnC,QAAS,CAAAC,SAASA,CAACC,MAAM,CAAEC,IAAI,CAAE,CAC7B,GAAI,CAAAxe,MAAM,CAAGqe,gBAAgB,CAACE,MAAM,CAAC,CACrCre,MAAM,CAACF,MAAM,CAAC,CACd,GAAIwe,IAAI,GAAK,CAAC,EAAIA,IAAI,GAAK,EAAE,CAAE,CAC7B,CAACD,MAAM,GAAK,CAAC,CAAG/a,GAAG,CAAGlD,GAAG,EAAE0Z,iBAAiB,CAACha,MAAM,CAAE,CAAC,CAAC,CAAC,CACxDA,MAAM,CAACS,MAAM,CAAG,CAAC,CACnB,CAAC,IAAM,CACLT,MAAM,CAAC6Q,IAAI,CAAC2N,IAAI,CAAC,CACnB,CACF,CAEF,QAAS,CAAAC,mBAAmBA,CAAA,CAAG,CAC3B;AACAC,OAAO,CAAC,CAAC,CAAC,CACV,GAAIL,gBAAgB,CAAC,CAAC,CAAC,CAAC5d,MAAM,CAAE6d,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,CAChD,GAAID,gBAAgB,CAAC,CAAC,CAAC,CAAC5d,MAAM,CAAE6d,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,CAClD,CAGF,QAAS,CAAAK,SAASA,CAAChB,EAAE,CAAEiB,GAAG,CAAEC,MAAM,CAAEC,IAAI,CAAE,CACtC;AACA,GAAI,CAAA9B,GAAG,CAAG,CAAC,CACX,IAAK,GAAI,CAAA1O,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGuQ,MAAM,CAAEvQ,CAAC,EAAE,CAAE,CAC/B,GAAI,CAAArB,GAAG,CAAGlI,OAAO,CAAG6Z,GAAG,EAAG,CAAC,CAAE,CAC7B,GAAI,CAAA/E,GAAG,CAAG9U,OAAO,CAAI6Z,GAAG,CAAG,CAAE,EAAG,CAAC,CAAE,CACnCA,GAAG,EAAI,CAAC,CACR,IAAK,GAAI,CAAAG,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGlF,GAAG,CAAEkF,CAAC,EAAE,CAAE,CAC5BT,SAAS,CAACX,EAAE,CAAEhZ,MAAM,CAACsI,GAAG,CAAC8R,CAAC,CAAC,CAAC,CAC9B,CACA/B,GAAG,EAAInD,GAAG,CACZ,CACA9U,OAAO,CAAG+Z,IAAI,EAAG,CAAC,CAAE,CAAG9B,GAAG,CAC1B,MAAO,EAAC,CACV,CAEF,QAAS,CAAAgC,QAAQA,CAACC,KAAK,CAAE,CACrB,GAAI,CAAA5I,IAAI,CAAGnZ,MAAM,CAAC,GAAG,CAAG+hB,KAAK,CAAC,CAAE;AAChC/e,MAAM,CAACmW,IAAI,CAAE,+BAA+B,CAAG4I,KAAK,CAAG,4BAA4B,CAAC,CACpF,MAAO,CAAA5I,IAAI,CACb,CAEF,QAAS,CAAA6I,kBAAkBA,CAACxJ,KAAK,CAAE1V,MAAM,CAAE,CACvCE,MAAM,CAACwV,KAAK,CAACjV,MAAM,EAAI,CAAC,CAAE,iFAAiF,CAAC,CAC5GiE,KAAK,CAACmB,GAAG,CAAC6P,KAAK,CAAE1V,MAAM,CAAC,CAC1B,CAGF,QAAS,CAAAmf,mBAAmBA,CAAChG,GAAG,CAAE,CAC9B,GAAI,CAAArL,IAAI,CAAG8L,eAAe,CAACT,GAAG,CAAC,CAAG,CAAC,CACnC,GAAI,CAAApZ,GAAG,CAAGqf,UAAU,CAACtR,IAAI,CAAC,CAC1B4L,YAAY,CAACP,GAAG,CAAEpZ,GAAG,CAAE+N,IAAI,CAAC,CAC5B,MAAO,CAAA/N,GAAG,CACZ,CAGA;AACJ;AACA;AACA;AACA;AACA,OACE,QAAS,CAAAsf,KAAKA,CAACJ,KAAK,CAAEK,UAAU,CAAErL,QAAQ,CAAE6B,IAAI,CAAEyJ,IAAI,CAAE,CACpD;AACA,GAAI,CAAAC,GAAG,CAAG,CACR,QAAQ,CAAE,SAAAC,OAACtG,GAAG,CAAK,CACjB,GAAI,CAAApZ,GAAG,CAAG,CAAC,CACX,GAAIoZ,GAAG,GAAK,IAAI,EAAIA,GAAG,GAAKrZ,SAAS,EAAIqZ,GAAG,GAAK,CAAC,CAAE,CAAE;AACpD;AACApZ,GAAG,CAAGof,mBAAmB,CAAChG,GAAG,CAAC,CAChC,CACA,MAAO,CAAApZ,GAAG,CACZ,CAAC,CACD,OAAO,CAAE,SAAA2V,MAACgK,GAAG,CAAK,CAChB,GAAI,CAAA3f,GAAG,CAAGqf,UAAU,CAACM,GAAG,CAACjf,MAAM,CAAC,CAChCye,kBAAkB,CAACQ,GAAG,CAAE3f,GAAG,CAAC,CAC5B,MAAO,CAAAA,GAAG,CACZ,CACF,CAAC,CAED,QAAS,CAAA4f,kBAAkBA,CAAC5f,GAAG,CAAE,CAC/B,GAAIuf,UAAU,GAAK,QAAQ,CAAE,CAE3B,MAAO,CAAA7E,YAAY,CAAC1a,GAAG,CAAC,CAC1B,CACA,GAAIuf,UAAU,GAAK,SAAS,CAAE,MAAO,CAAAM,OAAO,CAAC7f,GAAG,CAAC,CACjD,MAAO,CAAAA,GAAG,CACZ,CAEA,GAAI,CAAAsW,IAAI,CAAG2I,QAAQ,CAACC,KAAK,CAAC,CAC1B,GAAI,CAAAY,KAAK,CAAG,EAAE,CACd,GAAI,CAAA9d,KAAK,CAAG,CAAC,CACb7B,MAAM,CAACof,UAAU,GAAK,OAAO,CAAE,oCAAoC,CAAC,CACpE,GAAIxJ,IAAI,CAAE,CACR,IAAK,GAAI,CAAAxH,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGwH,IAAI,CAACrV,MAAM,CAAE6N,CAAC,EAAE,CAAE,CACpC,GAAI,CAAAwR,SAAS,CAAGN,GAAG,CAACvL,QAAQ,CAAC3F,CAAC,CAAC,CAAC,CAChC,GAAIwR,SAAS,CAAE,CACb,GAAI/d,KAAK,GAAK,CAAC,CAAEA,KAAK,CAAGge,SAAS,EAAE,CACpCF,KAAK,CAACvR,CAAC,CAAC,CAAGwR,SAAS,CAAChK,IAAI,CAACxH,CAAC,CAAC,CAAC,CAC/B,CAAC,IAAM,CACLuR,KAAK,CAACvR,CAAC,CAAC,CAAGwH,IAAI,CAACxH,CAAC,CAAC,CACpB,CACF,CACF,CACA,GAAI,CAAAvO,GAAG,CAAGsW,IAAI,CAACrM,KAAK,CAAC,IAAI,CAAE6V,KAAK,CAAC,CACjC,QAAS,CAAAG,MAAMA,CAACjgB,GAAG,CAAE,CACnB,GAAIgC,KAAK,GAAK,CAAC,CAAEke,YAAY,CAACle,KAAK,CAAC,CACpC,MAAO,CAAA4d,kBAAkB,CAAC5f,GAAG,CAAC,CAChC,CAEAA,GAAG,CAAGigB,MAAM,CAACjgB,GAAG,CAAC,CACjB,MAAO,CAAAA,GAAG,CACZ,CAIA;AACJ;AACA;AACA;AACA,OACE,QAAS,CAAAmgB,KAAKA,CAACjB,KAAK,CAAEK,UAAU,CAAErL,QAAQ,CAAEsL,IAAI,CAAE,CAC9C,MAAO,WAAW,CAChB,MAAO,CAAAF,KAAK,CAACJ,KAAK,CAAEK,UAAU,CAAErL,QAAQ,CAAErS,SAAS,CAAE2d,IAAI,CAAC,CAC5D,CAAC,CACH,CACJpR,qBAAqB,EAAE,CACvByB,YAAY,CAAG1S,MAAM,CAAC,cAAc,CAAC,CAAGoS,WAAW,CAAClR,KAAK,CAAE,cAAc,CAAC,CAAC,CAC3E0R,aAAa,CAAG5S,MAAM,CAAC,eAAe,CAAC,CAAGoS,WAAW,CAAClR,KAAK,CAAE,eAAe,CAAC,CAAC,CAC9EuU,UAAU,EAAE,CAAC,CACbqE,gBAAgB,CAAG9Z,MAAM,CAAC,kBAAkB,CAAC,CAAGoS,WAAW,CAAClR,KAAK,CAAE,kBAAkB,CAAC,CAAC,CACvF,QAAS,CAAAsF,sBAAsBA,CAAA,CAAG,CAChC0I,iBAAiB,CAAC,eAAe,CAAC,CACpC,CACA,GAAI,CAAAb,WAAW,CAAG,CAChB,yBAAyB,CAAEqC,wBAAwB,CACnD,uBAAuB,CAAEsD,sBAAsB,CAC/C,wBAAwB,CAAE8B,uBAAuB,CACjD,wBAAwB,CAAEM,uBAAuB,CACjD,2BAA2B,CAAEqE,0BAA0B,CACvD,0BAA0B,CAAEa,yBAAyB,CACrD,8BAA8B,CAAEK,6BAA6B,CAC7D,6BAA6B,CAAE6B,4BAA4B,CAC3D,8BAA8B,CAAE2B,6BAA6B,CAC7D,uBAAuB,CAAEO,sBAAsB,CAC/C,uBAAuB,CAAEE,sBAAsB,CAC/C,wBAAwB,CAAEO,uBAAuB,CACjD,UAAU,CAAEK,SAAS,CACrB,SAAS,CAAEM,QAAQ,CACnB,UAAU,CAAEW,SACd,CAAC,CACD,GAAI,CAAA5U,GAAG,CAAGsB,UAAU,EAAE,CACtB,+BACA,GAAI,CAAA8U,kBAAkB,CAAGvW,mBAAmB,CAAC,mBAAmB,CAAC,CACjE,+BACA,GAAI,CAAAsN,cAAc,CAAGha,MAAM,CAAC,gBAAgB,CAAC,CAAG0M,mBAAmB,CAAC,eAAe,CAAC,CACpF,+BACA,GAAI,CAAAwW,4BAA4B,CAAGljB,MAAM,CAAC,8BAA8B,CAAC,CAAG0M,mBAAmB,CAAC,6BAA6B,CAAC,CAC9H,+BACA,GAAI,CAAAyW,iBAAiB,CAAGzW,mBAAmB,CAAC,kBAAkB,CAAC,CAC/D,+BACA,GAAI,CAAA8U,OAAO,CAAGxhB,MAAM,CAAC,SAAS,CAAC,CAAG0M,mBAAmB,CAAC,QAAQ,CAAC,CAC/D,+BACA,GAAI,CAAA0R,OAAO,CAAG1R,mBAAmB,CAAC,QAAQ,CAAC,CAC3C,+BACA,GAAI,CAAAuN,KAAK,CAAGvN,mBAAmB,CAAC,MAAM,CAAC,CACvC,+BACA,GAAI,CAAA0W,uBAAsB,CAAG,SAAAA,uBAAA,CAAW,CACtC,MAAO,CAACA,uBAAsB,CAAGpjB,MAAM,CAAC,KAAK,CAAC,CAAC,uBAAuB,CAAC,EAAE8M,KAAK,CAAC,IAAI,CAAEpI,SAAS,CAAC,CACjG,CAAC,CAED,+BACA,GAAI,CAAA2e,2BAA0B,CAAG,SAAAA,2BAAA,CAAW,CAC1C,MAAO,CAACA,2BAA0B,CAAGrjB,MAAM,CAAC,KAAK,CAAC,CAAC,2BAA2B,CAAC,EAAE8M,KAAK,CAAC,IAAI,CAAEpI,SAAS,CAAC,CACzG,CAAC,CAED,+BACA,GAAI,CAAA4e,2BAA0B,CAAG,SAAAA,2BAAA,CAAW,CAC1C,MAAO,CAACA,2BAA0B,CAAGtjB,MAAM,CAAC,KAAK,CAAC,CAAC,2BAA2B,CAAC,EAAE8M,KAAK,CAAC,IAAI,CAAEpI,SAAS,CAAC,CACzG,CAAC,CAED,+BACA,GAAI,CAAAqE,0BAAyB,CAAG,SAAAA,0BAAA,CAAW,CACzC,MAAO,CAACA,0BAAyB,CAAG/I,MAAM,CAAC,KAAK,CAAC,CAAC,0BAA0B,CAAC,EAAE8M,KAAK,CAAC,IAAI,CAAEpI,SAAS,CAAC,CACvG,CAAC,CAED,+BACA,GAAI,CAAAme,SAAS,CAAGnW,mBAAmB,CAAC,WAAW,CAAC,CAChD,+BACA,GAAI,CAAAqW,YAAY,CAAGrW,mBAAmB,CAAC,cAAc,CAAC,CACtD,+BACA,GAAI,CAAAwV,UAAU,CAAGxV,mBAAmB,CAAC,YAAY,CAAC,CAClD,+BACA,GAAI,CAAA6W,8BAA6B,CAAG,SAAAA,8BAAA,CAAW,CAC7C,MAAO,CAACA,8BAA6B,CAAGvjB,MAAM,CAAC,KAAK,CAAC,CAAC,8BAA8B,CAAC,EAAE8M,KAAK,CAAC,IAAI,CAAEpI,SAAS,CAAC,CAC/G,CAAC,CAED,+BACA,GAAI,CAAA8e,YAAY,CAAGxjB,MAAM,CAAC,cAAc,CAAC,CAAG0M,mBAAmB,CAAC,cAAc,CAAC,CAG/E;AACA;AAEA1M,MAAM,CAAC,OAAO,CAAC,CAAGmiB,KAAK,CACvBniB,MAAM,CAAC,OAAO,CAAC,CAAGgjB,KAAK,CACvB,GAAI,CAAAS,qBAAqB,CAAG,CAC1B,YAAY,CACZ,QAAQ,CACR,2BAA2B,CAC3B,YAAY,CACZ,cAAc,CACd,UAAU,CACV,SAAS,CACT,UAAU,CACV,WAAW,CACX,WAAW,CACX,WAAW,CACX,WAAW,CACX,cAAc,CACd,eAAe,CACf,eAAe,CACf,gBAAgB,CAChB,YAAY,CACZ,eAAe,CACf,cAAc,CACd,eAAe,CACf,2BAA2B,CAC3B,eAAe,CACf,SAAS,CACT,SAAS,CACT,mBAAmB,CACnB,YAAY,CACZ,wBAAwB,CACxB,iBAAiB,CACjB,sBAAsB,CACtB,qBAAqB,CACrB,kBAAkB,CAClB,WAAW,CACX,gBAAgB,CAChB,aAAa,CACb,WAAW,CACX,aAAa,CACb,WAAW,CACX,mBAAmB,CACnB,YAAY,CACZ,aAAa,CACb,cAAc,CACd,YAAY,CACZ,eAAe,CACf,sBAAsB,CACtB,wBAAwB,CACxB,sBAAsB,CACtB,wBAAwB,CACxB,gBAAgB,CAChB,gBAAgB,CAChB,qBAAqB,CACrB,qBAAqB,CACrB,eAAe,CACf,gBAAgB,CAChB,kBAAkB,CAClB,yBAAyB,CACzB,mBAAmB,CACnB,gBAAgB,CAChB,oBAAoB,CACpB,aAAa,CACb,gBAAgB,CAChB,gBAAgB,CAChB,QAAQ,CACR,QAAQ,CACR,QAAQ,CACR,cAAc,CACd,oBAAoB,CACpB,kBAAkB,CAClB,eAAe,CACf,eAAe,CACf,iBAAiB,CACjB,iBAAiB,CACjB,kBAAkB,CAClB,0BAA0B,CAC1B,wBAAwB,CACxB,iBAAiB,CACjB,uBAAuB,CACvB,uBAAuB,CACvB,oBAAoB,CACpB,4BAA4B,CAC5B,4BAA4B,CAC5B,yBAAyB,CACzB,4BAA4B,CAC5B,gCAAgC,CAChC,wCAAwC,CACxC,2BAA2B,CAC3B,mCAAmC,CACnC,mBAAmB,CACnB,gCAAgC,CAChC,wCAAwC,CACxC,+BAA+B,CAC/B,uCAAuC,CACvC,4BAA4B,CAC5B,oCAAoC,CACpC,yBAAyB,CACzB,kCAAkC,CAClC,uBAAuB,CACvB,cAAc,CACd,uCAAuC,CACvC,qBAAqB,CACrB,gCAAgC,CAChC,wCAAwC,CACxC,uCAAuC,CACvC,oBAAoB,CACpB,+BAA+B,CAC/B,uCAAuC,CACvC,4BAA4B,CAC5B,sBAAsB,CACtB,8BAA8B,CAC9B,mCAAmC,CACnC,sBAAsB,CACtB,SAAS,CACT,8BAA8B,CAC9B,sBAAsB,CACtB,sBAAsB,CACtB,UAAU,CACV,aAAa,CACb,cAAc,CACd,YAAY,CACZ,eAAe,CACf,gBAAgB,CAChB,wBAAwB,CACxB,wBAAwB,CACxB,sBAAsB,CACtB,qBAAqB,CACrB,uBAAuB,CACvB,sBAAsB,CACtB,YAAY,CACZ,aAAa,CACb,qBAAqB,CACrB,eAAe,CACf,kBAAkB,CAClB,kBAAkB,CAClB,aAAa,CACb,qBAAqB,CACrB,wBAAwB,CACxB,6BAA6B,CAC7B,qCAAqC,CACrC,sCAAsC,CACtC,iCAAiC,CACjC,+BAA+B,CAC/B,oBAAoB,CACpB,+BAA+B,CAC/B,gCAAgC,CAChC,gCAAgC,CAChC,eAAe,CACf,2BAA2B,CAC3B,yBAAyB,CACzB,4CAA4C,CAC5C,sBAAsB,CACtB,gCAAgC,CAChC,8BAA8B,CAC9B,cAAc,CACd,4BAA4B,CAC5B,oBAAoB,CACpB,aAAa,CACb,gBAAgB,CAChB,WAAW,CACX,aAAa,CACb,cAAc,CACd,aAAa,CACb,UAAU,CACV,qBAAqB,CACrB,oBAAoB,CACpB,aAAa,CACb,kBAAkB,CAClB,2BAA2B,CAC3B,6BAA6B,CAC7B,sBAAsB,CACtB,2BAA2B,CAC3B,2BAA2B,CAC3B,uBAAuB,CACvB,0BAA0B,CAC1B,0BAA0B,CAC1B,qCAAqC,CACrC,wCAAwC,CACxC,wBAAwB,CACxB,mBAAmB,CACnB,8BAA8B,CAC9B,8BAA8B,CAC9B,gCAAgC,CAChC,gCAAgC,CAChC,eAAe,CACf,oBAAoB,CACpB,iBAAiB,CACjB,iBAAiB,CACjB,iBAAiB,CACjB,kBAAkB,CAClB,aAAa,CACb,uBAAuB,CACvB,6BAA6B,CAC7B,mBAAmB,CACnB,oBAAoB,CACpB,uBAAuB,CACvB,yBAAyB,CACzB,qBAAqB,CACrB,kBAAkB,CAClB,iBAAiB,CACjB,4BAA4B,CAC5B,iBAAiB,CACjB,eAAe,CACf,cAAc,CACd,mBAAmB,CACnB,qBAAqB,CACrB,kBAAkB,CAClB,mBAAmB,CACnB,2BAA2B,CAC3B,uBAAuB,CACxB,CACDA,qBAAqB,CAACvQ,OAAO,CAAC1D,oBAAoB,CAAC,CAEnD,GAAI,CAAAkU,iBAAiB,CAAG,CACtB,KAAK,CACL,aAAa,CACb,WAAW,CACX,cAAc,CACd,WAAW,CACX,cAAc,CACd,kBAAkB,CAClB,qBAAqB,CACrB,iBAAiB,CACjB,eAAe,CACf,mBAAmB,CACnB,wBAAwB,CACxB,mBAAmB,CACnB,eAAe,CACf,iBAAiB,CACjB,WAAW,CACX,KAAK,CACL,KAAK,CACL,UAAU,CACV,OAAO,CACP,kBAAkB,CAClB,YAAY,CACZ,YAAY,CACZ,WAAW,CACX,cAAc,CACd,aAAa,CACb,aAAa,CACb,kBAAkB,CAClB,kBAAkB,CAClB,aAAa,CACb,YAAY,CACZ,yBAAyB,CACzB,KAAK,CACL,oBAAoB,CACpB,iBAAiB,CACjB,+BAA+B,CAC/B,4BAA4B,CAC5B,aAAa,CACb,gBAAgB,CAChB,KAAK,CACL,WAAW,CACX,SAAS,CACT,QAAQ,CACR,UAAU,CACV,cAAc,CACd,oBAAoB,CACpB,eAAe,CACf,cAAc,CACd,SAAS,CACT,iBAAiB,CACjB,4BAA4B,CAC5B,UAAU,CACV,kBAAkB,CAClB,qBAAqB,CACrB,UAAU,CACV,UAAU,CACV,MAAM,CACN,SAAS,CACT,aAAa,CACb,mBAAmB,CACnB,cAAc,CACd,mBAAmB,CACnB,cAAc,CACd,iBAAiB,CACjB,cAAc,CACd,eAAe,CACf,eAAe,CACf,kBAAkB,CAClB,eAAe,CACf,eAAe,CACf,kBAAkB,CAClB,qBAAqB,CACrB,oBAAoB,CACpB,UAAU,CACV,UAAU,CACV,oBAAoB,CACpB,2BAA2B,CAC3B,yBAAyB,CACzB,YAAY,CACZ,qBAAqB,CACrB,oBAAoB,CACpB,YAAY,CACZ,wBAAwB,CACxB,eAAe,CACf,iBAAiB,CACjB,SAAS,CACT,MAAM,CACN,IAAI,CACJ,OAAO,CACP,KAAK,CACL,QAAQ,CACR,QAAQ,CACR,sBAAsB,CACtB,2BAA2B,CAC3B,yBAAyB,CACzB,IAAI,CACJ,oCAAoC,CACpC,IAAI,CACJ,MAAM,CACN,KAAK,CACL,MAAM,CACN,UAAU,CACV,KAAK,CACL,SAAS,CACT,MAAM,CACN,cAAc,CACd,qBAAqB,CACrB,eAAe,CACf,cAAc,CACd,kBAAkB,CAClB,kBAAkB,CAClB,oBAAoB,CACpB,mBAAmB,CACnB,uBAAuB,CACvB,qBAAqB,CACrB,oBAAoB,CACpB,qBAAqB,CACrB,aAAa,CACb,qBAAqB,CACrB,YAAY,CACZ,qBAAqB,CACrB,iBAAiB,CACjB,sBAAsB,CACtB,kBAAkB,CAClB,oBAAoB,CACpB,cAAc,CACd,+BAA+B,CAC/B,kBAAkB,CAClB,uBAAuB,CACvB,kBAAkB,CAClB,aAAa,CACb,qBAAqB,CACrB,kBAAkB,CAClB,6BAA6B,CAC7B,2BAA2B,CAC3B,4BAA4B,CAC5B,gBAAgB,CAChB,SAAS,CACT,sBAAsB,CACtB,yBAAyB,CACzB,oBAAoB,CACpB,qBAAqB,CACrB,sBAAsB,CACtB,sBAAsB,CACtB,eAAe,CACf,eAAe,CACf,QAAQ,CACR,QAAQ,CACR,uBAAuB,CACvB,eAAe,CACf,eAAe,CACf,YAAY,CACZ,qBAAqB,CACrB,OAAO,CACP,cAAc,CACd,qBAAqB,CACrB,yBAAyB,CAC1B,CACDA,iBAAiB,CAACxQ,OAAO,CAACxD,uBAAuB,CAAC,CAIlD,GAAI,CAAAiU,SAAS,CAEb5Y,qBAAqB,CAAG,QAAS,CAAA6Y,SAASA,CAAA,CAAG,CAC3C;AACA,GAAI,CAACD,SAAS,CAAEE,GAAG,EAAE,CACrB,GAAI,CAACF,SAAS,CAAE5Y,qBAAqB,CAAG6Y,SAAS,CAAE;AACrD,CAAC,CAED,QAAS,CAAAE,cAAcA,CAAA,CAAG,CACxB;AACA;AACA;AACAV,uBAAsB,EAAE,CACxB;AACAva,gBAAgB,EAAE,CACpB,CAEA,QAAS,CAAAgb,GAAGA,CAAA,CAAG,CAEb,GAAIhZ,eAAe,CAAG,CAAC,CAAE,CACvB,OACF,CAEEiZ,cAAc,EAAE,CAElBja,MAAM,EAAE,CAER;AACA,GAAIgB,eAAe,CAAG,CAAC,CAAE,CACvB,OACF,CAEA,QAAS,CAAAkZ,KAAKA,CAAA,CAAG,CACf;AACA;AACA,GAAIJ,SAAS,CAAE,OACfA,SAAS,CAAG,IAAI,CAChB3jB,MAAM,CAAC,WAAW,CAAC,CAAG,IAAI,CAE1B,GAAImH,KAAK,CAAE,OAEX8C,WAAW,EAAE,CAEb,GAAIjK,MAAM,CAAC,sBAAsB,CAAC,CAAEA,MAAM,CAAC,sBAAsB,CAAC,EAAE,CAEpEgD,MAAM,CAAC,CAAChD,MAAM,CAAC,OAAO,CAAC,CAAE,0GAA0G,CAAC,CAEpIkK,OAAO,EAAE,CACX,CAEA,GAAIlK,MAAM,CAAC,WAAW,CAAC,CAAE,CACvBA,MAAM,CAAC,WAAW,CAAC,CAAC,YAAY,CAAC,CACjCqE,UAAU,CAAC,UAAW,CACpBA,UAAU,CAAC,UAAW,CACpBrE,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CACzB,CAAC,CAAE,CAAC,CAAC,CACL+jB,KAAK,EAAE,CACT,CAAC,CAAE,CAAC,CAAC,CACP,CAAC,IACD,CACEA,KAAK,EAAE,CACT,CACA/a,gBAAgB,EAAE,CACpB,CAEA,QAAS,CAAAgb,qBAAqBA,CAAA,CAAG,CAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAI,CAAAC,MAAM,CAAG3d,GAAG,CAChB,GAAI,CAAA4d,MAAM,CAAG9gB,GAAG,CAChB,GAAI,CAAA+gB,GAAG,CAAG,KAAK,CACf7d,GAAG,CAAGlD,GAAG,CAAG,SAAAA,IAACghB,CAAC,CAAK,CACjBD,GAAG,CAAG,IAAI,CACZ,CAAC,CACD,GAAI,CAAE;AACJ5C,mBAAmB,EAAE,CACvB,CAAE,MAAM3V,CAAC,CAAE,CAAC,CACZtF,GAAG,CAAG2d,MAAM,CACZ7gB,GAAG,CAAG8gB,MAAM,CACZ,GAAIC,GAAG,CAAE,CACP5U,QAAQ,CAAC,6JAA6J,CAAC,CACvKA,QAAQ,CAAC,wGAAwG,CAAC,CACpH,CACF,CAEA,GAAIvP,MAAM,CAAC,SAAS,CAAC,CAAE,CACrB,GAAI,MAAO,CAAAA,MAAM,CAAC,SAAS,CAAC,EAAI,UAAU,CAAEA,MAAM,CAAC,SAAS,CAAC,CAAG,CAACA,MAAM,CAAC,SAAS,CAAC,CAAC,CACnF,MAAOA,MAAM,CAAC,SAAS,CAAC,CAACuD,MAAM,CAAG,CAAC,CAAE,CACnCvD,MAAM,CAAC,SAAS,CAAC,CAACiV,GAAG,EAAE,EAAE,CAC3B,CACF,CAEA4O,GAAG,EAAE,CAGL"},"metadata":{},"sourceType":"module","externalDependencies":[]}